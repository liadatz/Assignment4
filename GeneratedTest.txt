

START - TEST 0
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(30);
generatedTree.insert2pass(32);
generatedTree.insert2pass(48);
generatedTree.insert2pass(18);
generatedTree.insert2pass(31);
generatedTree.insert2pass(37);
generatedTree.insert2pass(40);
generatedTree.insert2pass(67);
generatedTree.insert2pass(63);
generatedTree.insert2pass(11);
generatedTree.insert2pass(38);
generatedTree.insert2pass(96);
generatedTree.insert2pass(34);
generatedTree.insert2pass(22);
------------------------------

└── 32
    ├── 30
    │   ├── 11, 18, 22
    │   └── 31
    └── 38, 48, 67
        ├── 34, 37
        ├── 40
        ├── 63
        └── 83, 96

------------------------------

generatedTree.delete(32)
generatedTree.delete(40)

------------------------------

└── 34
    ├── 30
    │   ├── 11, 18, 22
    │   └── 31
    └── 48, 67
        ├── 37, 38
        ├── 63
        └── 83, 96


------------------------------

END - TEST 0


START - TEST 1
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
generatedTree.insert2pass(14);
generatedTree.insert2pass(41);
generatedTree.insert2pass(63);
generatedTree.insert2pass(94);
generatedTree.insert2pass(96);
generatedTree.insert2pass(72);
generatedTree.insert2pass(75);
generatedTree.insert2pass(84);
generatedTree.insert2pass(52);
generatedTree.insert2pass(59);
generatedTree.insert2pass(95);
------------------------------

└── 61
    ├── 37
    │   ├── 14, 30
    │   └── 41, 52, 59
    └── 72, 94
        ├── 63
        ├── 75, 84
        └── 95, 96

------------------------------

generatedTree.delete(63)
generatedTree.delete(84)

------------------------------

└── 61
    ├── 37
    │   ├── 14, 30
    │   └── 41, 52, 59
    └── 75, 95
        ├── 72
        ├── 94
        └── 96


------------------------------

END - TEST 1


START - TEST 2
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(77);
generatedTree.insert2pass(91);
generatedTree.insert2pass(45);
generatedTree.insert2pass(22);
generatedTree.insert2pass(63);
generatedTree.insert2pass(17);
generatedTree.insert2pass(78);
generatedTree.insert2pass(11);
generatedTree.insert2pass(62);
generatedTree.insert2pass(80);
generatedTree.insert2pass(99);
generatedTree.insert2pass(46);
------------------------------

└── 45, 77, 82
    ├── 11, 17, 22
    ├── 46, 62, 63
    ├── 78, 80
    └── 91, 99

------------------------------

generatedTree.delete(77)
generatedTree.delete(91)

------------------------------

└── 45, 63, 82
    ├── 11, 17, 22
    ├── 46, 62
    ├── 78, 80
    └── 99


------------------------------

END - TEST 2


START - TEST 3
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(69);
generatedTree.insert2pass(30);
generatedTree.insert2pass(47);
generatedTree.insert2pass(24);
generatedTree.insert2pass(70);
generatedTree.insert2pass(44);
generatedTree.insert2pass(12);
generatedTree.insert2pass(53);
generatedTree.insert2pass(84);
------------------------------

└── 30, 45, 69
    ├── 12, 24
    ├── 44
    ├── 47, 53
    └── 70, 84

------------------------------

generatedTree.delete(53)
generatedTree.delete(24)

------------------------------

└── 30, 45, 69
    ├── 12
    ├── 44
    ├── 47
    └── 70, 84


------------------------------

END - TEST 3


START - TEST 4
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(85);
generatedTree.insert2pass(35);
generatedTree.insert2pass(33);
generatedTree.insert2pass(77);
generatedTree.insert2pass(94);
generatedTree.insert2pass(60);
generatedTree.insert2pass(50);
generatedTree.insert2pass(71);
generatedTree.insert2pass(87);
generatedTree.insert2pass(36);
generatedTree.insert2pass(31);
generatedTree.insert2pass(54);
generatedTree.insert2pass(11);
generatedTree.insert2pass(59);
------------------------------

└── 60
    ├── 35, 50
    │   ├── 11, 31, 33
    │   ├── 36
    │   └── 54, 59
    └── 85
        ├── 71, 77
        └── 87, 89, 94

------------------------------

generatedTree.delete(50)
generatedTree.delete(87)
generatedTree.delete(36)

------------------------------

└── 60
    ├── 33, 54
    │   ├── 11, 31
    │   ├── 35
    │   └── 59
    └── 85
        ├── 71, 77
        └── 89, 94


------------------------------

END - TEST 4


START - TEST 5
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(42);
generatedTree.insert2pass(39);
generatedTree.insert2pass(13);
generatedTree.insert2pass(69);
generatedTree.insert2pass(12);
generatedTree.insert2pass(46);
generatedTree.insert2pass(82);
generatedTree.insert2pass(31);
generatedTree.insert2pass(18);
generatedTree.insert2pass(32);
generatedTree.insert2pass(16);
generatedTree.insert2pass(22);
generatedTree.insert2pass(27);
generatedTree.insert2pass(97);
generatedTree.insert2pass(71);
------------------------------

└── 39
    ├── 13, 18, 29
    │   ├── 12
    │   ├── 16
    │   ├── 22, 27
    │   └── 31, 32
    └── 46, 82
        ├── 42
        ├── 69, 71
        └── 97

------------------------------

generatedTree.delete(16)
generatedTree.delete(82)

------------------------------

└── 39
    ├── 13, 22, 29
    │   ├── 12
    │   ├── 18
    │   ├── 27
    │   └── 31, 32
    └── 46, 71
        ├── 42
        ├── 69
        └── 97


------------------------------

END - TEST 5


START - TEST 6
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(41);
generatedTree.insert2pass(74);
generatedTree.insert2pass(99);
generatedTree.insert2pass(45);
------------------------------

└── 41
    ├── 29
    └── 45, 74, 99

------------------------------

generatedTree.delete(41)

------------------------------

└── 45
    ├── 29
    └── 74, 99


------------------------------

END - TEST 6


START - TEST 7
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(72);
generatedTree.insert2pass(29);
generatedTree.insert2pass(78);
generatedTree.insert2pass(12);
generatedTree.insert2pass(33);
generatedTree.insert2pass(46);
generatedTree.insert2pass(83);
generatedTree.insert2pass(87);
generatedTree.insert2pass(97);
generatedTree.insert2pass(20);
generatedTree.insert2pass(42);
generatedTree.insert2pass(16);
generatedTree.insert2pass(49);
generatedTree.insert2pass(52);
generatedTree.insert2pass(81);
generatedTree.insert2pass(82);
generatedTree.insert2pass(25);
------------------------------

└── 72
    ├── 16, 29, 42
    │   ├── 12
    │   ├── 20, 25
    │   ├── 33
    │   └── 46, 49, 52
    └── 83
        ├── 78, 81, 82
        └── 87, 97

------------------------------

generatedTree.delete(29)
generatedTree.delete(49)

------------------------------

└── 72
    ├── 16, 25, 42
    │   ├── 12
    │   ├── 20
    │   ├── 33
    │   └── 46, 52
    └── 83
        ├── 78, 81, 82
        └── 87, 97


------------------------------

END - TEST 7


START - TEST 8
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(82);
generatedTree.insert2pass(13);
generatedTree.insert2pass(59);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(76);
generatedTree.insert2pass(83);
generatedTree.insert2pass(20);
------------------------------

└── 15, 70, 82
    ├── 13
    ├── 20, 59
    ├── 76
    └── 83, 89

------------------------------

generatedTree.delete(83)
generatedTree.delete(70)
generatedTree.delete(15)

------------------------------

└── 59, 82
    ├── 13, 20
    ├── 76
    └── 89


------------------------------

END - TEST 8


START - TEST 9
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(68);
generatedTree.insert2pass(53);
generatedTree.insert2pass(34);
generatedTree.insert2pass(77);
------------------------------

└── 68
    ├── 34, 53
    └── 75, 77

------------------------------

generatedTree.delete(68)

------------------------------

└── 53
    ├── 34
    └── 75, 77


------------------------------

END - TEST 9


START - TEST 10
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(98);
generatedTree.insert2pass(87);
generatedTree.insert2pass(59);
generatedTree.insert2pass(11);
generatedTree.insert2pass(15);
------------------------------

└── 59, 87
    ├── 11, 15
    ├── 64
    └── 98

------------------------------

generatedTree.delete(87)
generatedTree.delete(15)
generatedTree.delete(98)

------------------------------

└── 59
    ├── 11
    └── 64


------------------------------

END - TEST 10


START - TEST 11
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(28);
generatedTree.insert2pass(88);
generatedTree.insert2pass(73);
generatedTree.insert2pass(54);
generatedTree.insert2pass(30);
generatedTree.insert2pass(31);
generatedTree.insert2pass(57);
generatedTree.insert2pass(37);
generatedTree.insert2pass(75);
generatedTree.insert2pass(81);
generatedTree.insert2pass(23);
generatedTree.insert2pass(55);
generatedTree.insert2pass(33);
generatedTree.insert2pass(82);
generatedTree.insert2pass(96);
------------------------------

└── 54
    ├── 30
    │   ├── 23, 28
    │   └── 31, 33, 37
    └── 73, 88
        ├── 55, 57
        ├── 75, 81, 82
        └── 95, 96

------------------------------

generatedTree.delete(75)
generatedTree.delete(28)

------------------------------

└── 73
    ├── 30, 54
    │   ├── 23
    │   ├── 31, 33, 37
    │   └── 55, 57
    └── 88
        ├── 81, 82
        └── 95, 96


------------------------------

END - TEST 11


START - TEST 12
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(21);
generatedTree.insert2pass(93);
generatedTree.insert2pass(51);
generatedTree.insert2pass(43);
generatedTree.insert2pass(42);
generatedTree.insert2pass(20);
generatedTree.insert2pass(36);
generatedTree.insert2pass(99);
generatedTree.insert2pass(32);
generatedTree.insert2pass(74);
generatedTree.insert2pass(38);
generatedTree.insert2pass(69);
generatedTree.insert2pass(90);
generatedTree.insert2pass(45);
generatedTree.insert2pass(89);
------------------------------

└── 42
    ├── 21
    │   ├── 20
    │   └── 32, 36, 38
    └── 47, 69, 93
        ├── 43, 45
        ├── 51
        ├── 74, 89, 90
        └── 99

------------------------------

generatedTree.delete(36)
generatedTree.delete(51)

------------------------------

└── 47
    ├── 21, 42
    │   ├── 20
    │   ├── 32, 38
    │   └── 43, 45
    └── 74, 93
        ├── 69
        ├── 89, 90
        └── 99


------------------------------

END - TEST 12


START - TEST 13
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(33);
generatedTree.insert2pass(95);
generatedTree.insert2pass(45);
generatedTree.insert2pass(63);
generatedTree.insert2pass(64);
------------------------------

└── 45, 95
    ├── 33
    ├── 63, 64
    └── 98

------------------------------

generatedTree.delete(64)

------------------------------

└── 45, 95
    ├── 33
    ├── 63
    └── 98


------------------------------

END - TEST 13


START - TEST 14
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(25);
generatedTree.insert2pass(81);
generatedTree.insert2pass(79);
generatedTree.insert2pass(26);
generatedTree.insert2pass(42);
generatedTree.insert2pass(28);
generatedTree.insert2pass(43);
generatedTree.insert2pass(90);
generatedTree.insert2pass(69);
generatedTree.insert2pass(45);
generatedTree.insert2pass(31);
generatedTree.insert2pass(85);
generatedTree.insert2pass(57);
generatedTree.insert2pass(97);
generatedTree.insert2pass(47);
generatedTree.insert2pass(65);
generatedTree.insert2pass(33);
generatedTree.insert2pass(37);
------------------------------

└── 28, 79
    ├── 25
    │   ├── 15
    │   └── 26
    ├── 33, 43, 57
    │   ├── 31
    │   ├── 37, 42
    │   ├── 45, 47
    │   └── 65, 69
    └── 85
        ├── 81
        └── 90, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(43)

------------------------------

└── 28, 57
    ├── 25
    │   ├── 15
    │   └── 26
    ├── 33, 42
    │   ├── 31
    │   ├── 37
    │   └── 45, 47
    └── 79, 85
        ├── 65, 69
        ├── 81
        └── 90


------------------------------

END - TEST 14


START - TEST 15
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(15);
generatedTree.insert2pass(49);
generatedTree.insert2pass(24);
generatedTree.insert2pass(93);
generatedTree.insert2pass(83);
generatedTree.insert2pass(75);
generatedTree.insert2pass(61);
generatedTree.insert2pass(91);
generatedTree.insert2pass(62);
generatedTree.insert2pass(37);
generatedTree.insert2pass(34);
generatedTree.insert2pass(52);
generatedTree.insert2pass(16);
generatedTree.insert2pass(60);
generatedTree.insert2pass(20);
generatedTree.insert2pass(38);
generatedTree.insert2pass(89);
generatedTree.insert2pass(45);
------------------------------

└── 28, 61
    ├── 16
    │   ├── 15
    │   └── 20, 24
    ├── 37, 52
    │   ├── 34
    │   ├── 38, 45, 49
    │   └── 60
    └── 83
        ├── 62, 75
        └── 89, 91, 93

------------------------------

generatedTree.delete(52)
generatedTree.delete(49)
generatedTree.delete(20)

------------------------------

└── 37, 61
    ├── 16, 28
    │   ├── 15
    │   ├── 24
    │   └── 34
    ├── 45
    │   ├── 38
    │   └── 60
    └── 83
        ├── 62, 75
        └── 89, 91, 93


------------------------------

END - TEST 15


START - TEST 16
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(16);
generatedTree.insert2pass(30);
generatedTree.insert2pass(92);
generatedTree.insert2pass(60);
generatedTree.insert2pass(81);
generatedTree.insert2pass(77);
------------------------------

└── 30, 60
    ├── 16
    ├── 42
    └── 77, 81, 92

------------------------------

generatedTree.delete(16)

------------------------------

└── 60
    ├── 30, 42
    └── 77, 81, 92


------------------------------

END - TEST 16


START - TEST 17
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(22);
generatedTree.insert2pass(77);
generatedTree.insert2pass(57);
generatedTree.insert2pass(45);
generatedTree.insert2pass(52);
generatedTree.insert2pass(75);
generatedTree.insert2pass(40);
generatedTree.insert2pass(27);
generatedTree.insert2pass(76);
generatedTree.insert2pass(50);
generatedTree.insert2pass(51);
------------------------------

└── 44, 50, 57
    ├── 22, 27, 40
    ├── 45
    ├── 51, 52
    └── 75, 76, 77

------------------------------

generatedTree.delete(75)
generatedTree.delete(52)

------------------------------

└── 44, 50, 57
    ├── 22, 27, 40
    ├── 45
    ├── 51
    └── 76, 77


------------------------------

END - TEST 17


START - TEST 18
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(96);
generatedTree.insert2pass(34);
generatedTree.insert2pass(93);
generatedTree.insert2pass(84);
generatedTree.insert2pass(43);
generatedTree.insert2pass(37);
generatedTree.insert2pass(20);
generatedTree.insert2pass(29);
generatedTree.insert2pass(52);
generatedTree.insert2pass(50);
generatedTree.insert2pass(61);
generatedTree.insert2pass(82);
generatedTree.insert2pass(95);
generatedTree.insert2pass(88);
generatedTree.insert2pass(97);
generatedTree.insert2pass(40);
------------------------------

└── 43
    ├── 34
    │   ├── 20, 29
    │   └── 37, 40
    └── 52, 86, 95
        ├── 50
        ├── 61, 82, 84
        ├── 88, 93
        └── 96, 97

------------------------------

generatedTree.delete(40)

------------------------------

└── 52
    ├── 34, 43
    │   ├── 20, 29
    │   ├── 37
    │   └── 50
    └── 86, 95
        ├── 61, 82, 84
        ├── 88, 93
        └── 96, 97


------------------------------

END - TEST 18


START - TEST 19
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(84);
generatedTree.insert2pass(41);
generatedTree.insert2pass(32);
generatedTree.insert2pass(77);
generatedTree.insert2pass(33);
generatedTree.insert2pass(68);
generatedTree.insert2pass(82);
generatedTree.insert2pass(97);
generatedTree.insert2pass(20);
generatedTree.insert2pass(66);
generatedTree.insert2pass(49);
generatedTree.insert2pass(59);
generatedTree.insert2pass(37);
generatedTree.insert2pass(13);
------------------------------

└── 41
    ├── 32
    │   ├── 13, 17, 20
    │   └── 33, 37
    └── 66, 77
        ├── 49, 59
        ├── 68
        └── 82, 84, 97

------------------------------

generatedTree.delete(37)
generatedTree.delete(68)
generatedTree.delete(20)

------------------------------

└── 59
    ├── 32, 41
    │   ├── 13, 17
    │   ├── 33
    │   └── 49
    └── 77
        ├── 66
        └── 82, 84, 97


------------------------------

END - TEST 19


START - TEST 20
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(30);
generatedTree.insert2pass(85);
generatedTree.insert2pass(92);
generatedTree.insert2pass(57);
generatedTree.insert2pass(11);
generatedTree.insert2pass(64);
generatedTree.insert2pass(12);
generatedTree.insert2pass(49);
generatedTree.insert2pass(40);
generatedTree.insert2pass(36);
generatedTree.insert2pass(21);
generatedTree.insert2pass(50);
generatedTree.insert2pass(82);
generatedTree.insert2pass(34);
generatedTree.insert2pass(79);
generatedTree.insert2pass(86);
generatedTree.insert2pass(68);
generatedTree.insert2pass(17);
------------------------------

└── 57
    ├── 12, 30, 40
    │   ├── 11
    │   ├── 17, 21
    │   ├── 34, 36
    │   └── 49, 50
    └── 78, 85
        ├── 64, 68
        ├── 79, 82
        └── 86, 92

------------------------------

generatedTree.delete(12)
generatedTree.delete(64)
generatedTree.delete(21)

------------------------------

└── 57
    ├── 17, 34, 40
    │   ├── 11
    │   ├── 30
    │   ├── 36
    │   └── 49, 50
    └── 78, 85
        ├── 68
        ├── 79, 82
        └── 86, 92


------------------------------

END - TEST 20


START - TEST 21
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(73);
generatedTree.insert2pass(97);
generatedTree.insert2pass(38);
generatedTree.insert2pass(76);
generatedTree.insert2pass(27);
generatedTree.insert2pass(37);
generatedTree.insert2pass(39);
generatedTree.insert2pass(35);
generatedTree.insert2pass(92);
generatedTree.insert2pass(64);
generatedTree.insert2pass(29);
------------------------------

└── 35, 38, 73
    ├── 27, 29
    ├── 37
    ├── 39, 53, 64
    └── 76, 92, 97

------------------------------

generatedTree.delete(38)
generatedTree.delete(39)
generatedTree.delete(73)

------------------------------

└── 35, 53, 76
    ├── 27, 29
    ├── 37
    ├── 64
    └── 92, 97


------------------------------

END - TEST 21


START - TEST 22
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(88);
generatedTree.insert2pass(14);
generatedTree.insert2pass(67);
generatedTree.insert2pass(84);
generatedTree.insert2pass(74);
generatedTree.insert2pass(98);
generatedTree.insert2pass(65);
generatedTree.insert2pass(19);
generatedTree.insert2pass(29);
generatedTree.insert2pass(41);
generatedTree.insert2pass(92);
generatedTree.insert2pass(31);
generatedTree.insert2pass(95);
generatedTree.insert2pass(96);
generatedTree.insert2pass(51);
generatedTree.insert2pass(32);
generatedTree.insert2pass(18);
------------------------------

└── 67
    ├── 19, 41
    │   ├── 14, 18
    │   ├── 29, 31, 32
    │   └── 51, 65
    └── 86, 92
        ├── 74, 84
        ├── 88
        └── 95, 96, 98

------------------------------

generatedTree.delete(74)

------------------------------

└── 67
    ├── 19, 41
    │   ├── 14, 18
    │   ├── 29, 31, 32
    │   └── 51, 65
    └── 86, 92
        ├── 84
        ├── 88
        └── 95, 96, 98


------------------------------

END - TEST 22


START - TEST 23
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(70);
generatedTree.insert2pass(93);
generatedTree.insert2pass(76);
generatedTree.insert2pass(64);
generatedTree.insert2pass(29);
generatedTree.insert2pass(43);
------------------------------

└── 58, 76
    ├── 29, 43, 44
    ├── 64, 70
    └── 93

------------------------------

generatedTree.delete(44)

------------------------------

└── 58, 76
    ├── 29, 43
    ├── 64, 70
    └── 93


------------------------------

END - TEST 23


START - TEST 24
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(19);
generatedTree.insert2pass(40);
generatedTree.insert2pass(58);
generatedTree.insert2pass(82);
generatedTree.insert2pass(50);
generatedTree.insert2pass(95);
generatedTree.insert2pass(96);
generatedTree.insert2pass(60);
generatedTree.insert2pass(91);
generatedTree.insert2pass(24);
generatedTree.insert2pass(44);
generatedTree.insert2pass(23);
generatedTree.insert2pass(38);
generatedTree.insert2pass(70);
generatedTree.insert2pass(94);
generatedTree.insert2pass(25);
------------------------------

└── 75
    ├── 23, 40, 58
    │   ├── 19
    │   ├── 24, 25, 38
    │   ├── 44, 50
    │   └── 60, 70
    └── 95
        ├── 82, 91, 94
        └── 96

------------------------------

generatedTree.delete(38)
generatedTree.delete(96)

------------------------------

└── 58
    ├── 23, 40
    │   ├── 19
    │   ├── 24, 25
    │   └── 44, 50
    └── 75, 94
        ├── 60, 70
        ├── 82, 91
        └── 95


------------------------------

END - TEST 24


START - TEST 25
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(72);
generatedTree.insert2pass(25);
generatedTree.insert2pass(33);
generatedTree.insert2pass(44);
generatedTree.insert2pass(86);
generatedTree.insert2pass(11);
generatedTree.insert2pass(49);
generatedTree.insert2pass(35);
generatedTree.insert2pass(93);
------------------------------

└── 33, 72
    ├── 11, 25
    ├── 35, 44, 49
    └── 86, 93, 94

------------------------------

generatedTree.delete(35)
generatedTree.delete(25)

------------------------------

└── 33, 72
    ├── 11
    ├── 44, 49
    └── 86, 93, 94


------------------------------

END - TEST 25


START - TEST 26
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(34);
generatedTree.insert2pass(14);
generatedTree.insert2pass(41);
generatedTree.insert2pass(80);
generatedTree.insert2pass(43);
generatedTree.insert2pass(15);
generatedTree.insert2pass(67);
generatedTree.insert2pass(78);
generatedTree.insert2pass(16);
generatedTree.insert2pass(92);
generatedTree.insert2pass(48);
generatedTree.insert2pass(49);
generatedTree.insert2pass(40);
generatedTree.insert2pass(22);
generatedTree.insert2pass(31);
generatedTree.insert2pass(70);
generatedTree.insert2pass(33);
generatedTree.insert2pass(47);
------------------------------

└── 43
    ├── 15, 22, 34
    │   ├── 14
    │   ├── 16
    │   ├── 31, 33
    │   └── 40, 41
    └── 49, 76
        ├── 47, 48
        ├── 67, 70
        └── 78, 80, 92

------------------------------

generatedTree.delete(80)
generatedTree.delete(47)

------------------------------

└── 43
    ├── 15, 22, 34
    │   ├── 14
    │   ├── 16
    │   ├── 31, 33
    │   └── 40, 41
    └── 49, 76
        ├── 48
        ├── 67, 70
        └── 78, 92


------------------------------

END - TEST 26


START - TEST 27
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(16);
generatedTree.insert2pass(90);
generatedTree.insert2pass(40);
generatedTree.insert2pass(45);
generatedTree.insert2pass(50);
generatedTree.insert2pass(98);
generatedTree.insert2pass(83);
generatedTree.insert2pass(15);
generatedTree.insert2pass(75);
generatedTree.insert2pass(28);
generatedTree.insert2pass(55);
generatedTree.insert2pass(85);
generatedTree.insert2pass(65);
generatedTree.insert2pass(32);
generatedTree.insert2pass(62);
generatedTree.insert2pass(80);
------------------------------

└── 61
    ├── 16, 40
    │   ├── 15
    │   ├── 28, 32
    │   └── 45, 50, 55
    └── 65, 83, 90
        ├── 62
        ├── 75, 80
        ├── 85
        └── 98

------------------------------

generatedTree.delete(90)
generatedTree.delete(83)
generatedTree.delete(28)

------------------------------

└── 61
    ├── 16, 40
    │   ├── 15
    │   ├── 32
    │   └── 45, 50, 55
    └── 65, 80
        ├── 62
        ├── 75
        └── 85, 98


------------------------------

END - TEST 27


START - TEST 28
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(14);
generatedTree.insert2pass(39);
generatedTree.insert2pass(52);
generatedTree.insert2pass(20);
generatedTree.insert2pass(98);
generatedTree.insert2pass(26);
------------------------------

└── 39
    ├── 14, 20, 26
    └── 52, 98

------------------------------

generatedTree.delete(26)
generatedTree.delete(39)

------------------------------

└── 20
    ├── 14
    └── 52, 98


------------------------------

END - TEST 28


START - TEST 29
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(74);
generatedTree.insert2pass(84);
generatedTree.insert2pass(40);
generatedTree.insert2pass(11);
generatedTree.insert2pass(34);
generatedTree.insert2pass(97);
generatedTree.insert2pass(95);
generatedTree.insert2pass(68);
generatedTree.insert2pass(44);
------------------------------

└── 40, 74
    ├── 11, 34
    ├── 44, 50, 68
    └── 84, 95, 97

------------------------------

generatedTree.delete(74)
generatedTree.delete(84)

------------------------------

└── 40, 68
    ├── 11, 34
    ├── 44, 50
    └── 95, 97


------------------------------

END - TEST 29


START - TEST 30
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(94);
generatedTree.insert2pass(83);
generatedTree.insert2pass(82);
generatedTree.insert2pass(77);
generatedTree.insert2pass(75);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(66);
generatedTree.insert2pass(34);
------------------------------

└── 77
    ├── 42, 74
    │   ├── 20, 34
    │   ├── 66
    │   └── 75
    └── 83
        ├── 82
        └── 94

------------------------------

generatedTree.delete(94)
generatedTree.delete(75)

------------------------------

└── 42, 74, 82
    ├── 20, 34
    ├── 66
    ├── 77
    └── 83


------------------------------

END - TEST 30


START - TEST 31
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(82);
generatedTree.insert2pass(69);
generatedTree.insert2pass(15);
generatedTree.insert2pass(34);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(81);
generatedTree.insert2pass(18);
generatedTree.insert2pass(11);
generatedTree.insert2pass(27);
generatedTree.insert2pass(70);
generatedTree.insert2pass(53);
generatedTree.insert2pass(23);
generatedTree.insert2pass(51);
generatedTree.insert2pass(56);
generatedTree.insert2pass(30);
generatedTree.insert2pass(44);
------------------------------

└── 34
    ├── 15, 18
    │   ├── 11, 12
    │   ├── 16
    │   └── 23, 27, 30
    └── 53, 69
        ├── 44, 51
        ├── 56, 58
        └── 70, 81, 82

------------------------------

generatedTree.delete(58)
generatedTree.delete(53)

------------------------------

└── 34
    ├── 15, 18
    │   ├── 11, 12
    │   ├── 16
    │   └── 23, 27, 30
    └── 51, 69
        ├── 44
        ├── 56
        └── 70, 81, 82


------------------------------

END - TEST 31


START - TEST 32
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(19);
generatedTree.insert2pass(36);
generatedTree.insert2pass(65);
generatedTree.insert2pass(22);
generatedTree.insert2pass(44);
generatedTree.insert2pass(49);
generatedTree.insert2pass(42);
generatedTree.insert2pass(60);
generatedTree.insert2pass(35);
generatedTree.insert2pass(52);
generatedTree.insert2pass(46);
generatedTree.insert2pass(62);
generatedTree.insert2pass(29);
------------------------------

└── 44
    ├── 22, 36
    │   ├── 19
    │   ├── 29, 35
    │   └── 42
    └── 52, 65
        ├── 46, 49
        ├── 60, 62
        └── 83

------------------------------

generatedTree.delete(83)

------------------------------

└── 44
    ├── 22, 36
    │   ├── 19
    │   ├── 29, 35
    │   └── 42
    └── 52, 62
        ├── 46, 49
        ├── 60
        └── 65


------------------------------

END - TEST 32


START - TEST 33
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(54);
generatedTree.insert2pass(61);
generatedTree.insert2pass(29);
generatedTree.insert2pass(55);
generatedTree.insert2pass(32);
generatedTree.insert2pass(48);
generatedTree.insert2pass(49);
generatedTree.insert2pass(88);
generatedTree.insert2pass(51);
generatedTree.insert2pass(25);
------------------------------

└── 32, 54, 61
    ├── 25, 29
    ├── 48, 49, 51
    ├── 55
    └── 74, 88

------------------------------

generatedTree.delete(54)
generatedTree.delete(74)

------------------------------

└── 32, 51, 61
    ├── 25, 29
    ├── 48, 49
    ├── 55
    └── 88


------------------------------

END - TEST 33


START - TEST 34
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(90);
generatedTree.insert2pass(46);
generatedTree.insert2pass(15);
generatedTree.insert2pass(20);
generatedTree.insert2pass(24);
generatedTree.insert2pass(47);
generatedTree.insert2pass(37);
generatedTree.insert2pass(54);
generatedTree.insert2pass(34);
generatedTree.insert2pass(94);
generatedTree.insert2pass(44);
generatedTree.insert2pass(69);
generatedTree.insert2pass(27);
generatedTree.insert2pass(64);
generatedTree.insert2pass(89);
generatedTree.insert2pass(28);
generatedTree.insert2pass(45);
------------------------------

└── 46
    ├── 20, 34
    │   ├── 15
    │   ├── 24, 27, 28
    │   └── 37, 44, 45
    └── 52, 64, 90
        ├── 47
        ├── 54
        ├── 69, 89
        └── 94

------------------------------

generatedTree.delete(24)
generatedTree.delete(52)

------------------------------

└── 46
    ├── 20, 34
    │   ├── 15
    │   ├── 27, 28
    │   └── 37, 44, 45
    └── 64, 90
        ├── 47, 54
        ├── 69, 89
        └── 94


------------------------------

END - TEST 34


START - TEST 35
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(42);
generatedTree.insert2pass(53);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
------------------------------

└── 42
    ├── 25
    └── 49, 53, 95

------------------------------

generatedTree.delete(49)
generatedTree.delete(95)
generatedTree.delete(53)

------------------------------

└── 25, 42


------------------------------

END - TEST 35


START - TEST 36
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(62);
generatedTree.insert2pass(39);
generatedTree.insert2pass(37);
generatedTree.insert2pass(59);
generatedTree.insert2pass(76);
generatedTree.insert2pass(22);
generatedTree.insert2pass(31);
generatedTree.insert2pass(66);
generatedTree.insert2pass(19);
generatedTree.insert2pass(85);
generatedTree.insert2pass(24);
generatedTree.insert2pass(83);
generatedTree.insert2pass(70);
generatedTree.insert2pass(41);
generatedTree.insert2pass(53);
------------------------------

└── 46
    ├── 22, 37
    │   ├── 19
    │   ├── 24, 31
    │   └── 39, 41
    └── 62, 76
        ├── 53, 59
        ├── 66, 70
        └── 83, 85

------------------------------

generatedTree.delete(46)
generatedTree.delete(53)
generatedTree.delete(66)

------------------------------

└── 41
    ├── 22, 37
    │   ├── 19
    │   ├── 24, 31
    │   └── 39
    └── 62, 76
        ├── 59
        ├── 70
        └── 83, 85


------------------------------

END - TEST 36


START - TEST 37
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(69);
generatedTree.insert2pass(98);
generatedTree.insert2pass(67);
generatedTree.insert2pass(76);
generatedTree.insert2pass(72);
generatedTree.insert2pass(41);
generatedTree.insert2pass(78);
generatedTree.insert2pass(75);
generatedTree.insert2pass(24);
------------------------------

└── 45, 69, 76
    ├── 24, 41
    ├── 67
    ├── 72, 75
    └── 78, 98

------------------------------

generatedTree.delete(98)

------------------------------

└── 45, 69, 76
    ├── 24, 41
    ├── 67
    ├── 72, 75
    └── 78


------------------------------

END - TEST 37


START - TEST 38
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(54);
generatedTree.insert2pass(60);
generatedTree.insert2pass(97);
generatedTree.insert2pass(82);
generatedTree.insert2pass(56);
generatedTree.insert2pass(91);
generatedTree.insert2pass(81);
generatedTree.insert2pass(70);
generatedTree.insert2pass(28);
generatedTree.insert2pass(61);
generatedTree.insert2pass(85);
generatedTree.insert2pass(93);
------------------------------

└── 73
    ├── 60
    │   ├── 28, 54, 56
    │   └── 61, 70
    └── 82, 91
        ├── 81
        ├── 85
        └── 93, 97

------------------------------

generatedTree.delete(91)
generatedTree.delete(60)
generatedTree.delete(54)

------------------------------

└── 82
    ├── 56, 73
    │   ├── 28
    │   ├── 61, 70
    │   └── 81
    └── 93
        ├── 85
        └── 97


------------------------------

END - TEST 38


START - TEST 39
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(37);
generatedTree.insert2pass(53);
generatedTree.insert2pass(18);
generatedTree.insert2pass(28);
generatedTree.insert2pass(98);
generatedTree.insert2pass(21);
generatedTree.insert2pass(91);
generatedTree.insert2pass(95);
generatedTree.insert2pass(23);
generatedTree.insert2pass(71);
generatedTree.insert2pass(92);
generatedTree.insert2pass(78);
generatedTree.insert2pass(68);
generatedTree.insert2pass(48);
generatedTree.insert2pass(39);
generatedTree.insert2pass(46);
generatedTree.insert2pass(83);
generatedTree.insert2pass(29);
------------------------------

└── 53
    ├── 28, 39
    │   ├── 18, 21, 23
    │   ├── 29, 37
    │   └── 46, 48
    └── 71, 91
        ├── 68, 70
        ├── 78, 83
        └── 92, 95, 98

------------------------------

generatedTree.delete(48)

------------------------------

└── 53
    ├── 28, 39
    │   ├── 18, 21, 23
    │   ├── 29, 37
    │   └── 46
    └── 71, 91
        ├── 68, 70
        ├── 78, 83
        └── 92, 95, 98


------------------------------

END - TEST 39


START - TEST 40
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(98);
generatedTree.insert2pass(99);
generatedTree.insert2pass(52);
generatedTree.insert2pass(49);
generatedTree.insert2pass(47);
generatedTree.insert2pass(85);
generatedTree.insert2pass(18);
generatedTree.insert2pass(54);
generatedTree.insert2pass(28);
generatedTree.insert2pass(25);
generatedTree.insert2pass(78);
generatedTree.insert2pass(74);
generatedTree.insert2pass(65);
generatedTree.insert2pass(19);
generatedTree.insert2pass(94);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(80);
generatedTree.insert2pass(86);
generatedTree.insert2pass(60);
------------------------------

└── 49, 78
    ├── 25, 42
    │   ├── 18, 19
    │   ├── 28
    │   └── 44, 47
    ├── 54, 65
    │   ├── 52
    │   ├── 58, 60
    │   └── 74
    └── 85, 98
        ├── 80
        ├── 86, 94
        └── 99

------------------------------

generatedTree.delete(80)

------------------------------

└── 49, 78
    ├── 25, 42
    │   ├── 18, 19
    │   ├── 28
    │   └── 44, 47
    ├── 54, 65
    │   ├── 52
    │   ├── 58, 60
    │   └── 74
    └── 86, 98
        ├── 85
        ├── 94
        └── 99


------------------------------

END - TEST 40


START - TEST 41
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(62);
generatedTree.insert2pass(31);
generatedTree.insert2pass(36);
generatedTree.insert2pass(28);
------------------------------

└── 32
    ├── 28, 31
    └── 36, 62

------------------------------

generatedTree.delete(62)

------------------------------

└── 32
    ├── 28, 31
    └── 36


------------------------------

END - TEST 41


START - TEST 42
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(74);
generatedTree.insert2pass(42);
generatedTree.insert2pass(87);
generatedTree.insert2pass(48);
generatedTree.insert2pass(28);
generatedTree.insert2pass(64);
generatedTree.insert2pass(65);
generatedTree.insert2pass(37);
generatedTree.insert2pass(79);
generatedTree.insert2pass(93);
generatedTree.insert2pass(41);
generatedTree.insert2pass(15);
------------------------------

└── 32, 42, 74
    ├── 15, 28
    ├── 37, 41
    ├── 48, 64, 65
    └── 79, 87, 93

------------------------------

generatedTree.delete(65)

------------------------------

└── 32, 42, 74
    ├── 15, 28
    ├── 37, 41
    ├── 48, 64
    └── 79, 87, 93


------------------------------

END - TEST 42


START - TEST 43
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(85);
generatedTree.insert2pass(45);
generatedTree.insert2pass(99);
generatedTree.insert2pass(16);
generatedTree.insert2pass(15);
generatedTree.insert2pass(30);
generatedTree.insert2pass(74);
generatedTree.insert2pass(91);
generatedTree.insert2pass(18);
------------------------------

└── 16, 45, 85
    ├── 15
    ├── 18, 20, 30
    ├── 74
    └── 91, 99

------------------------------

generatedTree.delete(30)
generatedTree.delete(18)

------------------------------

└── 16, 45, 85
    ├── 15
    ├── 20
    ├── 74
    └── 91, 99


------------------------------

END - TEST 43


START - TEST 44
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(73);
generatedTree.insert2pass(64);
generatedTree.insert2pass(58);
generatedTree.insert2pass(47);
generatedTree.insert2pass(42);
generatedTree.insert2pass(39);
generatedTree.insert2pass(30);
generatedTree.insert2pass(36);
generatedTree.insert2pass(20);
generatedTree.insert2pass(16);
generatedTree.insert2pass(38);
generatedTree.insert2pass(88);
generatedTree.insert2pass(51);
generatedTree.insert2pass(45);
generatedTree.insert2pass(48);
------------------------------

└── 47
    ├── 31, 39
    │   ├── 16, 20, 30
    │   ├── 36, 38
    │   └── 42, 45
    └── 64
        ├── 48, 51, 58
        └── 73, 88

------------------------------

generatedTree.delete(36)
generatedTree.delete(48)

------------------------------

└── 39
    ├── 31
    │   ├── 16, 20, 30
    │   └── 38
    └── 47, 64
        ├── 42, 45
        ├── 51, 58
        └── 73, 88


------------------------------

END - TEST 44


START - TEST 45
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(50);
generatedTree.insert2pass(14);
generatedTree.insert2pass(60);
generatedTree.insert2pass(53);
generatedTree.insert2pass(17);
generatedTree.insert2pass(20);
generatedTree.insert2pass(19);
generatedTree.insert2pass(82);
generatedTree.insert2pass(70);
generatedTree.insert2pass(35);
generatedTree.insert2pass(13);
generatedTree.insert2pass(77);
generatedTree.insert2pass(29);
generatedTree.insert2pass(22);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
generatedTree.insert2pass(67);
generatedTree.insert2pass(88);
generatedTree.insert2pass(97);
------------------------------

└── 50
    ├── 17, 20
    │   ├── 13, 14, 15
    │   ├── 19
    │   └── 22, 29, 35
    └── 60, 70, 82
        ├── 53
        ├── 63, 67
        ├── 77
        └── 87, 88, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(82)
generatedTree.delete(13)

------------------------------

└── 50
    ├── 17, 20
    │   ├── 14, 15
    │   ├── 19
    │   └── 22, 29, 35
    └── 60, 70, 87
        ├── 53
        ├── 63, 67
        ├── 77
        └── 88


------------------------------

END - TEST 45


START - TEST 46
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(91);
generatedTree.insert2pass(82);
generatedTree.insert2pass(27);
generatedTree.insert2pass(95);
generatedTree.insert2pass(68);
generatedTree.insert2pass(16);
generatedTree.insert2pass(19);
generatedTree.insert2pass(49);
generatedTree.insert2pass(24);
generatedTree.insert2pass(85);
generatedTree.insert2pass(72);
generatedTree.insert2pass(29);
generatedTree.insert2pass(96);
generatedTree.insert2pass(99);
generatedTree.insert2pass(45);
generatedTree.insert2pass(22);
generatedTree.insert2pass(64);
generatedTree.insert2pass(74);
generatedTree.insert2pass(61);
generatedTree.insert2pass(15);
------------------------------

└── 44, 82
    ├── 19, 27
    │   ├── 15, 16
    │   ├── 22, 24
    │   └── 29
    ├── 49, 68
    │   ├── 45
    │   ├── 61, 64
    │   └── 72, 74
    └── 91
        ├── 85
        └── 95, 96, 99

------------------------------

generatedTree.delete(16)

------------------------------

└── 44, 82
    ├── 19, 27
    │   ├── 15
    │   ├── 22, 24
    │   └── 29
    ├── 49, 68
    │   ├── 45
    │   ├── 61, 64
    │   └── 72, 74
    └── 91
        ├── 85
        └── 95, 96, 99


------------------------------

END - TEST 46


START - TEST 47
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(82);
generatedTree.insert2pass(17);
generatedTree.insert2pass(55);
generatedTree.insert2pass(62);
------------------------------

└── 17
    ├── 13
    └── 55, 62, 82

------------------------------

generatedTree.delete(17)
generatedTree.delete(82)

------------------------------

└── 55
    ├── 13
    └── 62


------------------------------

END - TEST 47


START - TEST 48
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(49);
generatedTree.insert2pass(35);
generatedTree.insert2pass(25);
generatedTree.insert2pass(42);
generatedTree.insert2pass(83);
generatedTree.insert2pass(82);
generatedTree.insert2pass(64);
generatedTree.insert2pass(26);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
generatedTree.insert2pass(93);
generatedTree.insert2pass(80);
generatedTree.insert2pass(12);
generatedTree.insert2pass(11);
generatedTree.insert2pass(22);
generatedTree.insert2pass(28);
------------------------------

└── 49
    ├── 12, 26, 35
    │   ├── 11
    │   ├── 22, 25
    │   ├── 28, 32
    │   └── 42
    └── 64, 82
        ├── 60
        ├── 76, 80
        └── 83, 93

------------------------------

generatedTree.delete(83)
generatedTree.delete(42)
generatedTree.delete(60)

------------------------------

└── 49
    ├── 12, 26, 32
    │   ├── 11
    │   ├── 22, 25
    │   ├── 28
    │   └── 35
    └── 76, 82
        ├── 64
        ├── 80
        └── 93


------------------------------

END - TEST 48


START - TEST 49
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(12);
generatedTree.insert2pass(64);
generatedTree.insert2pass(93);
generatedTree.insert2pass(13);
generatedTree.insert2pass(79);
generatedTree.insert2pass(21);
------------------------------

└── 22
    ├── 12, 13, 21
    └── 64, 79, 93

------------------------------

generatedTree.delete(12)
generatedTree.delete(93)

------------------------------

└── 22
    ├── 13, 21
    └── 64, 79


------------------------------

END - TEST 49


START - TEST 50
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(84);
generatedTree.insert2pass(69);
generatedTree.insert2pass(86);
generatedTree.insert2pass(54);
generatedTree.insert2pass(15);
generatedTree.insert2pass(38);
generatedTree.insert2pass(58);
generatedTree.insert2pass(17);
generatedTree.insert2pass(59);
generatedTree.insert2pass(40);
generatedTree.insert2pass(80);
generatedTree.insert2pass(96);
generatedTree.insert2pass(67);
generatedTree.insert2pass(37);
generatedTree.insert2pass(78);
------------------------------

└── 54
    ├── 17
    │   ├── 15
    │   └── 37, 38, 40
    └── 59, 73, 84
        ├── 58
        ├── 67, 69
        ├── 78, 80
        └── 86, 96

------------------------------

generatedTree.delete(73)

------------------------------

└── 54
    ├── 17
    │   ├── 15
    │   └── 37, 38, 40
    └── 59, 69, 84
        ├── 58
        ├── 67
        ├── 78, 80
        └── 86, 96


------------------------------

END - TEST 50


START - TEST 51
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(90);
generatedTree.insert2pass(70);
generatedTree.insert2pass(26);
generatedTree.insert2pass(29);
generatedTree.insert2pass(67);
generatedTree.insert2pass(46);
generatedTree.insert2pass(30);
generatedTree.insert2pass(74);
generatedTree.insert2pass(53);
------------------------------

└── 26, 46, 70
    ├── 13
    ├── 29, 30
    ├── 53, 67
    └── 74, 90

------------------------------

generatedTree.delete(67)
generatedTree.delete(70)
generatedTree.delete(90)

------------------------------

└── 26, 46
    ├── 13
    ├── 29, 30
    └── 53, 74


------------------------------

END - TEST 51


START - TEST 52
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(79);
generatedTree.insert2pass(24);
generatedTree.insert2pass(56);
generatedTree.insert2pass(42);
generatedTree.insert2pass(14);
generatedTree.insert2pass(34);
generatedTree.insert2pass(39);
generatedTree.insert2pass(96);
generatedTree.insert2pass(80);
generatedTree.insert2pass(36);
generatedTree.insert2pass(59);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(32);
generatedTree.insert2pass(77);
generatedTree.insert2pass(51);
generatedTree.insert2pass(66);
generatedTree.insert2pass(38);
generatedTree.insert2pass(91);
------------------------------

└── 42
    ├── 24, 36
    │   ├── 14
    │   ├── 29, 32, 34
    │   └── 38, 39
    └── 59, 79, 94
        ├── 51, 56
        ├── 66, 77
        ├── 80, 91
        └── 96, 98

------------------------------

generatedTree.delete(80)
generatedTree.delete(94)
generatedTree.delete(96)

------------------------------

└── 42
    ├── 24, 36
    │   ├── 14
    │   ├── 29, 32, 34
    │   └── 38, 39
    └── 59, 79
        ├── 51, 56
        ├── 66, 77
        └── 91, 98


------------------------------

END - TEST 52


START - TEST 53
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(57);
generatedTree.insert2pass(71);
generatedTree.insert2pass(52);
generatedTree.insert2pass(20);
generatedTree.insert2pass(73);
generatedTree.insert2pass(13);
generatedTree.insert2pass(77);
generatedTree.insert2pass(39);
generatedTree.insert2pass(19);
generatedTree.insert2pass(48);
generatedTree.insert2pass(17);
generatedTree.insert2pass(33);
generatedTree.insert2pass(82);
generatedTree.insert2pass(96);
generatedTree.insert2pass(40);
generatedTree.insert2pass(84);
generatedTree.insert2pass(38);
generatedTree.insert2pass(53);
------------------------------

└── 28, 57
    ├── 19
    │   ├── 13, 17
    │   └── 20
    ├── 39, 48
    │   ├── 33, 38
    │   ├── 40
    │   └── 52, 53
    └── 73, 82
        ├── 71
        ├── 77
        └── 84, 96

------------------------------

generatedTree.delete(20)
generatedTree.delete(19)
generatedTree.delete(28)

------------------------------

└── 39, 57
    ├── 33
    │   ├── 13, 17
    │   └── 38
    ├── 48
    │   ├── 40
    │   └── 52, 53
    └── 73, 82
        ├── 71
        ├── 77
        └── 84, 96


------------------------------

END - TEST 53


START - TEST 54
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(60);
generatedTree.insert2pass(25);
generatedTree.insert2pass(20);
generatedTree.insert2pass(86);
generatedTree.insert2pass(79);
generatedTree.insert2pass(29);
generatedTree.insert2pass(14);
generatedTree.insert2pass(77);
generatedTree.insert2pass(19);
generatedTree.insert2pass(61);
generatedTree.insert2pass(28);
generatedTree.insert2pass(23);
generatedTree.insert2pass(17);
generatedTree.insert2pass(85);
generatedTree.insert2pass(30);
------------------------------

└── 60
    ├── 19, 25
    │   ├── 14, 17
    │   ├── 20, 23
    │   └── 28, 29, 30
    └── 79
        ├── 61, 77
        └── 85, 86

------------------------------

generatedTree.delete(28)

------------------------------

└── 60
    ├── 19, 25
    │   ├── 14, 17
    │   ├── 20, 23
    │   └── 29, 30
    └── 79
        ├── 61, 77
        └── 85, 86


------------------------------

END - TEST 54


START - TEST 55
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(14);
generatedTree.insert2pass(58);
generatedTree.insert2pass(11);
generatedTree.insert2pass(92);
generatedTree.insert2pass(59);
generatedTree.insert2pass(68);
generatedTree.insert2pass(93);
generatedTree.insert2pass(87);
generatedTree.insert2pass(32);
generatedTree.insert2pass(29);
generatedTree.insert2pass(96);
------------------------------

└── 59
    ├── 14, 51
    │   ├── 11
    │   ├── 29, 32
    │   └── 58
    └── 92
        ├── 68, 87
        └── 93, 96

------------------------------

generatedTree.delete(96)

------------------------------

└── 51
    ├── 14
    │   ├── 11
    │   └── 29, 32
    └── 59, 92
        ├── 58
        ├── 68, 87
        └── 93


------------------------------

END - TEST 55


START - TEST 56
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(16);
generatedTree.insert2pass(98);
generatedTree.insert2pass(48);
generatedTree.insert2pass(81);
generatedTree.insert2pass(15);
generatedTree.insert2pass(57);
generatedTree.insert2pass(20);
generatedTree.insert2pass(70);
generatedTree.insert2pass(88);
generatedTree.insert2pass(46);
generatedTree.insert2pass(99);
generatedTree.insert2pass(74);
generatedTree.insert2pass(63);
generatedTree.insert2pass(42);
generatedTree.insert2pass(28);
------------------------------

└── 57
    ├── 21, 46
    │   ├── 15, 16, 20
    │   ├── 28, 42
    │   └── 48
    └── 81
        ├── 63, 70, 74
        └── 88, 98, 99

------------------------------

generatedTree.delete(28)
generatedTree.delete(21)
generatedTree.delete(99)

------------------------------

└── 46
    ├── 20
    │   ├── 15, 16
    │   └── 42
    └── 57, 81
        ├── 48
        ├── 63, 70, 74
        └── 88, 98


------------------------------

END - TEST 56


START - TEST 57
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(89);
generatedTree.insert2pass(61);
generatedTree.insert2pass(90);
generatedTree.insert2pass(18);
------------------------------

└── 84
    ├── 18, 61
    └── 89, 90

------------------------------

generatedTree.delete(89)
generatedTree.delete(90)
generatedTree.delete(18)

------------------------------

└── 61, 84


------------------------------

END - TEST 57


START - TEST 58
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(66);
generatedTree.insert2pass(42);
generatedTree.insert2pass(13);
generatedTree.insert2pass(28);
generatedTree.insert2pass(61);
generatedTree.insert2pass(98);
generatedTree.insert2pass(32);
generatedTree.insert2pass(69);
------------------------------

└── 28, 58, 66
    ├── 13
    ├── 32, 42
    ├── 61
    └── 69, 98

------------------------------

generatedTree.delete(61)
generatedTree.delete(69)

------------------------------

└── 28, 42, 66
    ├── 13
    ├── 32
    ├── 58
    └── 98


------------------------------

END - TEST 58


START - TEST 59
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(77);
generatedTree.insert2pass(57);
generatedTree.insert2pass(34);
generatedTree.insert2pass(97);
generatedTree.insert2pass(94);
generatedTree.insert2pass(65);
generatedTree.insert2pass(82);
generatedTree.insert2pass(99);
generatedTree.insert2pass(66);
generatedTree.insert2pass(25);
generatedTree.insert2pass(52);
generatedTree.insert2pass(48);
generatedTree.insert2pass(14);
generatedTree.insert2pass(22);
generatedTree.insert2pass(41);
generatedTree.insert2pass(64);
generatedTree.insert2pass(76);
------------------------------

└── 48, 77
    ├── 25
    │   ├── 14, 16, 22
    │   └── 34, 41
    ├── 57, 65
    │   ├── 52
    │   ├── 64
    │   └── 66, 76
    └── 94
        ├── 82
        └── 97, 99

------------------------------

generatedTree.delete(66)
generatedTree.delete(48)

------------------------------

└── 52, 77
    ├── 25
    │   ├── 14, 16, 22
    │   └── 34, 41
    ├── 65
    │   ├── 57, 64
    │   └── 76
    └── 94
        ├── 82
        └── 97, 99


------------------------------

END - TEST 59


START - TEST 60
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(91);
generatedTree.insert2pass(16);
generatedTree.insert2pass(40);
generatedTree.insert2pass(81);
generatedTree.insert2pass(18);
generatedTree.insert2pass(33);
generatedTree.insert2pass(64);
generatedTree.insert2pass(41);
generatedTree.insert2pass(11);
generatedTree.insert2pass(44);
generatedTree.insert2pass(32);
generatedTree.insert2pass(99);
generatedTree.insert2pass(76);
generatedTree.insert2pass(51);
generatedTree.insert2pass(29);
generatedTree.insert2pass(46);
generatedTree.insert2pass(36);
generatedTree.insert2pass(80);
------------------------------

└── 40
    ├── 18, 32
    │   ├── 11, 16
    │   ├── 29
    │   └── 33, 36
    └── 44, 59, 81
        ├── 41
        ├── 46, 51
        ├── 64, 76, 80
        └── 91, 99

------------------------------

generatedTree.delete(36)
generatedTree.delete(76)

------------------------------

└── 40
    ├── 18, 32
    │   ├── 11, 16
    │   ├── 29
    │   └── 33
    └── 44, 59, 81
        ├── 41
        ├── 46, 51
        ├── 64, 80
        └── 91, 99


------------------------------

END - TEST 60


START - TEST 61
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(88);
generatedTree.insert2pass(13);
generatedTree.insert2pass(96);
generatedTree.insert2pass(93);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(77);
generatedTree.insert2pass(72);
------------------------------

└── 35, 68, 93
    ├── 13
    ├── 43
    ├── 72, 77, 88
    └── 96

------------------------------

generatedTree.delete(13)

------------------------------

└── 68, 93
    ├── 35, 43
    ├── 72, 77, 88
    └── 96


------------------------------

END - TEST 61


START - TEST 62
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(26);
generatedTree.insert2pass(67);
generatedTree.insert2pass(39);
generatedTree.insert2pass(72);
generatedTree.insert2pass(78);
generatedTree.insert2pass(82);
generatedTree.insert2pass(18);
generatedTree.insert2pass(55);
generatedTree.insert2pass(14);
generatedTree.insert2pass(34);
generatedTree.insert2pass(53);
generatedTree.insert2pass(47);
generatedTree.insert2pass(76);
generatedTree.insert2pass(45);
generatedTree.insert2pass(58);
generatedTree.insert2pass(44);
generatedTree.insert2pass(86);
generatedTree.insert2pass(96);
generatedTree.insert2pass(64);
generatedTree.insert2pass(31);
generatedTree.insert2pass(19);
------------------------------

└── 67
    ├── 26, 39, 53
    │   ├── 14, 18, 19
    │   ├── 31, 34
    │   ├── 44, 45, 47
    │   └── 55, 58, 64
    └── 78, 86
        ├── 72, 76
        ├── 82
        └── 87, 96

------------------------------

generatedTree.delete(86)

------------------------------

└── 67
    ├── 26, 39, 53
    │   ├── 14, 18, 19
    │   ├── 31, 34
    │   ├── 44, 45, 47
    │   └── 55, 58, 64
    └── 78, 87
        ├── 72, 76
        ├── 82
        └── 96


------------------------------

END - TEST 62


START - TEST 63
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(36);
generatedTree.insert2pass(62);
generatedTree.insert2pass(88);
generatedTree.insert2pass(66);
generatedTree.insert2pass(75);
generatedTree.insert2pass(99);
generatedTree.insert2pass(45);
generatedTree.insert2pass(90);
generatedTree.insert2pass(14);
generatedTree.insert2pass(31);
generatedTree.insert2pass(42);
generatedTree.insert2pass(32);
generatedTree.insert2pass(51);
generatedTree.insert2pass(34);
generatedTree.insert2pass(17);
------------------------------

└── 66
    ├── 31, 37, 45
    │   ├── 14, 17
    │   ├── 32, 34, 36
    │   ├── 42
    │   └── 51, 62
    └── 88
        ├── 75
        └── 90, 99

------------------------------

generatedTree.delete(62)
generatedTree.delete(51)
generatedTree.delete(14)

------------------------------

└── 66
    ├── 31, 37
    │   ├── 17
    │   ├── 32, 34, 36
    │   └── 42, 45
    └── 88
        ├── 75
        └── 90, 99


------------------------------

END - TEST 63


START - TEST 64
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(29);
generatedTree.insert2pass(20);
generatedTree.insert2pass(80);
generatedTree.insert2pass(32);
------------------------------

└── 24
    ├── 20
    └── 29, 32, 80

------------------------------

generatedTree.delete(80)

------------------------------

└── 24
    ├── 20
    └── 29, 32


------------------------------

END - TEST 64


START - TEST 65
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(56);
generatedTree.insert2pass(95);
generatedTree.insert2pass(79);
generatedTree.insert2pass(77);
generatedTree.insert2pass(64);
generatedTree.insert2pass(20);
generatedTree.insert2pass(93);
generatedTree.insert2pass(27);
generatedTree.insert2pass(28);
generatedTree.insert2pass(50);
generatedTree.insert2pass(34);
generatedTree.insert2pass(16);
generatedTree.insert2pass(83);
generatedTree.insert2pass(86);
generatedTree.insert2pass(75);
generatedTree.insert2pass(12);
------------------------------

└── 62
    ├── 27, 50
    │   ├── 12, 16, 20
    │   ├── 28, 34
    │   └── 56
    └── 79, 93
        ├── 64, 75, 77
        ├── 83, 86
        └── 95

------------------------------

generatedTree.delete(28)
generatedTree.delete(62)

------------------------------

└── 56
    ├── 27
    │   ├── 12, 16, 20
    │   └── 34, 50
    └── 79, 93
        ├── 64, 75, 77
        ├── 83, 86
        └── 95


------------------------------

END - TEST 65


START - TEST 66
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(66);
generatedTree.insert2pass(61);
generatedTree.insert2pass(29);
generatedTree.insert2pass(85);
generatedTree.insert2pass(47);
generatedTree.insert2pass(97);
generatedTree.insert2pass(99);
generatedTree.insert2pass(23);
generatedTree.insert2pass(16);
generatedTree.insert2pass(24);
generatedTree.insert2pass(34);
generatedTree.insert2pass(73);
generatedTree.insert2pass(59);
------------------------------

└── 66
    ├── 23, 47
    │   ├── 16
    │   ├── 24, 29, 34
    │   └── 59, 61
    └── 93
        ├── 73, 85
        └── 97, 99

------------------------------

generatedTree.delete(47)

------------------------------

└── 66
    ├── 23, 34
    │   ├── 16
    │   ├── 24, 29
    │   └── 59, 61
    └── 93
        ├── 73, 85
        └── 97, 99


------------------------------

END - TEST 66


START - TEST 67
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(97);
generatedTree.insert2pass(94);
generatedTree.insert2pass(49);
generatedTree.insert2pass(92);
generatedTree.insert2pass(58);
generatedTree.insert2pass(61);
generatedTree.insert2pass(50);
generatedTree.insert2pass(89);
------------------------------

└── 58, 94
    ├── 49, 50
    ├── 61, 89, 92
    └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(50)
generatedTree.delete(94)

------------------------------

└── 58, 89
    ├── 49
    ├── 61
    └── 92


------------------------------

END - TEST 67


START - TEST 68
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(15);
generatedTree.insert2pass(74);
generatedTree.insert2pass(23);
generatedTree.insert2pass(63);
generatedTree.insert2pass(30);
generatedTree.insert2pass(36);
generatedTree.insert2pass(31);
generatedTree.insert2pass(52);
generatedTree.insert2pass(13);
generatedTree.insert2pass(53);
generatedTree.insert2pass(75);
generatedTree.insert2pass(57);
generatedTree.insert2pass(72);
generatedTree.insert2pass(48);
generatedTree.insert2pass(93);
------------------------------

└── 36
    ├── 23
    │   ├── 13, 15
    │   └── 30, 31
    └── 53, 74
        ├── 48, 52
        ├── 57, 63, 72
        └── 75, 88, 93

------------------------------

generatedTree.delete(13)

------------------------------

└── 53
    ├── 23, 36
    │   ├── 15
    │   ├── 30, 31
    │   └── 48, 52
    └── 74
        ├── 57, 63, 72
        └── 75, 88, 93


------------------------------

END - TEST 68


START - TEST 69
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(39);
generatedTree.insert2pass(15);
generatedTree.insert2pass(28);
generatedTree.insert2pass(74);
generatedTree.insert2pass(40);
generatedTree.insert2pass(55);
generatedTree.insert2pass(89);
generatedTree.insert2pass(14);
generatedTree.insert2pass(97);
generatedTree.insert2pass(81);
generatedTree.insert2pass(21);
generatedTree.insert2pass(45);
generatedTree.insert2pass(24);
generatedTree.insert2pass(59);
generatedTree.insert2pass(58);
------------------------------

└── 74
    ├── 15, 39, 45
    │   ├── 14
    │   ├── 21, 24, 28
    │   ├── 40
    │   └── 55, 58, 59
    └── 89
        ├── 77, 81
        └── 97

------------------------------

generatedTree.delete(81)

------------------------------

└── 45
    ├── 15, 39
    │   ├── 14
    │   ├── 21, 24, 28
    │   └── 40
    └── 74, 89
        ├── 55, 58, 59
        ├── 77
        └── 97


------------------------------

END - TEST 69


START - TEST 70
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(17);
generatedTree.insert2pass(32);
generatedTree.insert2pass(76);
generatedTree.insert2pass(31);
generatedTree.insert2pass(88);
generatedTree.insert2pass(74);
generatedTree.insert2pass(89);
generatedTree.insert2pass(90);
generatedTree.insert2pass(61);
generatedTree.insert2pass(49);
generatedTree.insert2pass(39);
generatedTree.insert2pass(20);
generatedTree.insert2pass(24);
------------------------------

└── 32
    ├── 17
    │   ├── 16
    │   └── 20, 24, 31
    └── 61, 76
        ├── 39, 49
        ├── 74
        └── 88, 89, 90

------------------------------

generatedTree.delete(88)
generatedTree.delete(74)
generatedTree.delete(61)

------------------------------

└── 32
    ├── 17
    │   ├── 16
    │   └── 20, 24, 31
    └── 49, 89
        ├── 39
        ├── 76
        └── 90


------------------------------

END - TEST 70


START - TEST 71
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(92);
generatedTree.insert2pass(45);
generatedTree.insert2pass(61);
generatedTree.insert2pass(65);
generatedTree.insert2pass(79);
generatedTree.insert2pass(69);
generatedTree.insert2pass(13);
generatedTree.insert2pass(57);
generatedTree.insert2pass(30);
generatedTree.insert2pass(31);
generatedTree.insert2pass(66);
generatedTree.insert2pass(21);
generatedTree.insert2pass(59);
generatedTree.insert2pass(73);
generatedTree.insert2pass(93);
generatedTree.insert2pass(52);
generatedTree.insert2pass(28);
generatedTree.insert2pass(34);
generatedTree.insert2pass(60);
generatedTree.insert2pass(99);
generatedTree.insert2pass(48);
------------------------------

└── 45
    ├── 15, 30
    │   ├── 13
    │   ├── 21, 28
    │   └── 31, 34
    └── 59, 65, 79
        ├── 48, 52, 57
        ├── 60, 61
        ├── 66, 69, 73
        └── 92, 93, 99

------------------------------

generatedTree.delete(48)
generatedTree.delete(61)
generatedTree.delete(92)

------------------------------

└── 45
    ├── 15, 30
    │   ├── 13
    │   ├── 21, 28
    │   └── 31, 34
    └── 59, 65, 79
        ├── 52, 57
        ├── 60
        ├── 66, 69, 73
        └── 93, 99


------------------------------

END - TEST 71


START - TEST 72
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(69);
generatedTree.insert2pass(41);
generatedTree.insert2pass(33);
generatedTree.insert2pass(38);
generatedTree.insert2pass(67);
generatedTree.insert2pass(14);
generatedTree.insert2pass(89);
generatedTree.insert2pass(48);
generatedTree.insert2pass(34);
generatedTree.insert2pass(39);
generatedTree.insert2pass(37);
generatedTree.insert2pass(27);
generatedTree.insert2pass(90);
generatedTree.insert2pass(35);
generatedTree.insert2pass(11);
generatedTree.insert2pass(80);
------------------------------

└── 38
    ├── 33
    │   ├── 11, 14, 27
    │   └── 34, 35, 37
    └── 58, 69
        ├── 39, 41, 48
        ├── 67
        └── 80, 89, 90

------------------------------

generatedTree.delete(33)
generatedTree.delete(14)

------------------------------

└── 58
    ├── 27, 38
    │   ├── 11
    │   ├── 34, 35, 37
    │   └── 39, 41, 48
    └── 69
        ├── 67
        └── 80, 89, 90


------------------------------

END - TEST 72


START - TEST 73
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(71);
generatedTree.insert2pass(63);
generatedTree.insert2pass(41);
generatedTree.insert2pass(34);
------------------------------

└── 71
    ├── 34, 41, 63
    └── 88

------------------------------

generatedTree.delete(63)
generatedTree.delete(88)

------------------------------

└── 41
    ├── 34
    └── 71


------------------------------

END - TEST 73


START - TEST 74
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(22);
generatedTree.insert2pass(38);
generatedTree.insert2pass(56);
generatedTree.insert2pass(79);
generatedTree.insert2pass(93);
generatedTree.insert2pass(14);
generatedTree.insert2pass(98);
generatedTree.insert2pass(17);
generatedTree.insert2pass(86);
generatedTree.insert2pass(70);
generatedTree.insert2pass(97);
generatedTree.insert2pass(68);
generatedTree.insert2pass(78);
generatedTree.insert2pass(53);
generatedTree.insert2pass(50);
------------------------------

└── 56
    ├── 29
    │   ├── 14, 17, 22
    │   └── 38, 50, 53
    └── 79, 93
        ├── 68, 70, 78
        ├── 86
        └── 97, 98

------------------------------

generatedTree.delete(14)

------------------------------

└── 79
    ├── 29, 56
    │   ├── 17, 22
    │   ├── 38, 50, 53
    │   └── 68, 70, 78
    └── 93
        ├── 86
        └── 97, 98


------------------------------

END - TEST 74


START - TEST 75
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(98);
generatedTree.insert2pass(18);
generatedTree.insert2pass(84);
generatedTree.insert2pass(52);
generatedTree.insert2pass(66);
generatedTree.insert2pass(23);
generatedTree.insert2pass(53);
generatedTree.insert2pass(48);
generatedTree.insert2pass(90);
generatedTree.insert2pass(57);
generatedTree.insert2pass(27);
generatedTree.insert2pass(75);
generatedTree.insert2pass(74);
------------------------------

└── 53
    ├── 38
    │   ├── 18, 23, 27
    │   └── 48, 52
    └── 66, 84
        ├── 57
        ├── 74, 75
        └── 90, 98

------------------------------

generatedTree.delete(52)

------------------------------

└── 66
    ├── 38, 53
    │   ├── 18, 23, 27
    │   ├── 48
    │   └── 57
    └── 84
        ├── 74, 75
        └── 90, 98


------------------------------

END - TEST 75


START - TEST 76
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(26);
generatedTree.insert2pass(42);
generatedTree.insert2pass(81);
------------------------------

└── 42
    ├── 26
    └── 81, 92

------------------------------

generatedTree.delete(26)

------------------------------

└── 81
    ├── 42
    └── 92


------------------------------

END - TEST 76


START - TEST 77
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(51);
generatedTree.insert2pass(39);
generatedTree.insert2pass(36);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(30);
generatedTree.insert2pass(69);
generatedTree.insert2pass(58);
------------------------------

└── 36, 51
    ├── 27, 30, 32
    ├── 39
    └── 58, 69, 74

------------------------------

generatedTree.delete(58)
generatedTree.delete(30)
generatedTree.delete(51)

------------------------------

└── 36, 69
    ├── 27, 32
    ├── 39
    └── 74


------------------------------

END - TEST 77


START - TEST 78
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(13);
generatedTree.insert2pass(40);
generatedTree.insert2pass(54);
generatedTree.insert2pass(14);
generatedTree.insert2pass(42);
generatedTree.insert2pass(43);
generatedTree.insert2pass(92);
generatedTree.insert2pass(88);
generatedTree.insert2pass(64);
generatedTree.insert2pass(79);
generatedTree.insert2pass(93);
generatedTree.insert2pass(80);
generatedTree.insert2pass(89);
generatedTree.insert2pass(46);
generatedTree.insert2pass(37);
generatedTree.insert2pass(99);
generatedTree.insert2pass(69);
generatedTree.insert2pass(22);
generatedTree.insert2pass(95);
------------------------------

└── 42, 88
    ├── 14, 38
    │   ├── 13
    │   ├── 22, 37
    │   └── 40
    ├── 54, 79
    │   ├── 43, 46
    │   ├── 64, 69
    │   └── 80
    └── 92
        ├── 89
        └── 93, 95, 99

------------------------------

generatedTree.delete(13)
generatedTree.delete(88)
generatedTree.delete(38)

------------------------------

└── 42, 80
    ├── 22
    │   ├── 14
    │   └── 37, 40
    ├── 54, 69
    │   ├── 43, 46
    │   ├── 64
    │   └── 79
    └── 92
        ├── 89
        └── 93, 95, 99


------------------------------

END - TEST 78


START - TEST 79
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(48);
generatedTree.insert2pass(42);
generatedTree.insert2pass(49);
generatedTree.insert2pass(43);
generatedTree.insert2pass(91);
generatedTree.insert2pass(71);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(61);
generatedTree.insert2pass(26);
generatedTree.insert2pass(15);
generatedTree.insert2pass(69);
generatedTree.insert2pass(65);
generatedTree.insert2pass(74);
------------------------------

└── 48
    ├── 29, 42
    │   ├── 15, 26
    │   ├── 35
    │   └── 43
    └── 61, 71
        ├── 49
        ├── 65, 69
        └── 74, 91, 98

------------------------------

generatedTree.delete(69)
generatedTree.delete(15)
generatedTree.delete(91)

------------------------------

└── 48
    ├── 29, 42
    │   ├── 26
    │   ├── 35
    │   └── 43
    └── 61, 71
        ├── 49
        ├── 65
        └── 74, 98


------------------------------

END - TEST 79


START - TEST 80
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(48);
generatedTree.insert2pass(40);
generatedTree.insert2pass(47);
generatedTree.insert2pass(89);
generatedTree.insert2pass(55);
generatedTree.insert2pass(15);
generatedTree.insert2pass(43);
generatedTree.insert2pass(34);
generatedTree.insert2pass(61);
generatedTree.insert2pass(46);
generatedTree.insert2pass(99);
generatedTree.insert2pass(96);
generatedTree.insert2pass(68);
------------------------------

└── 48
    ├── 40
    │   ├── 15, 34, 37
    │   └── 43, 46, 47
    └── 61, 96
        ├── 55
        ├── 68, 89
        └── 99

------------------------------

generatedTree.delete(55)
generatedTree.delete(15)
generatedTree.delete(34)

------------------------------

└── 68
    ├── 40, 48
    │   ├── 37
    │   ├── 43, 46, 47
    │   └── 61
    └── 96
        ├── 89
        └── 99


------------------------------

END - TEST 80


START - TEST 81
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(58);
generatedTree.insert2pass(27);
generatedTree.insert2pass(95);
generatedTree.insert2pass(48);
generatedTree.insert2pass(34);
generatedTree.insert2pass(31);
generatedTree.insert2pass(79);
------------------------------

└── 34, 58
    ├── 27, 31
    ├── 48
    └── 73, 79, 95

------------------------------

generatedTree.delete(48)
generatedTree.delete(31)
generatedTree.delete(79)

------------------------------

└── 58
    ├── 27, 34
    └── 73, 95


------------------------------

END - TEST 81


START - TEST 82
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(97);
generatedTree.insert2pass(74);
generatedTree.insert2pass(55);
generatedTree.insert2pass(21);
generatedTree.insert2pass(18);
generatedTree.insert2pass(42);
generatedTree.insert2pass(76);
generatedTree.insert2pass(63);
generatedTree.insert2pass(69);
generatedTree.insert2pass(47);
generatedTree.insert2pass(39);
generatedTree.insert2pass(90);
generatedTree.insert2pass(53);
generatedTree.insert2pass(94);
generatedTree.insert2pass(61);
generatedTree.insert2pass(14);
generatedTree.insert2pass(57);
generatedTree.insert2pass(23);
generatedTree.insert2pass(22);
generatedTree.insert2pass(52);
------------------------------

└── 55
    ├── 21, 42
    │   ├── 14, 18
    │   ├── 22, 23, 39
    │   └── 47, 52, 53
    └── 64, 74, 90
        ├── 57, 61, 63
        ├── 69
        ├── 76
        └── 94, 97

------------------------------

generatedTree.delete(42)
generatedTree.delete(23)

------------------------------

└── 55
    ├── 21, 39
    │   ├── 14, 18
    │   ├── 22
    │   └── 47, 52, 53
    └── 64, 74, 90
        ├── 57, 61, 63
        ├── 69
        ├── 76
        └── 94, 97


------------------------------

END - TEST 82


START - TEST 83
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(26);
generatedTree.insert2pass(69);
generatedTree.insert2pass(56);
generatedTree.insert2pass(59);
generatedTree.insert2pass(70);
generatedTree.insert2pass(53);
generatedTree.insert2pass(92);
generatedTree.insert2pass(45);
------------------------------

└── 26, 59
    ├── 19
    ├── 45, 53, 56
    └── 69, 70, 92

------------------------------

generatedTree.delete(53)

------------------------------

└── 26, 59
    ├── 19
    ├── 45, 56
    └── 69, 70, 92


------------------------------

END - TEST 83


START - TEST 84
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(91);
generatedTree.insert2pass(65);
generatedTree.insert2pass(43);
generatedTree.insert2pass(26);
generatedTree.insert2pass(31);
generatedTree.insert2pass(77);
generatedTree.insert2pass(20);
generatedTree.insert2pass(98);
generatedTree.insert2pass(66);
------------------------------

└── 43, 65, 91
    ├── 20, 26, 31
    ├── 61
    ├── 66, 77
    └── 98

------------------------------

generatedTree.delete(20)

------------------------------

└── 43, 65, 91
    ├── 26, 31
    ├── 61
    ├── 66, 77
    └── 98


------------------------------

END - TEST 84


START - TEST 85
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(72);
generatedTree.insert2pass(76);
generatedTree.insert2pass(16);
generatedTree.insert2pass(15);
generatedTree.insert2pass(48);
generatedTree.insert2pass(75);
generatedTree.insert2pass(90);
generatedTree.insert2pass(33);
generatedTree.insert2pass(78);
generatedTree.insert2pass(42);
generatedTree.insert2pass(68);
generatedTree.insert2pass(50);
generatedTree.insert2pass(55);
generatedTree.insert2pass(88);
generatedTree.insert2pass(98);
generatedTree.insert2pass(93);
generatedTree.insert2pass(65);
------------------------------

└── 72
    ├── 16, 42, 50
    │   ├── 15
    │   ├── 33
    │   ├── 48
    │   └── 55, 65, 68
    └── 76, 87, 90
        ├── 75
        ├── 78
        ├── 88
        └── 93, 98

------------------------------

generatedTree.delete(90)
generatedTree.delete(87)
generatedTree.delete(48)

------------------------------

└── 72
    ├── 16, 42, 55
    │   ├── 15
    │   ├── 33
    │   ├── 50
    │   └── 65, 68
    └── 76, 93
        ├── 75
        ├── 78, 88
        └── 98


------------------------------

END - TEST 85


START - TEST 86
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(88);
generatedTree.insert2pass(34);
generatedTree.insert2pass(91);
generatedTree.insert2pass(87);
generatedTree.insert2pass(24);
generatedTree.insert2pass(75);
generatedTree.insert2pass(16);
generatedTree.insert2pass(94);
generatedTree.insert2pass(92);
generatedTree.insert2pass(85);
generatedTree.insert2pass(89);
generatedTree.insert2pass(72);
generatedTree.insert2pass(80);
generatedTree.insert2pass(78);
generatedTree.insert2pass(67);
generatedTree.insert2pass(22);
------------------------------

└── 88
    ├── 34, 75, 85
    │   ├── 16, 22, 24
    │   ├── 67, 72
    │   ├── 78, 80
    │   └── 87
    └── 94
        ├── 89, 91, 92
        └── 98

------------------------------

generatedTree.delete(16)

------------------------------

└── 88
    ├── 34, 75, 85
    │   ├── 22, 24
    │   ├── 67, 72
    │   ├── 78, 80
    │   └── 87
    └── 94
        ├── 89, 91, 92
        └── 98


------------------------------

END - TEST 86


START - TEST 87
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(91);
generatedTree.insert2pass(84);
generatedTree.insert2pass(71);
generatedTree.insert2pass(29);
generatedTree.insert2pass(43);
generatedTree.insert2pass(28);
generatedTree.insert2pass(44);
generatedTree.insert2pass(66);
generatedTree.insert2pass(16);
generatedTree.insert2pass(76);
generatedTree.insert2pass(68);
generatedTree.insert2pass(85);
generatedTree.insert2pass(42);
generatedTree.insert2pass(72);
generatedTree.insert2pass(93);
generatedTree.insert2pass(31);
generatedTree.insert2pass(98);
generatedTree.insert2pass(60);
generatedTree.insert2pass(52);
------------------------------

└── 63
    ├── 29, 43
    │   ├── 16, 28
    │   ├── 31, 42
    │   └── 44, 52, 60
    └── 71, 84, 91
        ├── 66, 68
        ├── 72, 76
        ├── 85
        └── 93, 98

------------------------------

generatedTree.delete(44)
generatedTree.delete(68)

------------------------------

└── 63
    ├── 29, 43
    │   ├── 16, 28
    │   ├── 31, 42
    │   └── 52, 60
    └── 71, 84, 91
        ├── 66
        ├── 72, 76
        ├── 85
        └── 93, 98


------------------------------

END - TEST 87


START - TEST 88
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(97);
generatedTree.insert2pass(85);
generatedTree.insert2pass(30);
generatedTree.insert2pass(87);
generatedTree.insert2pass(40);
generatedTree.insert2pass(69);
------------------------------

└── 85, 94
    ├── 30, 40, 69
    ├── 87
    └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(85)

------------------------------

└── 69
    ├── 30, 40
    └── 87, 94


------------------------------

END - TEST 88


START - TEST 89
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(55);
generatedTree.insert2pass(57);
generatedTree.insert2pass(33);
generatedTree.insert2pass(17);
generatedTree.insert2pass(75);
generatedTree.insert2pass(92);
generatedTree.insert2pass(80);
------------------------------

└── 55, 75
    ├── 13, 17, 33
    ├── 57
    └── 80, 92

------------------------------

generatedTree.delete(17)
generatedTree.delete(13)
generatedTree.delete(55)

------------------------------

└── 75
    ├── 33, 57
    └── 80, 92


------------------------------

END - TEST 89


START - TEST 90
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(81);
generatedTree.insert2pass(25);
generatedTree.insert2pass(80);
generatedTree.insert2pass(66);
generatedTree.insert2pass(97);
generatedTree.insert2pass(31);
generatedTree.insert2pass(26);
generatedTree.insert2pass(28);
generatedTree.insert2pass(17);
generatedTree.insert2pass(18);
generatedTree.insert2pass(87);
generatedTree.insert2pass(19);
generatedTree.insert2pass(14);
generatedTree.insert2pass(78);
generatedTree.insert2pass(76);
generatedTree.insert2pass(75);
------------------------------

└── 63
    ├── 18, 26
    │   ├── 14, 17
    │   ├── 19, 25
    │   └── 28, 31
    └── 76, 80
        ├── 66, 75
        ├── 78
        └── 81, 87, 97

------------------------------

generatedTree.delete(17)
generatedTree.delete(75)
generatedTree.delete(26)

------------------------------

└── 63
    ├── 18, 25
    │   ├── 14
    │   ├── 19
    │   └── 28, 31
    └── 76, 80
        ├── 66
        ├── 78
        └── 81, 87, 97


------------------------------

END - TEST 90


START - TEST 91
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(76);
generatedTree.insert2pass(92);
generatedTree.insert2pass(94);
generatedTree.insert2pass(53);
generatedTree.insert2pass(73);
generatedTree.insert2pass(97);
generatedTree.insert2pass(38);
generatedTree.insert2pass(96);
------------------------------

└── 70, 76, 94
    ├── 38, 53
    ├── 73
    ├── 92
    └── 96, 97

------------------------------

generatedTree.delete(76)
generatedTree.delete(94)

------------------------------

└── 70, 92
    ├── 38, 53
    ├── 73
    └── 96, 97


------------------------------

END - TEST 91


START - TEST 92
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(16);
generatedTree.insert2pass(12);
generatedTree.insert2pass(91);
generatedTree.insert2pass(60);
generatedTree.insert2pass(73);
generatedTree.insert2pass(99);
generatedTree.insert2pass(35);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(51);
generatedTree.insert2pass(42);
generatedTree.insert2pass(49);
generatedTree.insert2pass(67);
generatedTree.insert2pass(94);
generatedTree.insert2pass(87);
------------------------------

└── 60
    ├── 16, 35
    │   ├── 12
    │   ├── 29
    │   └── 42, 49, 51
    └── 89, 98
        ├── 67, 73, 87
        ├── 91, 94
        └── 99

------------------------------

generatedTree.delete(60)
generatedTree.delete(12)

------------------------------

└── 51
    ├── 35
    │   ├── 16, 29
    │   └── 42, 49
    └── 89, 98
        ├── 67, 73, 87
        ├── 91, 94
        └── 99


------------------------------

END - TEST 92


START - TEST 93
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(35);
generatedTree.insert2pass(73);
generatedTree.insert2pass(71);
generatedTree.insert2pass(93);
generatedTree.insert2pass(66);
generatedTree.insert2pass(56);
generatedTree.insert2pass(38);
generatedTree.insert2pass(50);
generatedTree.insert2pass(75);
generatedTree.insert2pass(98);
------------------------------

└── 38, 64, 73
    ├── 35
    ├── 50, 56
    ├── 66, 71
    └── 75, 93, 98

------------------------------

generatedTree.delete(71)
generatedTree.delete(98)
generatedTree.delete(50)

------------------------------

└── 38, 64, 73
    ├── 35
    ├── 56
    ├── 66
    └── 75, 93


------------------------------

END - TEST 93


START - TEST 94
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(67);
generatedTree.insert2pass(99);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(24);
generatedTree.insert2pass(57);
generatedTree.insert2pass(87);
generatedTree.insert2pass(88);
generatedTree.insert2pass(59);
generatedTree.insert2pass(27);
generatedTree.insert2pass(51);
generatedTree.insert2pass(12);
------------------------------

└── 67
    ├── 24, 57
    │   ├── 12, 20
    │   ├── 27, 28, 51
    │   └── 59
    └── 87
        ├── 74
        └── 88, 99

------------------------------

generatedTree.delete(74)
generatedTree.delete(20)
generatedTree.delete(12)

------------------------------

└── 67
    ├── 27, 57
    │   ├── 24
    │   ├── 28, 51
    │   └── 59
    └── 88
        ├── 87
        └── 99


------------------------------

END - TEST 94


START - TEST 95
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(78);
generatedTree.insert2pass(31);
generatedTree.insert2pass(89);
generatedTree.insert2pass(53);
generatedTree.insert2pass(73);
generatedTree.insert2pass(56);
generatedTree.insert2pass(65);
generatedTree.insert2pass(62);
------------------------------

└── 53, 65, 78
    ├── 31
    ├── 56, 62
    ├── 73
    └── 86, 89

------------------------------

generatedTree.delete(78)
generatedTree.delete(62)

------------------------------

└── 53, 65, 86
    ├── 31
    ├── 56
    ├── 73
    └── 89


------------------------------

END - TEST 95


START - TEST 96
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(77);
generatedTree.insert2pass(26);
generatedTree.insert2pass(44);
generatedTree.insert2pass(40);
generatedTree.insert2pass(46);
generatedTree.insert2pass(58);
generatedTree.insert2pass(62);
generatedTree.insert2pass(51);
generatedTree.insert2pass(95);
generatedTree.insert2pass(80);
generatedTree.insert2pass(57);
generatedTree.insert2pass(35);
generatedTree.insert2pass(13);
------------------------------

└── 46
    ├── 40
    │   ├── 13, 26, 35
    │   └── 44
    └── 58, 77
        ├── 51, 57
        ├── 62
        └── 80, 90, 95

------------------------------

generatedTree.delete(90)
generatedTree.delete(13)

------------------------------

└── 58
    ├── 40, 46
    │   ├── 26, 35
    │   ├── 44
    │   └── 51, 57
    └── 77
        ├── 62
        └── 80, 95


------------------------------

END - TEST 96


START - TEST 97
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(66);
generatedTree.insert2pass(44);
generatedTree.insert2pass(89);
generatedTree.insert2pass(48);
generatedTree.insert2pass(46);
generatedTree.insert2pass(22);
generatedTree.insert2pass(41);
generatedTree.insert2pass(98);
generatedTree.insert2pass(20);
generatedTree.insert2pass(69);
generatedTree.insert2pass(91);
generatedTree.insert2pass(47);
------------------------------

└── 46
    ├── 41
    │   ├── 20, 22
    │   └── 44
    └── 56, 89
        ├── 47, 48
        ├── 66, 69
        └── 91, 98

------------------------------

generatedTree.delete(41)
generatedTree.delete(44)
generatedTree.delete(46)

------------------------------

└── 56
    ├── 47
    │   ├── 20, 22
    │   └── 48
    └── 89
        ├── 66, 69
        └── 91, 98


------------------------------

END - TEST 97


START - TEST 98
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(78);
generatedTree.insert2pass(75);
generatedTree.insert2pass(41);
generatedTree.insert2pass(19);
generatedTree.insert2pass(28);
generatedTree.insert2pass(21);
generatedTree.insert2pass(34);
generatedTree.insert2pass(53);
generatedTree.insert2pass(13);
generatedTree.insert2pass(44);
generatedTree.insert2pass(98);
generatedTree.insert2pass(95);
generatedTree.insert2pass(52);
generatedTree.insert2pass(11);
generatedTree.insert2pass(33);
generatedTree.insert2pass(62);
generatedTree.insert2pass(67);
generatedTree.insert2pass(54);
------------------------------

└── 41
    ├── 21
    │   ├── 11, 13, 19
    │   └── 28, 33, 34
    └── 53, 67, 78
        ├── 44, 52
        ├── 54, 62
        ├── 75
        └── 84, 95, 98

------------------------------

generatedTree.delete(19)
generatedTree.delete(33)
generatedTree.delete(95)

------------------------------

└── 53
    ├── 21, 41
    │   ├── 11, 13
    │   ├── 28, 34
    │   └── 44, 52
    └── 67, 78
        ├── 54, 62
        ├── 75
        └── 84, 98


------------------------------

END - TEST 98


START - TEST 99
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(32);
generatedTree.insert2pass(44);
generatedTree.insert2pass(97);
generatedTree.insert2pass(64);
generatedTree.insert2pass(38);
generatedTree.insert2pass(51);
generatedTree.insert2pass(52);
generatedTree.insert2pass(75);
generatedTree.insert2pass(35);
generatedTree.insert2pass(43);
generatedTree.insert2pass(63);
------------------------------

└── 44
    ├── 35
    │   ├── 32
    │   └── 38, 43
    └── 52, 64
        ├── 51
        ├── 53, 63
        └── 75, 97

------------------------------

generatedTree.delete(52)
generatedTree.delete(44)
generatedTree.delete(35)

------------------------------

└── 38, 51, 64
    ├── 32
    ├── 43
    ├── 53, 63
    └── 75, 97


------------------------------

END - TEST 99


START - TEST 100
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(23);
generatedTree.insert2pass(46);
generatedTree.insert2pass(39);
generatedTree.insert2pass(52);
generatedTree.insert2pass(16);
generatedTree.insert2pass(91);
generatedTree.insert2pass(64);
generatedTree.insert2pass(30);
generatedTree.insert2pass(72);
generatedTree.insert2pass(21);
generatedTree.insert2pass(53);
generatedTree.insert2pass(44);
generatedTree.insert2pass(27);
generatedTree.insert2pass(33);
generatedTree.insert2pass(57);
generatedTree.insert2pass(82);
generatedTree.insert2pass(73);
generatedTree.insert2pass(54);
generatedTree.insert2pass(37);
generatedTree.insert2pass(38);
generatedTree.insert2pass(89);
------------------------------

└── 39, 57
    ├── 23, 30
    │   ├── 16, 21
    │   ├── 27
    │   └── 33, 37, 38
    ├── 52
    │   ├── 44, 46
    │   └── 53, 54
    └── 72, 82
        ├── 64
        ├── 73
        └── 89, 91

------------------------------

generatedTree.delete(64)

------------------------------

└── 39, 57
    ├── 23, 30
    │   ├── 16, 21
    │   ├── 27
    │   └── 33, 37, 38
    ├── 52
    │   ├── 44, 46
    │   └── 53, 54
    └── 82
        ├── 72, 73
        └── 89, 91


------------------------------

END - TEST 100


START - TEST 101
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(91);
generatedTree.insert2pass(50);
generatedTree.insert2pass(37);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
generatedTree.insert2pass(18);
generatedTree.insert2pass(85);
generatedTree.insert2pass(89);
generatedTree.insert2pass(80);
generatedTree.insert2pass(22);
generatedTree.insert2pass(54);
generatedTree.insert2pass(12);
------------------------------

└── 56
    ├── 22, 49
    │   ├── 12, 18
    │   ├── 37
    │   └── 50, 54
    └── 91
        ├── 80, 85, 89
        └── 95

------------------------------

generatedTree.delete(91)
generatedTree.delete(12)
generatedTree.delete(22)

------------------------------

└── 56
    ├── 49
    │   ├── 18, 37
    │   └── 50, 54
    └── 89
        ├── 80, 85
        └── 95


------------------------------

END - TEST 101


START - TEST 102
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(72);
generatedTree.insert2pass(95);
generatedTree.insert2pass(89);
generatedTree.insert2pass(57);
generatedTree.insert2pass(37);
generatedTree.insert2pass(29);
generatedTree.insert2pass(91);
generatedTree.insert2pass(70);
------------------------------

└── 37, 72
    ├── 29, 33
    ├── 57, 70
    └── 89, 91, 95

------------------------------

generatedTree.delete(29)
generatedTree.delete(57)
generatedTree.delete(91)

------------------------------

└── 37, 72
    ├── 33
    ├── 70
    └── 89, 95


------------------------------

END - TEST 102


START - TEST 103
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(69);
generatedTree.insert2pass(85);
generatedTree.insert2pass(45);
generatedTree.insert2pass(70);
generatedTree.insert2pass(37);
generatedTree.insert2pass(23);
generatedTree.insert2pass(40);
generatedTree.insert2pass(25);
generatedTree.insert2pass(18);
generatedTree.insert2pass(26);
generatedTree.insert2pass(78);
generatedTree.insert2pass(63);
generatedTree.insert2pass(48);
generatedTree.insert2pass(82);
generatedTree.insert2pass(55);
generatedTree.insert2pass(22);
generatedTree.insert2pass(95);
generatedTree.insert2pass(46);
------------------------------

└── 37, 69
    ├── 24
    │   ├── 18, 22, 23
    │   └── 25, 26
    ├── 45, 55
    │   ├── 40
    │   ├── 46, 48
    │   └── 63
    └── 78
        ├── 70
        └── 82, 85, 95

------------------------------

generatedTree.delete(78)
generatedTree.delete(23)

------------------------------

└── 55
    ├── 24, 37, 45
    │   ├── 18, 22
    │   ├── 25, 26
    │   ├── 40
    │   └── 46, 48
    └── 69, 82
        ├── 63
        ├── 70
        └── 85, 95


------------------------------

END - TEST 103


START - TEST 104
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(18);
generatedTree.insert2pass(42);
generatedTree.insert2pass(36);
generatedTree.insert2pass(12);
generatedTree.insert2pass(70);
generatedTree.insert2pass(82);
generatedTree.insert2pass(79);
generatedTree.insert2pass(28);
generatedTree.insert2pass(29);
generatedTree.insert2pass(38);
generatedTree.insert2pass(45);
generatedTree.insert2pass(13);
generatedTree.insert2pass(74);
generatedTree.insert2pass(88);
generatedTree.insert2pass(43);
generatedTree.insert2pass(93);
generatedTree.insert2pass(90);
generatedTree.insert2pass(81);
generatedTree.insert2pass(71);
generatedTree.insert2pass(78);
generatedTree.insert2pass(31);
------------------------------

└── 29, 70
    ├── 25
    │   ├── 12, 13, 18
    │   └── 28
    ├── 42
    │   ├── 31, 36, 38
    │   └── 43, 45
    └── 79, 88
        ├── 71, 74, 78
        ├── 81, 82
        └── 90, 93

------------------------------

generatedTree.delete(12)
generatedTree.delete(38)
generatedTree.delete(88)

------------------------------

└── 70
    ├── 25, 29, 42
    │   ├── 13, 18
    │   ├── 28
    │   ├── 31, 36
    │   └── 43, 45
    └── 79, 82
        ├── 71, 74, 78
        ├── 81
        └── 90, 93


------------------------------

END - TEST 104


START - TEST 105
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(40);
generatedTree.insert2pass(84);
generatedTree.insert2pass(54);
generatedTree.insert2pass(26);
generatedTree.insert2pass(31);
generatedTree.insert2pass(90);
generatedTree.insert2pass(51);
generatedTree.insert2pass(78);
generatedTree.insert2pass(88);
generatedTree.insert2pass(81);
generatedTree.insert2pass(60);
generatedTree.insert2pass(15);
generatedTree.insert2pass(61);
generatedTree.insert2pass(71);
generatedTree.insert2pass(57);
generatedTree.insert2pass(30);
------------------------------

└── 54
    ├── 26, 40
    │   ├── 15
    │   ├── 30, 31
    │   └── 51
    └── 61, 78, 84
        ├── 57, 60
        ├── 71
        ├── 81
        └── 87, 88, 90

------------------------------

generatedTree.delete(61)
generatedTree.delete(87)

------------------------------

└── 54
    ├── 26, 40
    │   ├── 15
    │   ├── 30, 31
    │   └── 51
    └── 60, 78, 84
        ├── 57
        ├── 71
        ├── 81
        └── 88, 90


------------------------------

END - TEST 105


START - TEST 106
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(60);
generatedTree.insert2pass(78);
generatedTree.insert2pass(54);
generatedTree.insert2pass(71);
generatedTree.insert2pass(65);
generatedTree.insert2pass(42);
generatedTree.insert2pass(32);
generatedTree.insert2pass(62);
------------------------------

└── 42, 60, 71
    ├── 32, 33
    ├── 54
    ├── 62, 65
    └── 78

------------------------------

generatedTree.delete(32)
generatedTree.delete(71)

------------------------------

└── 42, 60, 65
    ├── 33
    ├── 54
    ├── 62
    └── 78


------------------------------

END - TEST 106


START - TEST 107
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(34);
generatedTree.insert2pass(27);
generatedTree.insert2pass(18);
generatedTree.insert2pass(70);
generatedTree.insert2pass(38);
generatedTree.insert2pass(23);
generatedTree.insert2pass(28);
generatedTree.insert2pass(52);
generatedTree.insert2pass(31);
generatedTree.insert2pass(96);
------------------------------

└── 23, 34, 70
    ├── 18
    ├── 27, 28, 31
    ├── 38, 52
    └── 84, 96

------------------------------

generatedTree.delete(27)

------------------------------

└── 23, 34, 70
    ├── 18
    ├── 28, 31
    ├── 38, 52
    └── 84, 96


------------------------------

END - TEST 107


START - TEST 108
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(14);
generatedTree.insert2pass(42);
generatedTree.insert2pass(40);
generatedTree.insert2pass(13);
generatedTree.insert2pass(70);
generatedTree.insert2pass(57);
generatedTree.insert2pass(83);
generatedTree.insert2pass(51);
------------------------------

└── 40, 57
    ├── 13, 14
    ├── 42, 51
    └── 70, 83

------------------------------

generatedTree.delete(51)
generatedTree.delete(14)
generatedTree.delete(57)

------------------------------

└── 40, 70
    ├── 13
    ├── 42
    └── 83


------------------------------

END - TEST 108


START - TEST 109
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(18);
generatedTree.insert2pass(22);
generatedTree.insert2pass(14);
generatedTree.insert2pass(63);
generatedTree.insert2pass(59);
generatedTree.insert2pass(47);
generatedTree.insert2pass(56);
generatedTree.insert2pass(75);
generatedTree.insert2pass(31);
generatedTree.insert2pass(72);
generatedTree.insert2pass(39);
generatedTree.insert2pass(57);
generatedTree.insert2pass(16);
generatedTree.insert2pass(42);
generatedTree.insert2pass(60);
generatedTree.insert2pass(89);
generatedTree.insert2pass(97);
------------------------------

└── 47
    ├── 18, 31
    │   ├── 14, 16
    │   ├── 22
    │   └── 39, 42
    └── 59, 72
        ├── 56, 57
        ├── 60, 63
        └── 75, 89, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(63)
generatedTree.delete(72)

------------------------------

└── 47
    ├── 18, 31
    │   ├── 14, 16
    │   ├── 22
    │   └── 39, 42
    └── 59, 75
        ├── 56, 57
        ├── 60
        └── 89


------------------------------

END - TEST 109


START - TEST 110
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(91);
generatedTree.insert2pass(68);
generatedTree.insert2pass(35);
generatedTree.insert2pass(72);
generatedTree.insert2pass(21);
generatedTree.insert2pass(57);
generatedTree.insert2pass(28);
generatedTree.insert2pass(53);
generatedTree.insert2pass(61);
generatedTree.insert2pass(15);
generatedTree.insert2pass(37);
generatedTree.insert2pass(96);
generatedTree.insert2pass(30);
generatedTree.insert2pass(62);
generatedTree.insert2pass(77);
generatedTree.insert2pass(38);
generatedTree.insert2pass(22);
generatedTree.insert2pass(16);
generatedTree.insert2pass(26);
generatedTree.insert2pass(84);
------------------------------

└── 57
    ├── 21, 28, 35
    │   ├── 15, 16
    │   ├── 22, 26
    │   ├── 30
    │   └── 37, 38, 53
    └── 68, 91
        ├── 61, 62
        ├── 72, 77, 84
        └── 96

------------------------------

generatedTree.delete(68)
generatedTree.delete(53)
generatedTree.delete(96)

------------------------------

└── 57
    ├── 21, 28, 35
    │   ├── 15, 16
    │   ├── 22, 26
    │   ├── 30
    │   └── 37, 38
    └── 62, 84
        ├── 61
        ├── 72, 77
        └── 91


------------------------------

END - TEST 110


START - TEST 111
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(81);
generatedTree.insert2pass(97);
generatedTree.insert2pass(73);
generatedTree.insert2pass(31);
generatedTree.insert2pass(78);
generatedTree.insert2pass(91);
generatedTree.insert2pass(76);
generatedTree.insert2pass(85);
generatedTree.insert2pass(17);
generatedTree.insert2pass(92);
------------------------------

└── 73, 81, 91
    ├── 17, 31
    ├── 76, 78
    ├── 85
    └── 92, 97

------------------------------

generatedTree.delete(73)
generatedTree.delete(76)
generatedTree.delete(91)

------------------------------

└── 31, 81, 92
    ├── 17
    ├── 78
    ├── 85
    └── 97


------------------------------

END - TEST 111


START - TEST 112
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(28);
generatedTree.insert2pass(48);
generatedTree.insert2pass(88);
generatedTree.insert2pass(74);
generatedTree.insert2pass(49);
generatedTree.insert2pass(85);
generatedTree.insert2pass(25);
generatedTree.insert2pass(32);
generatedTree.insert2pass(61);
generatedTree.insert2pass(99);
generatedTree.insert2pass(71);
generatedTree.insert2pass(51);
generatedTree.insert2pass(55);
generatedTree.insert2pass(84);
generatedTree.insert2pass(67);
generatedTree.insert2pass(41);
generatedTree.insert2pass(76);
generatedTree.insert2pass(59);
generatedTree.insert2pass(65);
------------------------------

└── 48, 74
    ├── 28
    │   ├── 25
    │   └── 32, 41
    ├── 51, 61
    │   ├── 49
    │   ├── 55, 59
    │   └── 65, 67, 71
    └── 88
        ├── 76, 84, 85
        └── 93, 99

------------------------------

generatedTree.delete(93)

------------------------------

└── 48, 61
    ├── 28
    │   ├── 25
    │   └── 32, 41
    ├── 51
    │   ├── 49
    │   └── 55, 59
    └── 74, 88
        ├── 65, 67, 71
        ├── 76, 84, 85
        └── 99


------------------------------

END - TEST 112


START - TEST 113
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(31);
generatedTree.insert2pass(91);
generatedTree.insert2pass(35);
generatedTree.insert2pass(46);
generatedTree.insert2pass(92);
generatedTree.insert2pass(61);
generatedTree.insert2pass(83);
generatedTree.insert2pass(48);
generatedTree.insert2pass(52);
------------------------------

└── 46
    ├── 31
    │   ├── 19
    │   └── 35
    └── 61, 91
        ├── 48, 52
        ├── 83
        └── 92

------------------------------

generatedTree.delete(91)
generatedTree.delete(92)

------------------------------

└── 31, 46, 61
    ├── 19
    ├── 35
    ├── 48, 52
    └── 83


------------------------------

END - TEST 113


START - TEST 114
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(79);
generatedTree.insert2pass(21);
generatedTree.insert2pass(39);
generatedTree.insert2pass(47);
generatedTree.insert2pass(12);
generatedTree.insert2pass(52);
generatedTree.insert2pass(78);
generatedTree.insert2pass(63);
generatedTree.insert2pass(54);
------------------------------

└── 36, 47, 61
    ├── 12, 21, 29
    ├── 39
    ├── 52, 54
    └── 63, 78, 79

------------------------------

generatedTree.delete(63)
generatedTree.delete(61)
generatedTree.delete(39)

------------------------------

└── 29, 47, 54
    ├── 12, 21
    ├── 36
    ├── 52
    └── 78, 79


------------------------------

END - TEST 114


START - TEST 115
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(99);
generatedTree.insert2pass(47);
generatedTree.insert2pass(75);
generatedTree.insert2pass(64);
generatedTree.insert2pass(56);
------------------------------

└── 75
    ├── 47, 56, 64
    └── 99

------------------------------

generatedTree.delete(56)
generatedTree.delete(99)

------------------------------

└── 64
    ├── 47
    └── 75


------------------------------

END - TEST 115


START - TEST 116
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(18);
generatedTree.insert2pass(11);
generatedTree.insert2pass(46);
generatedTree.insert2pass(50);
generatedTree.insert2pass(91);
generatedTree.insert2pass(34);
generatedTree.insert2pass(82);
generatedTree.insert2pass(84);
generatedTree.insert2pass(81);
generatedTree.insert2pass(98);
------------------------------

└── 18, 50, 87
    ├── 11
    ├── 34, 46
    ├── 81, 82, 84
    └── 91, 98

------------------------------

generatedTree.delete(46)
generatedTree.delete(81)
generatedTree.delete(98)

------------------------------

└── 18, 50, 87
    ├── 11
    ├── 34
    ├── 82, 84
    └── 91


------------------------------

END - TEST 116


START - TEST 117
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(29);
generatedTree.insert2pass(63);
generatedTree.insert2pass(92);
generatedTree.insert2pass(86);
generatedTree.insert2pass(97);
generatedTree.insert2pass(40);
generatedTree.insert2pass(14);
generatedTree.insert2pass(75);
generatedTree.insert2pass(69);
generatedTree.insert2pass(98);
generatedTree.insert2pass(25);
generatedTree.insert2pass(15);
generatedTree.insert2pass(80);
generatedTree.insert2pass(38);
generatedTree.insert2pass(24);
------------------------------

└── 63
    ├── 15, 29
    │   ├── 14
    │   ├── 24, 25
    │   └── 38, 40
    └── 75, 88
        ├── 69
        ├── 80, 86
        └── 92, 97, 98

------------------------------

generatedTree.delete(92)

------------------------------

└── 63
    ├── 15, 29
    │   ├── 14
    │   ├── 24, 25
    │   └── 38, 40
    └── 75, 88
        ├── 69
        ├── 80, 86
        └── 97, 98


------------------------------

END - TEST 117


START - TEST 118
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(84);
generatedTree.insert2pass(33);
generatedTree.insert2pass(79);
generatedTree.insert2pass(90);
generatedTree.insert2pass(31);
------------------------------

└── 33
    ├── 20, 31
    └── 79, 84, 90

------------------------------

generatedTree.delete(90)
generatedTree.delete(84)

------------------------------

└── 33
    ├── 20, 31
    └── 79


------------------------------

END - TEST 118


START - TEST 119
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(20);
generatedTree.insert2pass(96);
generatedTree.insert2pass(68);
generatedTree.insert2pass(38);
generatedTree.insert2pass(74);
generatedTree.insert2pass(53);
generatedTree.insert2pass(87);
generatedTree.insert2pass(73);
generatedTree.insert2pass(52);
generatedTree.insert2pass(30);
generatedTree.insert2pass(55);
generatedTree.insert2pass(81);
generatedTree.insert2pass(99);
generatedTree.insert2pass(83);
generatedTree.insert2pass(29);
------------------------------

└── 57
    ├── 38
    │   ├── 20, 29, 30
    │   └── 52, 53, 55
    └── 74, 87
        ├── 68, 73
        ├── 81, 83
        └── 96, 99

------------------------------

generatedTree.delete(55)

------------------------------

└── 74
    ├── 38, 57
    │   ├── 20, 29, 30
    │   ├── 52, 53
    │   └── 68, 73
    └── 87
        ├── 81, 83
        └── 96, 99


------------------------------

END - TEST 119


START - TEST 120
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(25);
generatedTree.insert2pass(18);
generatedTree.insert2pass(85);
generatedTree.insert2pass(43);
generatedTree.insert2pass(92);
generatedTree.insert2pass(15);
generatedTree.insert2pass(94);
generatedTree.insert2pass(96);
generatedTree.insert2pass(73);
generatedTree.insert2pass(90);
generatedTree.insert2pass(41);
generatedTree.insert2pass(87);
generatedTree.insert2pass(48);
------------------------------

└── 77
    ├── 25, 43
    │   ├── 15, 18
    │   ├── 41
    │   └── 48, 73
    └── 92
        ├── 85, 87, 90
        └── 94, 96

------------------------------

generatedTree.delete(15)
generatedTree.delete(18)

------------------------------

└── 77
    ├── 43
    │   ├── 25, 41
    │   └── 48, 73
    └── 92
        ├── 85, 87, 90
        └── 94, 96


------------------------------

END - TEST 120


START - TEST 121
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(55);
generatedTree.insert2pass(67);
generatedTree.insert2pass(62);
generatedTree.insert2pass(50);
generatedTree.insert2pass(37);
generatedTree.insert2pass(95);
generatedTree.insert2pass(96);
generatedTree.insert2pass(26);
generatedTree.insert2pass(75);
generatedTree.insert2pass(59);
generatedTree.insert2pass(85);
------------------------------

└── 50, 62, 95
    ├── 26, 37
    ├── 55, 59
    ├── 67, 75, 85
    └── 96

------------------------------

generatedTree.delete(67)

------------------------------

└── 50, 62, 95
    ├── 26, 37
    ├── 55, 59
    ├── 75, 85
    └── 96


------------------------------

END - TEST 121


START - TEST 122
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(59);
generatedTree.insert2pass(31);
generatedTree.insert2pass(25);
generatedTree.insert2pass(11);
generatedTree.insert2pass(78);
generatedTree.insert2pass(87);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(60);
generatedTree.insert2pass(51);
generatedTree.insert2pass(58);
generatedTree.insert2pass(43);
generatedTree.insert2pass(71);
------------------------------

└── 59
    ├── 25, 51
    │   ├── 11
    │   ├── 31, 43
    │   └── 58
    └── 70, 82
        ├── 60
        ├── 71, 78
        └── 87, 89

------------------------------

generatedTree.delete(70)
generatedTree.delete(87)

------------------------------

└── 59
    ├── 25, 51
    │   ├── 11
    │   ├── 31, 43
    │   └── 58
    └── 71, 82
        ├── 60
        ├── 78
        └── 89


------------------------------

END - TEST 122


START - TEST 123
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(32);
generatedTree.insert2pass(34);
generatedTree.insert2pass(49);
generatedTree.insert2pass(76);
generatedTree.insert2pass(83);
generatedTree.insert2pass(66);
generatedTree.insert2pass(84);
generatedTree.insert2pass(20);
generatedTree.insert2pass(60);
generatedTree.insert2pass(33);
------------------------------

└── 34, 65, 76
    ├── 20, 32, 33
    ├── 49, 60
    ├── 66
    └── 83, 84

------------------------------

generatedTree.delete(65)
generatedTree.delete(83)
generatedTree.delete(33)

------------------------------

└── 34, 60, 76
    ├── 20, 32
    ├── 49
    ├── 66
    └── 84


------------------------------

END - TEST 123


START - TEST 124
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(36);
generatedTree.insert2pass(35);
generatedTree.insert2pass(87);
generatedTree.insert2pass(55);
generatedTree.insert2pass(47);
generatedTree.insert2pass(95);
generatedTree.insert2pass(21);
generatedTree.insert2pass(12);
generatedTree.insert2pass(19);
generatedTree.insert2pass(30);
generatedTree.insert2pass(40);
------------------------------

└── 21, 36, 62
    ├── 12, 19
    ├── 30, 35
    ├── 40, 47, 55
    └── 87, 95

------------------------------

generatedTree.delete(47)
generatedTree.delete(12)
generatedTree.delete(35)

------------------------------

└── 21, 36, 62
    ├── 19
    ├── 30
    ├── 40, 55
    └── 87, 95


------------------------------

END - TEST 124


START - TEST 125
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(65);
generatedTree.insert2pass(74);
generatedTree.insert2pass(44);
generatedTree.insert2pass(49);
generatedTree.insert2pass(97);
generatedTree.insert2pass(31);
generatedTree.insert2pass(36);
generatedTree.insert2pass(94);
generatedTree.insert2pass(59);
generatedTree.insert2pass(28);
generatedTree.insert2pass(12);
generatedTree.insert2pass(35);
------------------------------

└── 49
    ├── 28, 36
    │   ├── 12
    │   ├── 31, 35
    │   └── 44
    └── 73
        ├── 59, 65
        └── 74, 94, 97

------------------------------

generatedTree.delete(65)
generatedTree.delete(59)
generatedTree.delete(74)

------------------------------

└── 36
    ├── 28
    │   ├── 12
    │   └── 31, 35
    └── 49, 94
        ├── 44
        ├── 73
        └── 97


------------------------------

END - TEST 125


START - TEST 126
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(87);
generatedTree.insert2pass(30);
generatedTree.insert2pass(28);
generatedTree.insert2pass(65);
generatedTree.insert2pass(61);
generatedTree.insert2pass(11);
generatedTree.insert2pass(41);
generatedTree.insert2pass(99);
generatedTree.insert2pass(19);
generatedTree.insert2pass(20);
generatedTree.insert2pass(39);
generatedTree.insert2pass(43);
generatedTree.insert2pass(26);
generatedTree.insert2pass(32);
generatedTree.insert2pass(52);
generatedTree.insert2pass(82);
------------------------------

└── 30
    ├── 19
    │   ├── 11
    │   └── 20, 26, 28
    └── 41, 61, 66
        ├── 32, 39
        ├── 43, 52
        ├── 65
        └── 82, 87, 99

------------------------------

generatedTree.delete(30)

------------------------------

└── 32
    ├── 19
    │   ├── 11
    │   └── 20, 26, 28
    └── 41, 61, 66
        ├── 39
        ├── 43, 52
        ├── 65
        └── 82, 87, 99


------------------------------

END - TEST 126


START - TEST 127
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(67);
generatedTree.insert2pass(98);
generatedTree.insert2pass(36);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
generatedTree.insert2pass(33);
generatedTree.insert2pass(18);
generatedTree.insert2pass(49);
generatedTree.insert2pass(82);
generatedTree.insert2pass(31);
generatedTree.insert2pass(34);
generatedTree.insert2pass(22);
generatedTree.insert2pass(94);
generatedTree.insert2pass(87);
generatedTree.insert2pass(62);
generatedTree.insert2pass(99);
generatedTree.insert2pass(56);
generatedTree.insert2pass(75);
generatedTree.insert2pass(26);
------------------------------

└── 36
    ├── 18, 33
    │   ├── 15
    │   ├── 22, 26, 31
    │   └── 34
    └── 63, 70, 94
        ├── 49, 56, 62
        ├── 67
        ├── 75, 82, 87
        └── 98, 99

------------------------------

generatedTree.delete(33)

------------------------------

└── 36
    ├── 18, 31
    │   ├── 15
    │   ├── 22, 26
    │   └── 34
    └── 63, 70, 94
        ├── 49, 56, 62
        ├── 67
        ├── 75, 82, 87
        └── 98, 99


------------------------------

END - TEST 127


START - TEST 128
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(79);
generatedTree.insert2pass(15);
generatedTree.insert2pass(21);
generatedTree.insert2pass(78);
generatedTree.insert2pass(41);
generatedTree.insert2pass(60);
generatedTree.insert2pass(53);
generatedTree.insert2pass(25);
generatedTree.insert2pass(14);
generatedTree.insert2pass(51);
generatedTree.insert2pass(34);
generatedTree.insert2pass(70);
generatedTree.insert2pass(29);
generatedTree.insert2pass(82);
generatedTree.insert2pass(44);
generatedTree.insert2pass(89);
generatedTree.insert2pass(72);
------------------------------

└── 41
    ├── 19, 25
    │   ├── 14, 15
    │   ├── 21
    │   └── 29, 34
    └── 53, 78
        ├── 44, 51
        ├── 60, 70, 72
        └── 79, 82, 89

------------------------------

generatedTree.delete(70)
generatedTree.delete(60)
generatedTree.delete(21)

------------------------------

└── 41
    ├── 15, 25
    │   ├── 14
    │   ├── 19
    │   └── 29, 34
    └── 53, 78
        ├── 44, 51
        ├── 72
        └── 79, 82, 89


------------------------------

END - TEST 128


START - TEST 129
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(83);
generatedTree.insert2pass(51);
generatedTree.insert2pass(44);
generatedTree.insert2pass(79);
generatedTree.insert2pass(18);
generatedTree.insert2pass(53);
generatedTree.insert2pass(47);
generatedTree.insert2pass(11);
------------------------------

└── 44, 57
    ├── 11, 18
    ├── 47, 51, 53
    └── 79, 83

------------------------------

generatedTree.delete(44)

------------------------------

└── 18, 57
    ├── 11
    ├── 47, 51, 53
    └── 79, 83


------------------------------

END - TEST 129


START - TEST 130
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(14);
generatedTree.insert2pass(75);
generatedTree.insert2pass(52);
generatedTree.insert2pass(97);
generatedTree.insert2pass(39);
generatedTree.insert2pass(43);
generatedTree.insert2pass(94);
generatedTree.insert2pass(44);
------------------------------

└── 40, 75
    ├── 14, 39
    ├── 43, 44, 52
    └── 94, 97

------------------------------

generatedTree.delete(40)
generatedTree.delete(97)

------------------------------

└── 39, 75
    ├── 14
    ├── 43, 44, 52
    └── 94


------------------------------

END - TEST 130


START - TEST 131
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(84);
generatedTree.insert2pass(53);
generatedTree.insert2pass(78);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(11);
generatedTree.insert2pass(50);
generatedTree.insert2pass(21);
generatedTree.insert2pass(79);
generatedTree.insert2pass(13);
generatedTree.insert2pass(81);
------------------------------

└── 26, 53, 78
    ├── 11, 13, 21
    ├── 36, 50
    ├── 61
    └── 79, 81, 84

------------------------------

generatedTree.delete(21)

------------------------------

└── 26, 53, 78
    ├── 11, 13
    ├── 36, 50
    ├── 61
    └── 79, 81, 84


------------------------------

END - TEST 131


START - TEST 132
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(79);
generatedTree.insert2pass(58);
generatedTree.insert2pass(97);
generatedTree.insert2pass(73);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(20);
------------------------------

└── 58, 66
    ├── 20, 36
    ├── 61
    └── 73, 79, 97

------------------------------

generatedTree.delete(36)
generatedTree.delete(58)

------------------------------

└── 66
    ├── 20, 61
    └── 73, 79, 97


------------------------------

END - TEST 132


START - TEST 133
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(47);
generatedTree.insert2pass(45);
generatedTree.insert2pass(76);
generatedTree.insert2pass(75);
generatedTree.insert2pass(92);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
generatedTree.insert2pass(14);
generatedTree.insert2pass(40);
generatedTree.insert2pass(41);
generatedTree.insert2pass(15);
generatedTree.insert2pass(69);
generatedTree.insert2pass(49);
generatedTree.insert2pass(37);
generatedTree.insert2pass(68);
generatedTree.insert2pass(95);
generatedTree.insert2pass(29);
------------------------------

└── 45
    ├── 21, 40
    │   ├── 14, 15
    │   ├── 29, 37, 38
    │   └── 41
    └── 58, 75
        ├── 47, 49
        ├── 68, 69
        └── 76, 92, 95

------------------------------

generatedTree.delete(76)
generatedTree.delete(15)
generatedTree.delete(38)

------------------------------

└── 45
    ├── 21, 40
    │   ├── 14
    │   ├── 29, 37
    │   └── 41
    └── 58, 75
        ├── 47, 49
        ├── 68, 69
        └── 92, 95


------------------------------

END - TEST 133


START - TEST 134
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(57);
generatedTree.insert2pass(98);
generatedTree.insert2pass(80);
generatedTree.insert2pass(92);
generatedTree.insert2pass(25);
generatedTree.insert2pass(83);
generatedTree.insert2pass(50);
generatedTree.insert2pass(63);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(66);
generatedTree.insert2pass(59);
generatedTree.insert2pass(40);
generatedTree.insert2pass(13);
generatedTree.insert2pass(68);
generatedTree.insert2pass(26);
------------------------------

└── 57
    ├── 25, 45
    │   ├── 13, 15
    │   ├── 26, 39, 40
    │   └── 50
    └── 63, 80, 92
        ├── 59
        ├── 66, 68
        ├── 83
        └── 98

------------------------------

generatedTree.delete(66)
generatedTree.delete(68)

------------------------------

└── 57
    ├── 25, 45
    │   ├── 13, 15
    │   ├── 26, 39, 40
    │   └── 50
    └── 80, 92
        ├── 59, 63
        ├── 83
        └── 98


------------------------------

END - TEST 134


START - TEST 135
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(40);
generatedTree.insert2pass(80);
generatedTree.insert2pass(54);
generatedTree.insert2pass(59);
generatedTree.insert2pass(24);
generatedTree.insert2pass(26);
generatedTree.insert2pass(93);
------------------------------

└── 54, 74
    ├── 24, 26, 40
    ├── 59
    └── 80, 93

------------------------------

generatedTree.delete(93)
generatedTree.delete(80)
generatedTree.delete(26)

------------------------------

└── 54
    ├── 24, 40
    └── 59, 74


------------------------------

END - TEST 135


START - TEST 136
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(50);
generatedTree.insert2pass(90);
generatedTree.insert2pass(39);
generatedTree.insert2pass(51);
generatedTree.insert2pass(97);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(37);
generatedTree.insert2pass(68);
generatedTree.insert2pass(69);
------------------------------

└── 50
    ├── 17
    │   ├── 16
    │   └── 37, 39
    └── 58, 90
        ├── 51
        ├── 68, 69
        └── 97

------------------------------

generatedTree.delete(69)
generatedTree.delete(17)
generatedTree.delete(39)

------------------------------

└── 58
    ├── 50
    │   ├── 16, 37
    │   └── 51
    └── 90
        ├── 68
        └── 97


------------------------------

END - TEST 136


START - TEST 137
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(52);
generatedTree.insert2pass(44);
generatedTree.insert2pass(93);
generatedTree.insert2pass(58);
generatedTree.insert2pass(68);
generatedTree.insert2pass(22);
generatedTree.insert2pass(82);
generatedTree.insert2pass(73);
generatedTree.insert2pass(16);
generatedTree.insert2pass(85);
generatedTree.insert2pass(20);
generatedTree.insert2pass(87);
generatedTree.insert2pass(51);
generatedTree.insert2pass(29);
generatedTree.insert2pass(48);
generatedTree.insert2pass(24);
generatedTree.insert2pass(33);
generatedTree.insert2pass(77);
------------------------------

└── 58
    ├── 21, 24, 44
    │   ├── 16, 20
    │   ├── 22
    │   ├── 29, 33
    │   └── 48, 51, 52
    └── 82
        ├── 68, 73, 77
        └── 85, 87, 93

------------------------------

generatedTree.delete(93)

------------------------------

└── 44
    ├── 21, 24
    │   ├── 16, 20
    │   ├── 22
    │   └── 29, 33
    └── 58, 82
        ├── 48, 51, 52
        ├── 68, 73, 77
        └── 85, 87


------------------------------

END - TEST 137


START - TEST 138
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(65);
generatedTree.insert2pass(12);
generatedTree.insert2pass(40);
generatedTree.insert2pass(34);
generatedTree.insert2pass(89);
generatedTree.insert2pass(61);
generatedTree.insert2pass(80);
generatedTree.insert2pass(26);
generatedTree.insert2pass(88);
generatedTree.insert2pass(69);
------------------------------

└── 34, 65, 89
    ├── 12, 26
    ├── 40, 61
    ├── 69, 80, 88
    └── 94

------------------------------

generatedTree.delete(88)
generatedTree.delete(26)
generatedTree.delete(80)

------------------------------

└── 34, 65, 89
    ├── 12
    ├── 40, 61
    ├── 69
    └── 94


------------------------------

END - TEST 138


START - TEST 139
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(53);
generatedTree.insert2pass(46);
generatedTree.insert2pass(65);
generatedTree.insert2pass(86);
generatedTree.insert2pass(14);
generatedTree.insert2pass(38);
generatedTree.insert2pass(76);
generatedTree.insert2pass(58);
generatedTree.insert2pass(41);
generatedTree.insert2pass(48);
generatedTree.insert2pass(52);
generatedTree.insert2pass(43);
generatedTree.insert2pass(82);
generatedTree.insert2pass(75);
generatedTree.insert2pass(78);
generatedTree.insert2pass(56);
------------------------------

└── 46
    ├── 38
    │   ├── 14
    │   └── 41, 43, 45
    └── 53, 65, 82
        ├── 48, 52
        ├── 56, 58
        ├── 75, 76, 78
        └── 86

------------------------------

generatedTree.delete(41)
generatedTree.delete(75)
generatedTree.delete(65)

------------------------------

└── 53
    ├── 38, 46
    │   ├── 14
    │   ├── 43, 45
    │   └── 48, 52
    └── 58, 82
        ├── 56
        ├── 76, 78
        └── 86


------------------------------

END - TEST 139


START - TEST 140
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(74);
generatedTree.insert2pass(69);
generatedTree.insert2pass(16);
generatedTree.insert2pass(79);
generatedTree.insert2pass(57);
generatedTree.insert2pass(45);
generatedTree.insert2pass(92);
------------------------------

└── 16, 69
    ├── 12
    ├── 45, 57
    └── 74, 79, 92

------------------------------

generatedTree.delete(16)
generatedTree.delete(57)

------------------------------

└── 45, 74
    ├── 12
    ├── 69
    └── 79, 92


------------------------------

END - TEST 140


START - TEST 141
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(37);
generatedTree.insert2pass(41);
generatedTree.insert2pass(55);
generatedTree.insert2pass(73);
generatedTree.insert2pass(40);
generatedTree.insert2pass(76);
generatedTree.insert2pass(71);
generatedTree.insert2pass(44);
generatedTree.insert2pass(63);
generatedTree.insert2pass(88);
generatedTree.insert2pass(81);
generatedTree.insert2pass(19);
generatedTree.insert2pass(77);
------------------------------

└── 55
    ├── 41
    │   ├── 19, 37, 40
    │   └── 44
    └── 73, 84
        ├── 63, 71
        ├── 76, 77, 81
        └── 88

------------------------------

generatedTree.delete(44)
generatedTree.delete(81)
generatedTree.delete(71)

------------------------------

└── 55
    ├── 40
    │   ├── 19, 37
    │   └── 41
    └── 73, 84
        ├── 63
        ├── 76, 77
        └── 88


------------------------------

END - TEST 141


START - TEST 142
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(69);
generatedTree.insert2pass(70);
generatedTree.insert2pass(74);
generatedTree.insert2pass(36);
generatedTree.insert2pass(49);
generatedTree.insert2pass(66);
generatedTree.insert2pass(63);
generatedTree.insert2pass(80);
generatedTree.insert2pass(72);
generatedTree.insert2pass(43);
generatedTree.insert2pass(24);
generatedTree.insert2pass(28);
generatedTree.insert2pass(58);
------------------------------

└── 70
    ├── 36, 49, 66
    │   ├── 24, 28
    │   ├── 43
    │   ├── 58, 63
    │   └── 69
    └── 80
        ├── 72, 74
        └── 93

------------------------------

generatedTree.delete(80)
generatedTree.delete(63)
generatedTree.delete(36)

------------------------------

└── 66
    ├── 28, 49
    │   ├── 24
    │   ├── 43
    │   └── 58
    └── 70, 74
        ├── 69
        ├── 72
        └── 93


------------------------------

END - TEST 142


START - TEST 143
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(35);
generatedTree.insert2pass(68);
generatedTree.insert2pass(84);
generatedTree.insert2pass(70);
generatedTree.insert2pass(17);
generatedTree.insert2pass(65);
generatedTree.insert2pass(87);
generatedTree.insert2pass(34);
generatedTree.insert2pass(50);
generatedTree.insert2pass(56);
generatedTree.insert2pass(30);
generatedTree.insert2pass(66);
generatedTree.insert2pass(37);
------------------------------

└── 65
    ├── 24, 35
    │   ├── 17
    │   ├── 30, 34
    │   └── 37, 50, 56
    └── 70
        ├── 66, 68
        └── 84, 87

------------------------------

generatedTree.delete(17)
generatedTree.delete(56)
generatedTree.delete(50)

------------------------------

└── 65
    ├── 30, 35
    │   ├── 24
    │   ├── 34
    │   └── 37
    └── 70
        ├── 66, 68
        └── 84, 87


------------------------------

END - TEST 143


START - TEST 144
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(75);
generatedTree.insert2pass(28);
generatedTree.insert2pass(27);
generatedTree.insert2pass(25);
generatedTree.insert2pass(50);
------------------------------

└── 28
    ├── 17, 25, 27
    └── 50, 75

------------------------------

generatedTree.delete(50)
generatedTree.delete(28)
generatedTree.delete(17)

------------------------------

└── 27
    ├── 25
    └── 75


------------------------------

END - TEST 144


START - TEST 145
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(90);
generatedTree.insert2pass(34);
generatedTree.insert2pass(83);
generatedTree.insert2pass(72);
generatedTree.insert2pass(50);
generatedTree.insert2pass(30);
generatedTree.insert2pass(93);
generatedTree.insert2pass(77);
generatedTree.insert2pass(92);
generatedTree.insert2pass(73);
------------------------------

└── 64, 83
    ├── 30, 34, 50
    ├── 72, 73, 77
    └── 90, 92, 93

------------------------------

generatedTree.delete(83)

------------------------------

└── 64, 77
    ├── 30, 34, 50
    ├── 72, 73
    └── 90, 92, 93


------------------------------

END - TEST 145


START - TEST 146
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(63);
generatedTree.insert2pass(90);
generatedTree.insert2pass(48);
generatedTree.insert2pass(92);
generatedTree.insert2pass(78);
generatedTree.insert2pass(50);
generatedTree.insert2pass(86);
------------------------------

└── 63, 90
    ├── 32, 48, 50
    ├── 78, 86
    └── 92

------------------------------

generatedTree.delete(63)
generatedTree.delete(48)

------------------------------

└── 50, 90
    ├── 32
    ├── 78, 86
    └── 92


------------------------------

END - TEST 146


START - TEST 147
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(27);
generatedTree.insert2pass(54);
generatedTree.insert2pass(31);
generatedTree.insert2pass(81);
generatedTree.insert2pass(69);
generatedTree.insert2pass(68);
generatedTree.insert2pass(57);
generatedTree.insert2pass(71);
generatedTree.insert2pass(63);
generatedTree.insert2pass(66);
generatedTree.insert2pass(91);
generatedTree.insert2pass(16);
generatedTree.insert2pass(85);
------------------------------

└── 54
    ├── 27
    │   ├── 11, 16
    │   └── 31
    └── 63, 69, 81
        ├── 57
        ├── 66, 68
        ├── 71
        └── 85, 91

------------------------------

generatedTree.delete(68)

------------------------------

└── 54
    ├── 27
    │   ├── 11, 16
    │   └── 31
    └── 63, 69, 81
        ├── 57
        ├── 66
        ├── 71
        └── 85, 91


------------------------------

END - TEST 147


START - TEST 148
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(51);
generatedTree.insert2pass(48);
generatedTree.insert2pass(96);
generatedTree.insert2pass(20);
generatedTree.insert2pass(54);
generatedTree.insert2pass(79);
generatedTree.insert2pass(98);
generatedTree.insert2pass(32);
generatedTree.insert2pass(78);
generatedTree.insert2pass(97);
generatedTree.insert2pass(49);
generatedTree.insert2pass(52);
generatedTree.insert2pass(42);
generatedTree.insert2pass(26);
generatedTree.insert2pass(60);
------------------------------

└── 68
    ├── 32, 51
    │   ├── 20, 26
    │   ├── 42, 48, 49
    │   └── 52, 54, 60
    └── 96
        ├── 78, 79
        └── 97, 98

------------------------------

generatedTree.delete(60)
generatedTree.delete(52)

------------------------------

└── 68
    ├── 32, 51
    │   ├── 20, 26
    │   ├── 42, 48, 49
    │   └── 54
    └── 96
        ├── 78, 79
        └── 97, 98


------------------------------

END - TEST 148


START - TEST 149
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(94);
generatedTree.insert2pass(17);
generatedTree.insert2pass(53);
generatedTree.insert2pass(68);
generatedTree.insert2pass(75);
generatedTree.insert2pass(26);
generatedTree.insert2pass(49);
generatedTree.insert2pass(16);
------------------------------

└── 47, 68
    ├── 16, 17, 26
    ├── 49, 53
    └── 75, 94

------------------------------

generatedTree.delete(47)
generatedTree.delete(68)
generatedTree.delete(17)

------------------------------

└── 26, 53
    ├── 16
    ├── 49
    └── 75, 94


------------------------------

END - TEST 149


START - TEST 150
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(13);
generatedTree.insert2pass(47);
generatedTree.insert2pass(20);
generatedTree.insert2pass(58);
generatedTree.insert2pass(51);
generatedTree.insert2pass(48);
generatedTree.insert2pass(21);
------------------------------

└── 47, 58
    ├── 13, 20, 21
    ├── 48, 51
    └── 63

------------------------------

generatedTree.delete(13)

------------------------------

└── 47, 58
    ├── 20, 21
    ├── 48, 51
    └── 63


------------------------------

END - TEST 150


START - TEST 151
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(45);
generatedTree.insert2pass(81);
generatedTree.insert2pass(87);
generatedTree.insert2pass(11);
generatedTree.insert2pass(71);
generatedTree.insert2pass(98);
------------------------------

└── 74
    ├── 11, 45, 71
    └── 81, 87, 98

------------------------------

generatedTree.delete(74)
generatedTree.delete(45)

------------------------------

└── 71
    ├── 11
    └── 81, 87, 98


------------------------------

END - TEST 151


START - TEST 152
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(51);
generatedTree.insert2pass(54);
generatedTree.insert2pass(62);
generatedTree.insert2pass(28);
generatedTree.insert2pass(88);
generatedTree.insert2pass(29);
generatedTree.insert2pass(27);
generatedTree.insert2pass(58);
generatedTree.insert2pass(82);
generatedTree.insert2pass(13);
------------------------------

└── 29, 51, 62
    ├── 13, 27, 28
    ├── 47
    ├── 54, 58
    └── 82, 88

------------------------------

generatedTree.delete(54)

------------------------------

└── 29, 51, 62
    ├── 13, 27, 28
    ├── 47
    ├── 58
    └── 82, 88


------------------------------

END - TEST 152


START - TEST 153
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(11);
generatedTree.insert2pass(37);
generatedTree.insert2pass(65);
generatedTree.insert2pass(43);
generatedTree.insert2pass(69);
generatedTree.insert2pass(50);
generatedTree.insert2pass(89);
------------------------------

└── 19, 43, 65
    ├── 11
    ├── 37
    ├── 50
    └── 69, 89

------------------------------

generatedTree.delete(69)
generatedTree.delete(37)

------------------------------

└── 43, 65
    ├── 11, 19
    ├── 50
    └── 89


------------------------------

END - TEST 153


START - TEST 154
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(71);
generatedTree.insert2pass(47);
generatedTree.insert2pass(22);
generatedTree.insert2pass(92);
generatedTree.insert2pass(25);
generatedTree.insert2pass(32);
generatedTree.insert2pass(66);
generatedTree.insert2pass(16);
generatedTree.insert2pass(37);
generatedTree.insert2pass(61);
generatedTree.insert2pass(83);
generatedTree.insert2pass(90);
generatedTree.insert2pass(62);
generatedTree.insert2pass(44);
generatedTree.insert2pass(98);
------------------------------

└── 47
    ├── 25, 32
    │   ├── 16, 22
    │   ├── 26
    │   └── 37, 44
    └── 71, 90
        ├── 61, 62, 66
        ├── 83
        └── 92, 98

------------------------------

generatedTree.delete(71)

------------------------------

└── 47
    ├── 25, 32
    │   ├── 16, 22
    │   ├── 26
    │   └── 37, 44
    └── 66, 90
        ├── 61, 62
        ├── 83
        └── 92, 98


------------------------------

END - TEST 154


START - TEST 155
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(78);
generatedTree.insert2pass(80);
generatedTree.insert2pass(62);
generatedTree.insert2pass(91);
generatedTree.insert2pass(92);
generatedTree.insert2pass(35);
generatedTree.insert2pass(74);
generatedTree.insert2pass(72);
generatedTree.insert2pass(32);
generatedTree.insert2pass(44);
generatedTree.insert2pass(95);
generatedTree.insert2pass(58);
generatedTree.insert2pass(45);
generatedTree.insert2pass(79);
generatedTree.insert2pass(31);
generatedTree.insert2pass(65);
generatedTree.insert2pass(54);
------------------------------

└── 62, 78
    ├── 35, 45
    │   ├── 31, 32
    │   ├── 44
    │   └── 54, 58
    ├── 74
    │   ├── 65, 72
    │   └── 77
    └── 91
        ├── 79, 80
        └── 92, 95

------------------------------

generatedTree.delete(44)
generatedTree.delete(58)
generatedTree.delete(74)

------------------------------

└── 45, 78
    ├── 32
    │   ├── 31
    │   └── 35
    ├── 62, 72
    │   ├── 54
    │   ├── 65
    │   └── 77
    └── 91
        ├── 79, 80
        └── 92, 95


------------------------------

END - TEST 155


START - TEST 156
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(75);
generatedTree.insert2pass(59);
generatedTree.insert2pass(80);
generatedTree.insert2pass(37);
------------------------------

└── 62
    ├── 37, 59
    └── 75, 80

------------------------------

generatedTree.delete(62)
generatedTree.delete(59)
generatedTree.delete(75)

------------------------------

└── 37, 80


------------------------------

END - TEST 156


START - TEST 157
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(30);
generatedTree.insert2pass(20);
generatedTree.insert2pass(61);
generatedTree.insert2pass(74);
generatedTree.insert2pass(32);
generatedTree.insert2pass(21);
generatedTree.insert2pass(91);
generatedTree.insert2pass(71);
generatedTree.insert2pass(80);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(53);
generatedTree.insert2pass(87);
generatedTree.insert2pass(98);
generatedTree.insert2pass(86);
generatedTree.insert2pass(18);
------------------------------

└── 61
    ├── 30, 44
    │   ├── 18, 20, 21
    │   ├── 32
    │   └── 53, 58, 59
    └── 74, 87
        ├── 71
        ├── 80, 86
        └── 91, 98

------------------------------

generatedTree.delete(71)
generatedTree.delete(80)
generatedTree.delete(53)

------------------------------

└── 61
    ├── 30, 44
    │   ├── 18, 20, 21
    │   ├── 32
    │   └── 58, 59
    └── 87
        ├── 74, 86
        └── 91, 98


------------------------------

END - TEST 157


START - TEST 158
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(17);
generatedTree.insert2pass(15);
generatedTree.insert2pass(26);
generatedTree.insert2pass(37);
generatedTree.insert2pass(30);
generatedTree.insert2pass(38);
generatedTree.insert2pass(33);
------------------------------

└── 17, 37
    ├── 15
    ├── 26, 30, 33
    └── 38, 79

------------------------------

generatedTree.delete(37)

------------------------------

└── 17, 33
    ├── 15
    ├── 26, 30
    └── 38, 79


------------------------------

END - TEST 158


START - TEST 159
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(59);
generatedTree.insert2pass(25);
generatedTree.insert2pass(14);
generatedTree.insert2pass(21);
generatedTree.insert2pass(11);
generatedTree.insert2pass(43);
generatedTree.insert2pass(16);
generatedTree.insert2pass(26);
generatedTree.insert2pass(53);
generatedTree.insert2pass(29);
generatedTree.insert2pass(82);
generatedTree.insert2pass(23);
generatedTree.insert2pass(97);
generatedTree.insert2pass(61);
generatedTree.insert2pass(33);
generatedTree.insert2pass(20);
generatedTree.insert2pass(48);
------------------------------

└── 26
    ├── 14, 21
    │   ├── 11
    │   ├── 16, 20
    │   └── 23, 25
    └── 43, 59, 96
        ├── 29, 33
        ├── 48, 53
        ├── 61, 82
        └── 97

------------------------------

generatedTree.delete(43)
generatedTree.delete(97)

------------------------------

└── 26
    ├── 14, 21
    │   ├── 11
    │   ├── 16, 20
    │   └── 23, 25
    └── 33, 59, 82
        ├── 29
        ├── 48, 53
        ├── 61
        └── 96


------------------------------

END - TEST 159


START - TEST 160
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(81);
generatedTree.insert2pass(74);
generatedTree.insert2pass(34);
generatedTree.insert2pass(73);
generatedTree.insert2pass(46);
generatedTree.insert2pass(47);
generatedTree.insert2pass(57);
generatedTree.insert2pass(97);
generatedTree.insert2pass(85);
generatedTree.insert2pass(43);
generatedTree.insert2pass(17);
generatedTree.insert2pass(96);
generatedTree.insert2pass(66);
generatedTree.insert2pass(89);
generatedTree.insert2pass(12);
generatedTree.insert2pass(16);
generatedTree.insert2pass(36);
generatedTree.insert2pass(75);
------------------------------

└── 73
    ├── 34, 46
    │   ├── 12, 16, 17
    │   ├── 36, 43
    │   └── 47, 57, 66
    └── 81, 85
        ├── 74, 75
        ├── 83
        └── 89, 96, 97

------------------------------

generatedTree.delete(57)

------------------------------

└── 73
    ├── 34, 46
    │   ├── 12, 16, 17
    │   ├── 36, 43
    │   └── 47, 66
    └── 81, 85
        ├── 74, 75
        ├── 83
        └── 89, 96, 97


------------------------------

END - TEST 160


START - TEST 161
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(73);
generatedTree.insert2pass(42);
generatedTree.insert2pass(84);
generatedTree.insert2pass(79);
------------------------------

└── 42
    ├── 37
    └── 73, 79, 84

------------------------------

generatedTree.delete(84)

------------------------------

└── 42
    ├── 37
    └── 73, 79


------------------------------

END - TEST 161


START - TEST 162
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(65);
generatedTree.insert2pass(32);
generatedTree.insert2pass(95);
generatedTree.insert2pass(84);
generatedTree.insert2pass(57);
------------------------------

└── 46, 84
    ├── 32
    ├── 57, 65
    └── 95

------------------------------

generatedTree.delete(84)
generatedTree.delete(95)

------------------------------

└── 46
    ├── 32
    └── 57, 65


------------------------------

END - TEST 162


START - TEST 163
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(43);
generatedTree.insert2pass(93);
generatedTree.insert2pass(32);
generatedTree.insert2pass(87);
generatedTree.insert2pass(52);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
generatedTree.insert2pass(83);
generatedTree.insert2pass(22);
generatedTree.insert2pass(75);
generatedTree.insert2pass(61);
generatedTree.insert2pass(71);
generatedTree.insert2pass(78);
generatedTree.insert2pass(42);
generatedTree.insert2pass(57);
------------------------------

└── 49
    ├── 32, 43
    │   ├── 22
    │   ├── 37, 42
    │   └── 46
    └── 61, 75, 87
        ├── 52, 57
        ├── 71
        ├── 78, 83
        └── 93, 95

------------------------------

generatedTree.delete(83)

------------------------------

└── 49
    ├── 32, 43
    │   ├── 22
    │   ├── 37, 42
    │   └── 46
    └── 61, 75, 87
        ├── 52, 57
        ├── 71
        ├── 78
        └── 93, 95


------------------------------

END - TEST 163


START - TEST 164
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(11);
generatedTree.insert2pass(22);
generatedTree.insert2pass(46);
generatedTree.insert2pass(33);
generatedTree.insert2pass(23);
generatedTree.insert2pass(67);
generatedTree.insert2pass(94);
generatedTree.insert2pass(47);
generatedTree.insert2pass(89);
generatedTree.insert2pass(74);
generatedTree.insert2pass(37);
generatedTree.insert2pass(30);
generatedTree.insert2pass(95);
generatedTree.insert2pass(99);
generatedTree.insert2pass(64);
------------------------------

└── 46
    ├── 22, 33
    │   ├── 11
    │   ├── 23, 30
    │   └── 37
    └── 67, 88, 94
        ├── 47, 64
        ├── 74
        ├── 89
        └── 95, 99

------------------------------

generatedTree.delete(89)

------------------------------

└── 46
    ├── 22, 33
    │   ├── 11
    │   ├── 23, 30
    │   └── 37
    └── 67, 88, 95
        ├── 47, 64
        ├── 74
        ├── 94
        └── 99


------------------------------

END - TEST 164


START - TEST 165
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(77);
generatedTree.insert2pass(47);
generatedTree.insert2pass(34);
generatedTree.insert2pass(46);
generatedTree.insert2pass(82);
generatedTree.insert2pass(22);
generatedTree.insert2pass(83);
generatedTree.insert2pass(91);
generatedTree.insert2pass(24);
generatedTree.insert2pass(55);
generatedTree.insert2pass(38);
generatedTree.insert2pass(80);
generatedTree.insert2pass(37);
generatedTree.insert2pass(72);
generatedTree.insert2pass(61);
generatedTree.insert2pass(33);
------------------------------

└── 50
    ├── 24, 37, 46
    │   ├── 22
    │   ├── 33, 34
    │   ├── 38
    │   └── 47
    └── 77, 82
        ├── 55, 61, 72
        ├── 80
        └── 83, 91

------------------------------

generatedTree.delete(72)
generatedTree.delete(38)

------------------------------

└── 50
    ├── 24, 34, 46
    │   ├── 22
    │   ├── 33
    │   ├── 37
    │   └── 47
    └── 77, 82
        ├── 55, 61
        ├── 80
        └── 83, 91


------------------------------

END - TEST 165


START - TEST 166
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(96);
generatedTree.insert2pass(17);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
generatedTree.insert2pass(85);
generatedTree.insert2pass(60);
generatedTree.insert2pass(83);
generatedTree.insert2pass(84);
generatedTree.insert2pass(66);
generatedTree.insert2pass(53);
generatedTree.insert2pass(13);
------------------------------

└── 63
    ├── 21, 45
    │   ├── 13, 17
    │   ├── 39
    │   └── 53, 58, 60
    └── 85
        ├── 66, 83, 84
        └── 96

------------------------------

generatedTree.delete(53)
generatedTree.delete(63)
generatedTree.delete(96)

------------------------------

└── 45
    ├── 21
    │   ├── 13, 17
    │   └── 39
    └── 60, 84
        ├── 58
        ├── 66, 83
        └── 85


------------------------------

END - TEST 166


START - TEST 167
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(65);
generatedTree.insert2pass(79);
generatedTree.insert2pass(89);
generatedTree.insert2pass(57);
generatedTree.insert2pass(83);
generatedTree.insert2pass(63);
generatedTree.insert2pass(43);
generatedTree.insert2pass(87);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
generatedTree.insert2pass(75);
generatedTree.insert2pass(11);
generatedTree.insert2pass(40);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(15);
------------------------------

└── 65
    ├── 27, 43, 57
    │   ├── 11, 15, 21
    │   ├── 39, 40
    │   ├── 45
    │   └── 58, 63
    └── 83
        ├── 75, 79
        └── 87, 89

------------------------------

generatedTree.delete(45)
generatedTree.delete(15)
generatedTree.delete(40)

------------------------------

└── 65
    ├── 27, 57
    │   ├── 11, 21
    │   ├── 39, 43
    │   └── 58, 63
    └── 83
        ├── 75, 79
        └── 87, 89


------------------------------

END - TEST 167


START - TEST 168
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(86);
generatedTree.insert2pass(59);
generatedTree.insert2pass(29);
generatedTree.insert2pass(55);
generatedTree.insert2pass(77);
------------------------------

└── 59
    ├── 29, 46, 55
    └── 77, 86

------------------------------

generatedTree.delete(29)

------------------------------

└── 59
    ├── 46, 55
    └── 77, 86


------------------------------

END - TEST 168


START - TEST 169
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(90);
generatedTree.insert2pass(38);
generatedTree.insert2pass(65);
generatedTree.insert2pass(67);
generatedTree.insert2pass(83);
------------------------------

└── 65, 90
    ├── 38
    ├── 67, 83
    └── 94

------------------------------

generatedTree.delete(90)
generatedTree.delete(65)

------------------------------

└── 83
    ├── 38, 67
    └── 94


------------------------------

END - TEST 169


START - TEST 170
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(53);
generatedTree.insert2pass(17);
generatedTree.insert2pass(49);
generatedTree.insert2pass(86);
generatedTree.insert2pass(33);
generatedTree.insert2pass(94);
generatedTree.insert2pass(93);
generatedTree.insert2pass(59);
generatedTree.insert2pass(75);
generatedTree.insert2pass(40);
generatedTree.insert2pass(80);
------------------------------

└── 53
    ├── 33
    │   ├── 17
    │   └── 40, 49
    └── 75, 90
        ├── 59
        ├── 80, 86
        └── 93, 94

------------------------------

generatedTree.delete(49)
generatedTree.delete(94)
generatedTree.delete(59)

------------------------------

└── 53
    ├── 33
    │   ├── 17
    │   └── 40
    └── 80, 90
        ├── 75
        ├── 86
        └── 93


------------------------------

END - TEST 170


START - TEST 171
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(67);
generatedTree.insert2pass(33);
generatedTree.insert2pass(69);
generatedTree.insert2pass(64);
generatedTree.insert2pass(75);
generatedTree.insert2pass(30);
generatedTree.insert2pass(49);
------------------------------

└── 33, 67
    ├── 30
    ├── 49, 64
    └── 69, 75, 89

------------------------------

generatedTree.delete(67)
generatedTree.delete(89)
generatedTree.delete(33)

------------------------------

└── 64
    ├── 30, 49
    └── 69, 75


------------------------------

END - TEST 171


START - TEST 172
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(90);
generatedTree.insert2pass(63);
generatedTree.insert2pass(67);
generatedTree.insert2pass(79);
------------------------------

└── 83
    ├── 63, 67, 79
    └── 90

------------------------------

generatedTree.delete(63)
generatedTree.delete(90)
generatedTree.delete(83)

------------------------------

└── 67, 79


------------------------------

END - TEST 172


START - TEST 173
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(80);
generatedTree.insert2pass(58);
generatedTree.insert2pass(96);
generatedTree.insert2pass(62);
generatedTree.insert2pass(14);
generatedTree.insert2pass(12);
generatedTree.insert2pass(84);
generatedTree.insert2pass(75);
generatedTree.insert2pass(79);
generatedTree.insert2pass(48);
generatedTree.insert2pass(45);
------------------------------

└── 14, 58, 80
    ├── 12
    ├── 45, 48
    ├── 62, 75, 79
    └── 84, 94, 96

------------------------------

generatedTree.delete(80)
generatedTree.delete(58)

------------------------------

└── 14, 48, 79
    ├── 12
    ├── 45
    ├── 62, 75
    └── 84, 94, 96


------------------------------

END - TEST 173


START - TEST 174
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(30);
generatedTree.insert2pass(77);
generatedTree.insert2pass(65);
generatedTree.insert2pass(33);
generatedTree.insert2pass(88);
generatedTree.insert2pass(84);
generatedTree.insert2pass(28);
generatedTree.insert2pass(89);
generatedTree.insert2pass(38);
generatedTree.insert2pass(79);
generatedTree.insert2pass(29);
generatedTree.insert2pass(98);
generatedTree.insert2pass(73);
generatedTree.insert2pass(81);
------------------------------

└── 65
    ├── 30
    │   ├── 21, 28, 29
    │   └── 33, 38
    └── 77, 84
        ├── 73
        ├── 79, 81
        └── 88, 89, 98

------------------------------

generatedTree.delete(38)
generatedTree.delete(29)
generatedTree.delete(81)

------------------------------

└── 65
    ├── 30
    │   ├── 21, 28
    │   └── 33
    └── 77, 84
        ├── 73
        ├── 79
        └── 88, 89, 98


------------------------------

END - TEST 174


START - TEST 175
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(40);
generatedTree.insert2pass(68);
generatedTree.insert2pass(59);
generatedTree.insert2pass(18);
generatedTree.insert2pass(85);
generatedTree.insert2pass(72);
generatedTree.insert2pass(45);
generatedTree.insert2pass(17);
generatedTree.insert2pass(78);
generatedTree.insert2pass(33);
generatedTree.insert2pass(58);
generatedTree.insert2pass(73);
------------------------------

└── 40, 68, 85
    ├── 17, 18, 33
    ├── 45, 58, 59
    ├── 72, 73, 78
    └── 90

------------------------------

generatedTree.delete(33)
generatedTree.delete(58)

------------------------------

└── 40, 68, 85
    ├── 17, 18
    ├── 45, 59
    ├── 72, 73, 78
    └── 90


------------------------------

END - TEST 175


START - TEST 176
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(64);
generatedTree.insert2pass(26);
generatedTree.insert2pass(81);
generatedTree.insert2pass(59);
generatedTree.insert2pass(57);
generatedTree.insert2pass(74);
generatedTree.insert2pass(34);
generatedTree.insert2pass(31);
generatedTree.insert2pass(85);
generatedTree.insert2pass(78);
generatedTree.insert2pass(60);
generatedTree.insert2pass(97);
generatedTree.insert2pass(24);
generatedTree.insert2pass(95);
generatedTree.insert2pass(77);
generatedTree.insert2pass(39);
generatedTree.insert2pass(99);
------------------------------

└── 64
    ├── 31, 57
    │   ├── 24, 26
    │   ├── 34, 39
    │   └── 59, 60
    └── 81, 85
        ├── 74, 77, 78
        ├── 83
        └── 95, 97, 99

------------------------------

generatedTree.delete(39)
generatedTree.delete(97)

------------------------------

└── 64
    ├── 31, 57
    │   ├── 24, 26
    │   ├── 34
    │   └── 59, 60
    └── 81, 85
        ├── 74, 77, 78
        ├── 83
        └── 95, 99


------------------------------

END - TEST 176


START - TEST 177
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(86);
generatedTree.insert2pass(52);
generatedTree.insert2pass(29);
generatedTree.insert2pass(67);
generatedTree.insert2pass(28);
generatedTree.insert2pass(51);
generatedTree.insert2pass(99);
generatedTree.insert2pass(47);
generatedTree.insert2pass(74);
generatedTree.insert2pass(37);
generatedTree.insert2pass(72);
generatedTree.insert2pass(39);
generatedTree.insert2pass(63);
generatedTree.insert2pass(68);
generatedTree.insert2pass(69);
------------------------------

└── 59
    ├── 29, 51
    │   ├── 28
    │   ├── 37, 39, 47
    │   └── 52
    └── 67, 72, 86
        ├── 63
        ├── 68, 69
        ├── 74
        └── 99

------------------------------

generatedTree.delete(39)

------------------------------

└── 59
    ├── 29, 51
    │   ├── 28
    │   ├── 37, 47
    │   └── 52
    └── 67, 72, 86
        ├── 63
        ├── 68, 69
        ├── 74
        └── 99


------------------------------

END - TEST 177


START - TEST 178
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(11);
generatedTree.insert2pass(13);
generatedTree.insert2pass(94);
generatedTree.insert2pass(89);
generatedTree.insert2pass(80);
generatedTree.insert2pass(78);
------------------------------

└── 13, 94
    ├── 11
    ├── 78, 80, 89
    └── 98

------------------------------

generatedTree.delete(94)
generatedTree.delete(13)
generatedTree.delete(11)

------------------------------

└── 89
    ├── 78, 80
    └── 98


------------------------------

END - TEST 178


START - TEST 179
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(41);
generatedTree.insert2pass(95);
generatedTree.insert2pass(51);
generatedTree.insert2pass(49);
generatedTree.insert2pass(70);
generatedTree.insert2pass(58);
generatedTree.insert2pass(11);
------------------------------

└── 51
    ├── 11, 41, 49
    └── 58, 70, 95

------------------------------

generatedTree.delete(58)

------------------------------

└── 51
    ├── 11, 41, 49
    └── 70, 95


------------------------------

END - TEST 179


START - TEST 180
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(52);
generatedTree.insert2pass(44);
generatedTree.insert2pass(85);
generatedTree.insert2pass(61);
------------------------------

└── 44
    ├── 33
    └── 52, 61, 85

------------------------------

generatedTree.delete(52)

------------------------------

└── 44
    ├── 33
    └── 61, 85


------------------------------

END - TEST 180


START - TEST 181
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(91);
generatedTree.insert2pass(95);
generatedTree.insert2pass(75);
generatedTree.insert2pass(84);
generatedTree.insert2pass(83);
generatedTree.insert2pass(61);
generatedTree.insert2pass(45);
generatedTree.insert2pass(46);
generatedTree.insert2pass(55);
generatedTree.insert2pass(19);
------------------------------

└── 75
    ├── 46, 61
    │   ├── 19, 45
    │   ├── 55
    │   └── 69
    └── 91
        ├── 83, 84
        └── 95

------------------------------

generatedTree.delete(84)
generatedTree.delete(46)

------------------------------

└── 75
    ├── 45, 61
    │   ├── 19
    │   ├── 55
    │   └── 69
    └── 91
        ├── 83
        └── 95


------------------------------

END - TEST 181


START - TEST 182
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(16);
generatedTree.insert2pass(99);
generatedTree.insert2pass(12);
generatedTree.insert2pass(48);
generatedTree.insert2pass(23);
generatedTree.insert2pass(25);
generatedTree.insert2pass(96);
generatedTree.insert2pass(18);
generatedTree.insert2pass(77);
generatedTree.insert2pass(53);
------------------------------

└── 16, 25, 82
    ├── 12
    ├── 18, 23
    ├── 48, 53, 77
    └── 96, 99

------------------------------

generatedTree.delete(48)
generatedTree.delete(12)

------------------------------

└── 18, 25, 82
    ├── 16
    ├── 23
    ├── 53, 77
    └── 96, 99


------------------------------

END - TEST 182


START - TEST 183
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(36);
generatedTree.insert2pass(70);
generatedTree.insert2pass(17);
generatedTree.insert2pass(37);
generatedTree.insert2pass(22);
generatedTree.insert2pass(61);
generatedTree.insert2pass(93);
generatedTree.insert2pass(30);
generatedTree.insert2pass(27);
generatedTree.insert2pass(90);
generatedTree.insert2pass(92);
generatedTree.insert2pass(62);
generatedTree.insert2pass(91);
generatedTree.insert2pass(71);
------------------------------

└── 36
    ├── 22
    │   ├── 17
    │   └── 27, 30
    └── 66, 90
        ├── 37, 61, 62
        ├── 70, 71
        └── 91, 92, 93

------------------------------

generatedTree.delete(70)
generatedTree.delete(71)

------------------------------

└── 36
    ├── 22
    │   ├── 17
    │   └── 27, 30
    └── 62, 90
        ├── 37, 61
        ├── 66
        └── 91, 92, 93


------------------------------

END - TEST 183


START - TEST 184
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(77);
generatedTree.insert2pass(36);
generatedTree.insert2pass(56);
generatedTree.insert2pass(49);
generatedTree.insert2pass(37);
generatedTree.insert2pass(74);
generatedTree.insert2pass(55);
generatedTree.insert2pass(78);
generatedTree.insert2pass(89);
------------------------------

└── 44, 56, 77
    ├── 36, 37
    ├── 49, 55
    ├── 74
    └── 78, 89

------------------------------

generatedTree.delete(89)

------------------------------

└── 44, 56, 77
    ├── 36, 37
    ├── 49, 55
    ├── 74
    └── 78


------------------------------

END - TEST 184


START - TEST 185
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(38);
generatedTree.insert2pass(55);
generatedTree.insert2pass(84);
generatedTree.insert2pass(31);
generatedTree.insert2pass(39);
generatedTree.insert2pass(86);
generatedTree.insert2pass(11);
generatedTree.insert2pass(94);
generatedTree.insert2pass(75);
generatedTree.insert2pass(54);
------------------------------

└── 38, 49, 84
    ├── 11, 31
    ├── 39
    ├── 54, 55, 75
    └── 86, 94

------------------------------

generatedTree.delete(31)
generatedTree.delete(84)

------------------------------

└── 38, 49, 75
    ├── 11
    ├── 39
    ├── 54, 55
    └── 86, 94


------------------------------

END - TEST 185


START - TEST 186
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(51);
generatedTree.insert2pass(82);
generatedTree.insert2pass(79);
generatedTree.insert2pass(52);
generatedTree.insert2pass(61);
generatedTree.insert2pass(98);
generatedTree.insert2pass(94);
generatedTree.insert2pass(62);
generatedTree.insert2pass(71);
generatedTree.insert2pass(43);
generatedTree.insert2pass(40);
generatedTree.insert2pass(23);
generatedTree.insert2pass(35);
generatedTree.insert2pass(63);
generatedTree.insert2pass(74);
generatedTree.insert2pass(47);
generatedTree.insert2pass(48);
------------------------------

└── 53
    ├── 40, 51
    │   ├── 23, 35
    │   ├── 43, 47, 48
    │   └── 52
    └── 62, 79
        ├── 61
        ├── 63, 71, 74
        └── 82, 94, 98

------------------------------

generatedTree.delete(48)

------------------------------

└── 53
    ├── 40, 51
    │   ├── 23, 35
    │   ├── 43, 47
    │   └── 52
    └── 62, 79
        ├── 61
        ├── 63, 71, 74
        └── 82, 94, 98


------------------------------

END - TEST 186


START - TEST 187
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(44);
generatedTree.insert2pass(76);
generatedTree.insert2pass(41);
generatedTree.insert2pass(91);
generatedTree.insert2pass(39);
generatedTree.insert2pass(87);
generatedTree.insert2pass(71);
generatedTree.insert2pass(22);
generatedTree.insert2pass(72);
generatedTree.insert2pass(51);
generatedTree.insert2pass(11);
generatedTree.insert2pass(46);
generatedTree.insert2pass(45);
generatedTree.insert2pass(73);
generatedTree.insert2pass(70);
generatedTree.insert2pass(30);
generatedTree.insert2pass(37);
generatedTree.insert2pass(14);
generatedTree.insert2pass(47);
------------------------------

└── 44
    ├── 22, 39
    │   ├── 11, 14
    │   ├── 24, 30, 37
    │   └── 41
    └── 51, 72, 87
        ├── 45, 46, 47
        ├── 70, 71
        ├── 73, 76
        └── 91

------------------------------

generatedTree.delete(39)
generatedTree.delete(71)

------------------------------

└── 44
    ├── 22, 37
    │   ├── 11, 14
    │   ├── 24, 30
    │   └── 41
    └── 51, 72, 87
        ├── 45, 46, 47
        ├── 70
        ├── 73, 76
        └── 91


------------------------------

END - TEST 187


START - TEST 188
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(16);
generatedTree.insert2pass(59);
generatedTree.insert2pass(93);
generatedTree.insert2pass(42);
generatedTree.insert2pass(95);
generatedTree.insert2pass(77);
generatedTree.insert2pass(74);
generatedTree.insert2pass(80);
generatedTree.insert2pass(47);
------------------------------

└── 32, 59, 93
    ├── 16
    ├── 42, 47
    ├── 74, 77, 80
    └── 95

------------------------------

generatedTree.delete(80)

------------------------------

└── 32, 59, 93
    ├── 16
    ├── 42, 47
    ├── 74, 77
    └── 95


------------------------------

END - TEST 188


START - TEST 189
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(44);
generatedTree.insert2pass(52);
generatedTree.insert2pass(89);
generatedTree.insert2pass(83);
generatedTree.insert2pass(26);
generatedTree.insert2pass(38);
generatedTree.insert2pass(98);
generatedTree.insert2pass(19);
generatedTree.insert2pass(50);
generatedTree.insert2pass(43);
generatedTree.insert2pass(22);
generatedTree.insert2pass(13);
generatedTree.insert2pass(31);
generatedTree.insert2pass(73);
------------------------------

└── 52
    ├── 22, 38
    │   ├── 13, 19
    │   ├── 26, 31
    │   └── 43, 44, 50
    └── 83
        ├── 54, 73
        └── 89, 98

------------------------------

generatedTree.delete(50)
generatedTree.delete(44)

------------------------------

└── 52
    ├── 22, 38
    │   ├── 13, 19
    │   ├── 26, 31
    │   └── 43
    └── 83
        ├── 54, 73
        └── 89, 98


------------------------------

END - TEST 189


START - TEST 190
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(66);
generatedTree.insert2pass(46);
generatedTree.insert2pass(35);
generatedTree.insert2pass(80);
generatedTree.insert2pass(68);
generatedTree.insert2pass(82);
generatedTree.insert2pass(94);
generatedTree.insert2pass(24);
generatedTree.insert2pass(75);
generatedTree.insert2pass(14);
generatedTree.insert2pass(71);
generatedTree.insert2pass(76);
generatedTree.insert2pass(39);
generatedTree.insert2pass(61);
generatedTree.insert2pass(25);
------------------------------

└── 68
    ├── 30, 46
    │   ├── 14, 24, 25
    │   ├── 35, 39
    │   └── 61, 66
    └── 75, 82
        ├── 71
        ├── 76, 80
        └── 94

------------------------------

generatedTree.delete(68)
generatedTree.delete(35)
generatedTree.delete(25)

------------------------------

└── 66
    ├── 30, 46
    │   ├── 14, 24
    │   ├── 39
    │   └── 61
    └── 75, 82
        ├── 71
        ├── 76, 80
        └── 94


------------------------------

END - TEST 190


START - TEST 191
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(70);
generatedTree.insert2pass(35);
generatedTree.insert2pass(11);
generatedTree.insert2pass(23);
generatedTree.insert2pass(18);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(47);
generatedTree.insert2pass(12);
generatedTree.insert2pass(32);
------------------------------

└── 23, 43, 70
    ├── 11, 12, 18
    ├── 32, 35
    ├── 47, 68
    └── 71

------------------------------

generatedTree.delete(71)
generatedTree.delete(12)

------------------------------

└── 23, 43, 68
    ├── 11, 18
    ├── 32, 35
    ├── 47
    └── 70


------------------------------

END - TEST 191


START - TEST 192
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(48);
generatedTree.insert2pass(41);
generatedTree.insert2pass(53);
generatedTree.insert2pass(82);
generatedTree.insert2pass(54);
generatedTree.insert2pass(83);
generatedTree.insert2pass(44);
generatedTree.insert2pass(77);
generatedTree.insert2pass(97);
generatedTree.insert2pass(21);
generatedTree.insert2pass(68);
generatedTree.insert2pass(30);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(61);
generatedTree.insert2pass(38);
generatedTree.insert2pass(16);
generatedTree.insert2pass(59);
------------------------------

└── 48, 69
    ├── 30, 41
    │   ├── 16, 21
    │   ├── 37, 38
    │   └── 44, 46
    ├── 54
    │   ├── 53
    │   └── 59, 61, 68
    └── 82
        ├── 77
        └── 83, 97

------------------------------

generatedTree.delete(61)
generatedTree.delete(54)

------------------------------

└── 41, 69
    ├── 30
    │   ├── 16, 21
    │   └── 37, 38
    ├── 48, 59
    │   ├── 44, 46
    │   ├── 53
    │   └── 68
    └── 82
        ├── 77
        └── 83, 97


------------------------------

END - TEST 192


START - TEST 193
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(29);
generatedTree.insert2pass(89);
generatedTree.insert2pass(97);
generatedTree.insert2pass(21);
generatedTree.insert2pass(36);
generatedTree.insert2pass(58);
generatedTree.insert2pass(22);
generatedTree.insert2pass(44);
generatedTree.insert2pass(62);
generatedTree.insert2pass(73);
generatedTree.insert2pass(20);
generatedTree.insert2pass(59);
generatedTree.insert2pass(23);
------------------------------

└── 44
    ├── 22, 34
    │   ├── 20, 21
    │   ├── 23, 29
    │   └── 36
    └── 62, 89
        ├── 58, 59
        ├── 73
        └── 97

------------------------------

generatedTree.delete(36)
generatedTree.delete(20)

------------------------------

└── 44
    ├── 22, 29
    │   ├── 21
    │   ├── 23
    │   └── 34
    └── 62, 89
        ├── 58, 59
        ├── 73
        └── 97


------------------------------

END - TEST 193


START - TEST 194
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(61);
generatedTree.insert2pass(48);
generatedTree.insert2pass(90);
generatedTree.insert2pass(31);
generatedTree.insert2pass(19);
generatedTree.insert2pass(77);
generatedTree.insert2pass(99);
generatedTree.insert2pass(71);
generatedTree.insert2pass(72);
generatedTree.insert2pass(12);
generatedTree.insert2pass(21);
generatedTree.insert2pass(66);
------------------------------

└── 48
    ├── 22
    │   ├── 12, 19, 21
    │   └── 31
    └── 71, 77
        ├── 61, 66
        ├── 72
        └── 90, 99

------------------------------

generatedTree.delete(31)

------------------------------

└── 71
    ├── 21, 48
    │   ├── 12, 19
    │   ├── 22
    │   └── 61, 66
    └── 77
        ├── 72
        └── 90, 99


------------------------------

END - TEST 194


START - TEST 195
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
generatedTree.insert2pass(44);
generatedTree.insert2pass(50);
generatedTree.insert2pass(60);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(25);
generatedTree.insert2pass(38);
generatedTree.insert2pass(63);
generatedTree.insert2pass(94);
generatedTree.insert2pass(12);
generatedTree.insert2pass(45);
generatedTree.insert2pass(95);
generatedTree.insert2pass(46);
generatedTree.insert2pass(66);
generatedTree.insert2pass(62);
generatedTree.insert2pass(54);
generatedTree.insert2pass(26);
------------------------------

└── 44, 63
    ├── 30
    │   ├── 12, 25, 26
    │   └── 38, 43
    ├── 46, 60
    │   ├── 45
    │   ├── 50, 54
    │   └── 61, 62
    └── 94
        ├── 66, 68
        └── 95

------------------------------

generatedTree.delete(61)
generatedTree.delete(25)
generatedTree.delete(66)

------------------------------

└── 46
    ├── 30, 44
    │   ├── 12, 26
    │   ├── 38, 43
    │   └── 45
    └── 60, 63, 94
        ├── 50, 54
        ├── 62
        ├── 68
        └── 95


------------------------------

END - TEST 195


START - TEST 196
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
generatedTree.insert2pass(94);
generatedTree.insert2pass(61);
generatedTree.insert2pass(69);
generatedTree.insert2pass(77);
generatedTree.insert2pass(66);
generatedTree.insert2pass(29);
generatedTree.insert2pass(50);
generatedTree.insert2pass(96);
generatedTree.insert2pass(98);
generatedTree.insert2pass(13);
generatedTree.insert2pass(40);
generatedTree.insert2pass(79);
generatedTree.insert2pass(82);
generatedTree.insert2pass(93);
generatedTree.insert2pass(99);
generatedTree.insert2pass(32);
generatedTree.insert2pass(34);
generatedTree.insert2pass(41);
------------------------------

└── 61, 79
    ├── 29, 34, 49
    │   ├── 13
    │   ├── 32
    │   ├── 40, 41
    │   └── 50
    ├── 69
    │   ├── 66
    │   └── 77
    └── 94, 96
        ├── 82, 93
        ├── 95
        └── 98, 99

------------------------------

generatedTree.delete(82)

------------------------------

└── 61, 79
    ├── 29, 34, 49
    │   ├── 13
    │   ├── 32
    │   ├── 40, 41
    │   └── 50
    ├── 69
    │   ├── 66
    │   └── 77
    └── 94, 96
        ├── 93
        ├── 95
        └── 98, 99


------------------------------

END - TEST 196


START - TEST 197
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(66);
generatedTree.insert2pass(46);
generatedTree.insert2pass(72);
generatedTree.insert2pass(40);
generatedTree.insert2pass(77);
------------------------------

└── 46
    ├── 11, 40
    └── 66, 72, 77

------------------------------

generatedTree.delete(40)
generatedTree.delete(46)
generatedTree.delete(11)

------------------------------

└── 72
    ├── 66
    └── 77


------------------------------

END - TEST 197


START - TEST 198
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(95);
generatedTree.insert2pass(29);
generatedTree.insert2pass(76);
generatedTree.insert2pass(36);
generatedTree.insert2pass(42);
generatedTree.insert2pass(91);
generatedTree.insert2pass(23);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
generatedTree.insert2pass(33);
generatedTree.insert2pass(77);
------------------------------

└── 36
    ├── 27
    │   ├── 23
    │   └── 29, 32, 33
    └── 60, 83
        ├── 42
        ├── 76, 77
        └── 91, 95

------------------------------

generatedTree.delete(29)
generatedTree.delete(91)
generatedTree.delete(83)

------------------------------

└── 36
    ├── 27
    │   ├── 23
    │   └── 32, 33
    └── 60, 77
        ├── 42
        ├── 76
        └── 95


------------------------------

END - TEST 198


START - TEST 199
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(75);
generatedTree.insert2pass(55);
generatedTree.insert2pass(31);
generatedTree.insert2pass(95);
generatedTree.insert2pass(50);
generatedTree.insert2pass(86);
generatedTree.insert2pass(46);
generatedTree.insert2pass(49);
generatedTree.insert2pass(59);
generatedTree.insert2pass(87);
generatedTree.insert2pass(33);
generatedTree.insert2pass(81);
generatedTree.insert2pass(35);
------------------------------

└── 38, 55, 86
    ├── 31, 33, 35
    ├── 46, 49, 50
    ├── 59, 75, 81
    └── 87, 95

------------------------------

generatedTree.delete(81)
generatedTree.delete(87)
generatedTree.delete(59)

------------------------------

└── 38, 55, 86
    ├── 31, 33, 35
    ├── 46, 49, 50
    ├── 75
    └── 95


------------------------------

END - TEST 199


START - TEST 0
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(82);
generatedTree.insert2pass(80);
generatedTree.insert2pass(49);
generatedTree.insert2pass(90);
generatedTree.insert2pass(66);
generatedTree.insert2pass(60);
generatedTree.insert2pass(86);
generatedTree.insert2pass(37);
generatedTree.insert2pass(34);
------------------------------

└── 49, 61, 80
    ├── 34, 37
    ├── 60
    ├── 66
    └── 82, 86, 90

------------------------------

generatedTree.delete(90)
generatedTree.delete(80)
generatedTree.delete(82)

------------------------------

└── 49, 61
    ├── 34, 37
    ├── 60
    └── 66, 86


------------------------------

END - TEST 0


START - TEST 1
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(67);
generatedTree.insert2pass(98);
generatedTree.insert2pass(22);
generatedTree.insert2pass(47);
generatedTree.insert2pass(39);
generatedTree.insert2pass(96);
generatedTree.insert2pass(33);
generatedTree.insert2pass(70);
generatedTree.insert2pass(38);
generatedTree.insert2pass(66);
generatedTree.insert2pass(85);
generatedTree.insert2pass(11);
generatedTree.insert2pass(43);
generatedTree.insert2pass(51);
generatedTree.insert2pass(49);
generatedTree.insert2pass(75);
generatedTree.insert2pass(30);
generatedTree.insert2pass(46);
------------------------------

└── 39
    ├── 28
    │   ├── 11, 22
    │   └── 30, 33, 38
    └── 47, 67, 96
        ├── 43, 46
        ├── 49, 51, 66
        ├── 70, 75, 85
        └── 98

------------------------------

generatedTree.delete(46)
generatedTree.delete(33)
generatedTree.delete(49)

------------------------------

└── 47
    ├── 28, 39
    │   ├── 11, 22
    │   ├── 30, 38
    │   └── 43
    └── 67, 96
        ├── 51, 66
        ├── 70, 75, 85
        └── 98


------------------------------

END - TEST 1


START - TEST 2
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(35);
generatedTree.insert2pass(13);
generatedTree.insert2pass(89);
generatedTree.insert2pass(20);
generatedTree.insert2pass(64);
generatedTree.insert2pass(73);
generatedTree.insert2pass(98);
generatedTree.insert2pass(21);
generatedTree.insert2pass(40);
generatedTree.insert2pass(51);
generatedTree.insert2pass(18);
generatedTree.insert2pass(34);
------------------------------

└── 20, 35, 64
    ├── 13, 18
    ├── 21, 34
    ├── 40, 51, 58
    └── 73, 89, 98

------------------------------

generatedTree.delete(13)

------------------------------

└── 20, 35, 64
    ├── 18
    ├── 21, 34
    ├── 40, 51, 58
    └── 73, 89, 98


------------------------------

END - TEST 2


START - TEST 3
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(24);
generatedTree.insert2pass(51);
generatedTree.insert2pass(60);
generatedTree.insert2pass(69);
generatedTree.insert2pass(45);
generatedTree.insert2pass(38);
generatedTree.insert2pass(89);
------------------------------

└── 51, 60
    ├── 24, 38, 45
    ├── 52
    └── 69, 89

------------------------------

generatedTree.delete(45)
generatedTree.delete(51)
generatedTree.delete(52)

------------------------------

└── 38, 69
    ├── 24
    ├── 60
    └── 89


------------------------------

END - TEST 3


START - TEST 4
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(93);
generatedTree.insert2pass(55);
generatedTree.insert2pass(28);
generatedTree.insert2pass(92);
generatedTree.insert2pass(85);
generatedTree.insert2pass(94);
generatedTree.insert2pass(19);
generatedTree.insert2pass(23);
generatedTree.insert2pass(59);
generatedTree.insert2pass(80);
generatedTree.insert2pass(83);
generatedTree.insert2pass(62);
generatedTree.insert2pass(36);
generatedTree.insert2pass(38);
generatedTree.insert2pass(90);
generatedTree.insert2pass(76);
generatedTree.insert2pass(12);
------------------------------

└── 55
    ├── 28
    │   ├── 12, 19, 23
    │   └── 36, 38, 43
    └── 80, 92
        ├── 59, 62, 76
        ├── 83, 85, 90
        └── 93, 94

------------------------------

generatedTree.delete(92)

------------------------------

└── 55
    ├── 28
    │   ├── 12, 19, 23
    │   └── 36, 38, 43
    └── 80, 90
        ├── 59, 62, 76
        ├── 83, 85
        └── 93, 94


------------------------------

END - TEST 4


START - TEST 5
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(76);
generatedTree.insert2pass(91);
generatedTree.insert2pass(87);
generatedTree.insert2pass(99);
generatedTree.insert2pass(47);
generatedTree.insert2pass(14);
generatedTree.insert2pass(44);
------------------------------

└── 76, 91
    ├── 14, 44, 47
    ├── 87
    └── 95, 99

------------------------------

generatedTree.delete(76)
generatedTree.delete(99)
generatedTree.delete(14)

------------------------------

└── 47, 91
    ├── 44
    ├── 87
    └── 95


------------------------------

END - TEST 5


START - TEST 6
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(70);
generatedTree.insert2pass(79);
generatedTree.insert2pass(86);
generatedTree.insert2pass(77);
generatedTree.insert2pass(91);
generatedTree.insert2pass(78);
generatedTree.insert2pass(68);
generatedTree.insert2pass(84);
generatedTree.insert2pass(46);
generatedTree.insert2pass(72);
generatedTree.insert2pass(96);
generatedTree.insert2pass(42);
generatedTree.insert2pass(20);
generatedTree.insert2pass(23);
generatedTree.insert2pass(61);
generatedTree.insert2pass(89);
------------------------------

└── 74
    ├── 42, 68
    │   ├── 20, 23
    │   ├── 46, 61
    │   └── 70, 72
    └── 79, 86
        ├── 77, 78
        ├── 84
        └── 89, 91, 96

------------------------------

generatedTree.delete(89)

------------------------------

└── 74
    ├── 42, 68
    │   ├── 20, 23
    │   ├── 46, 61
    │   └── 70, 72
    └── 79, 86
        ├── 77, 78
        ├── 84
        └── 91, 96


------------------------------

END - TEST 6


START - TEST 7
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(48);
generatedTree.insert2pass(94);
generatedTree.insert2pass(96);
generatedTree.insert2pass(36);
generatedTree.insert2pass(81);
generatedTree.insert2pass(82);
generatedTree.insert2pass(75);
generatedTree.insert2pass(61);
generatedTree.insert2pass(64);
generatedTree.insert2pass(62);
generatedTree.insert2pass(79);
generatedTree.insert2pass(40);
------------------------------

└── 81
    ├── 48, 64
    │   ├── 34, 36, 40
    │   ├── 61, 62
    │   └── 75, 79
    └── 94
        ├── 82
        └── 96

------------------------------

generatedTree.delete(81)

------------------------------

└── 79
    ├── 48, 64
    │   ├── 34, 36, 40
    │   ├── 61, 62
    │   └── 75
    └── 94
        ├── 82
        └── 96


------------------------------

END - TEST 7


START - TEST 8
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(24);
generatedTree.insert2pass(94);
generatedTree.insert2pass(45);
generatedTree.insert2pass(20);
generatedTree.insert2pass(88);
generatedTree.insert2pass(49);
generatedTree.insert2pass(98);
generatedTree.insert2pass(64);
generatedTree.insert2pass(84);
generatedTree.insert2pass(16);
generatedTree.insert2pass(33);
generatedTree.insert2pass(61);
generatedTree.insert2pass(47);
generatedTree.insert2pass(32);
generatedTree.insert2pass(78);
generatedTree.insert2pass(67);
generatedTree.insert2pass(55);
------------------------------

└── 49
    ├── 24, 45
    │   ├── 16, 20
    │   ├── 32, 33
    │   └── 47
    └── 64, 84, 90
        ├── 55, 61
        ├── 67, 78
        ├── 88
        └── 94, 98

------------------------------

generatedTree.delete(88)

------------------------------

└── 49
    ├── 24, 45
    │   ├── 16, 20
    │   ├── 32, 33
    │   └── 47
    └── 64, 78, 90
        ├── 55, 61
        ├── 67
        ├── 84
        └── 94, 98


------------------------------

END - TEST 8


START - TEST 9
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(57);
generatedTree.insert2pass(68);
generatedTree.insert2pass(48);
generatedTree.insert2pass(58);
generatedTree.insert2pass(72);
generatedTree.insert2pass(61);
generatedTree.insert2pass(34);
generatedTree.insert2pass(37);
generatedTree.insert2pass(36);
generatedTree.insert2pass(75);
------------------------------

└── 38, 57, 68
    ├── 34, 36, 37
    ├── 48
    ├── 58, 61
    └── 72, 75

------------------------------

generatedTree.delete(57)
generatedTree.delete(48)
generatedTree.delete(68)

------------------------------

└── 37, 58, 72
    ├── 34, 36
    ├── 38
    ├── 61
    └── 75


------------------------------

END - TEST 9


START - TEST 10
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(74);
generatedTree.insert2pass(12);
generatedTree.insert2pass(94);
generatedTree.insert2pass(38);
generatedTree.insert2pass(52);
generatedTree.insert2pass(71);
------------------------------

└── 57
    ├── 12, 38, 52
    └── 71, 74, 94

------------------------------

generatedTree.delete(94)
generatedTree.delete(52)

------------------------------

└── 57
    ├── 12, 38
    └── 71, 74


------------------------------

END - TEST 10


START - TEST 11
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(56);
generatedTree.insert2pass(86);
generatedTree.insert2pass(97);
generatedTree.insert2pass(72);
generatedTree.insert2pass(81);
generatedTree.insert2pass(24);
generatedTree.insert2pass(94);
generatedTree.insert2pass(89);
generatedTree.insert2pass(33);
generatedTree.insert2pass(20);
------------------------------

└── 24, 56, 86
    ├── 20, 21
    ├── 33
    ├── 72, 81
    └── 89, 94, 97

------------------------------

generatedTree.delete(20)
generatedTree.delete(94)

------------------------------

└── 24, 56, 86
    ├── 21
    ├── 33
    ├── 72, 81
    └── 89, 97


------------------------------

END - TEST 11


START - TEST 12
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(70);
generatedTree.insert2pass(46);
generatedTree.insert2pass(44);
generatedTree.insert2pass(72);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(66);
generatedTree.insert2pass(52);
generatedTree.insert2pass(45);
------------------------------

└── 44, 49, 70
    ├── 36
    ├── 45, 46
    ├── 52, 61, 66
    └── 72

------------------------------

generatedTree.delete(61)

------------------------------

└── 44, 49, 70
    ├── 36
    ├── 45, 46
    ├── 52, 66
    └── 72


------------------------------

END - TEST 12


START - TEST 13
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(80);
generatedTree.insert2pass(98);
generatedTree.insert2pass(24);
generatedTree.insert2pass(61);
generatedTree.insert2pass(23);
generatedTree.insert2pass(39);
generatedTree.insert2pass(45);
generatedTree.insert2pass(34);
generatedTree.insert2pass(59);
generatedTree.insert2pass(49);
generatedTree.insert2pass(22);
generatedTree.insert2pass(99);
generatedTree.insert2pass(74);
generatedTree.insert2pass(66);
generatedTree.insert2pass(85);
------------------------------

└── 45
    ├── 24
    │   ├── 22, 23
    │   └── 34, 39
    └── 59, 80
        ├── 49
        ├── 61, 66, 74
        └── 85, 98, 99

------------------------------

generatedTree.delete(45)
generatedTree.delete(98)
generatedTree.delete(61)

------------------------------

└── 49
    ├── 24
    │   ├── 22, 23
    │   └── 34, 39
    └── 66, 80
        ├── 59
        ├── 74
        └── 85, 99


------------------------------

END - TEST 13


START - TEST 14
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(50);
generatedTree.insert2pass(48);
generatedTree.insert2pass(60);
generatedTree.insert2pass(51);
generatedTree.insert2pass(62);
generatedTree.insert2pass(64);
generatedTree.insert2pass(31);
generatedTree.insert2pass(94);
generatedTree.insert2pass(52);
generatedTree.insert2pass(98);
generatedTree.insert2pass(16);
------------------------------

└── 50, 60, 64
    ├── 16, 31, 48
    ├── 51, 52
    ├── 62
    └── 77, 94, 98

------------------------------

generatedTree.delete(98)
generatedTree.delete(94)
generatedTree.delete(62)

------------------------------

└── 50, 52, 64
    ├── 16, 31, 48
    ├── 51
    ├── 60
    └── 77


------------------------------

END - TEST 14


START - TEST 15
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(85);
generatedTree.insert2pass(68);
generatedTree.insert2pass(98);
generatedTree.insert2pass(47);
generatedTree.insert2pass(41);
------------------------------

└── 68
    ├── 41, 47, 58
    └── 85, 98

------------------------------

generatedTree.delete(58)
generatedTree.delete(68)

------------------------------

└── 47
    ├── 41
    └── 85, 98


------------------------------

END - TEST 15


START - TEST 16
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(23);
generatedTree.insert2pass(35);
generatedTree.insert2pass(58);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
------------------------------

└── 35
    ├── 15, 23
    └── 58, 63

------------------------------

generatedTree.delete(15)

------------------------------

└── 35
    ├── 23
    └── 58, 63


------------------------------

END - TEST 16


START - TEST 17
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(69);
generatedTree.insert2pass(34);
generatedTree.insert2pass(55);
generatedTree.insert2pass(51);
generatedTree.insert2pass(39);
generatedTree.insert2pass(68);
generatedTree.insert2pass(87);
generatedTree.insert2pass(36);
generatedTree.insert2pass(24);
generatedTree.insert2pass(98);
generatedTree.insert2pass(22);
generatedTree.insert2pass(77);
generatedTree.insert2pass(80);
generatedTree.insert2pass(71);
generatedTree.insert2pass(30);
generatedTree.insert2pass(14);
generatedTree.insert2pass(16);
generatedTree.insert2pass(38);
------------------------------

└── 51
    ├── 24, 36
    │   ├── 14, 16, 22
    │   ├── 30, 34
    │   └── 38, 39
    └── 69, 80, 92
        ├── 55, 68
        ├── 71, 77
        ├── 87
        └── 98

------------------------------

generatedTree.delete(22)
generatedTree.delete(30)
generatedTree.delete(14)

------------------------------

└── 51
    ├── 24, 36
    │   ├── 16
    │   ├── 34
    │   └── 38, 39
    └── 69, 80, 92
        ├── 55, 68
        ├── 71, 77
        ├── 87
        └── 98


------------------------------

END - TEST 17


START - TEST 18
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(95);
generatedTree.insert2pass(21);
generatedTree.insert2pass(62);
generatedTree.insert2pass(11);
generatedTree.insert2pass(20);
generatedTree.insert2pass(56);
generatedTree.insert2pass(18);
generatedTree.insert2pass(13);
generatedTree.insert2pass(66);
generatedTree.insert2pass(77);
generatedTree.insert2pass(26);
------------------------------

└── 16, 21, 62
    ├── 11, 13
    ├── 18, 20
    ├── 26, 56
    └── 66, 77, 95

------------------------------

generatedTree.delete(95)

------------------------------

└── 16, 21, 62
    ├── 11, 13
    ├── 18, 20
    ├── 26, 56
    └── 66, 77


------------------------------

END - TEST 18


START - TEST 19
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(82);
generatedTree.insert2pass(26);
generatedTree.insert2pass(96);
generatedTree.insert2pass(20);
generatedTree.insert2pass(83);
generatedTree.insert2pass(66);
generatedTree.insert2pass(52);
generatedTree.insert2pass(30);
generatedTree.insert2pass(48);
generatedTree.insert2pass(67);
generatedTree.insert2pass(40);
generatedTree.insert2pass(25);
------------------------------

└── 26, 52, 78
    ├── 20, 25
    ├── 30, 40, 48
    ├── 66, 67
    └── 82, 83, 96

------------------------------

generatedTree.delete(20)

------------------------------

└── 26, 52, 78
    ├── 25
    ├── 30, 40, 48
    ├── 66, 67
    └── 82, 83, 96


------------------------------

END - TEST 19


START - TEST 20
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(60);
generatedTree.insert2pass(46);
generatedTree.insert2pass(45);
generatedTree.insert2pass(26);
generatedTree.insert2pass(84);
generatedTree.insert2pass(33);
generatedTree.insert2pass(86);
generatedTree.insert2pass(96);
generatedTree.insert2pass(44);
generatedTree.insert2pass(55);
generatedTree.insert2pass(88);
generatedTree.insert2pass(61);
generatedTree.insert2pass(28);
generatedTree.insert2pass(58);
generatedTree.insert2pass(41);
generatedTree.insert2pass(56);
generatedTree.insert2pass(69);
generatedTree.insert2pass(83);
generatedTree.insert2pass(67);
------------------------------

└── 52
    ├── 33, 45
    │   ├── 26, 28
    │   ├── 41, 44
    │   └── 46
    └── 60, 69, 84
        ├── 55, 56, 58
        ├── 61, 67
        ├── 83
        └── 86, 88, 96

------------------------------

generatedTree.delete(83)

------------------------------

└── 52
    ├── 33, 45
    │   ├── 26, 28
    │   ├── 41, 44
    │   └── 46
    └── 60, 67, 84
        ├── 55, 56, 58
        ├── 61
        ├── 69
        └── 86, 88, 96


------------------------------

END - TEST 20


START - TEST 21
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(57);
generatedTree.insert2pass(98);
generatedTree.insert2pass(60);
generatedTree.insert2pass(35);
generatedTree.insert2pass(55);
generatedTree.insert2pass(54);
generatedTree.insert2pass(20);
generatedTree.insert2pass(67);
generatedTree.insert2pass(94);
------------------------------

└── 54, 57, 74
    ├── 20, 35
    ├── 55
    ├── 60, 67
    └── 94, 98

------------------------------

generatedTree.delete(54)
generatedTree.delete(35)
generatedTree.delete(94)

------------------------------

└── 57, 74
    ├── 20, 55
    ├── 60, 67
    └── 98


------------------------------

END - TEST 21


START - TEST 22
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(45);
generatedTree.insert2pass(47);
generatedTree.insert2pass(94);
generatedTree.insert2pass(95);
generatedTree.insert2pass(12);
generatedTree.insert2pass(13);
generatedTree.insert2pass(56);
generatedTree.insert2pass(61);
generatedTree.insert2pass(57);
generatedTree.insert2pass(15);
generatedTree.insert2pass(89);
generatedTree.insert2pass(76);
generatedTree.insert2pass(97);
------------------------------

└── 61
    ├── 13, 47
    │   ├── 12
    │   ├── 15, 45
    │   └── 56, 57
    └── 94
        ├── 76, 79, 89
        └── 95, 97

------------------------------

generatedTree.delete(12)
generatedTree.delete(47)
generatedTree.delete(15)

------------------------------

└── 61
    ├── 56
    │   ├── 13, 45
    │   └── 57
    └── 94
        ├── 76, 79, 89
        └── 95, 97


------------------------------

END - TEST 22


START - TEST 23
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(91);
generatedTree.insert2pass(27);
generatedTree.insert2pass(19);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(84);
generatedTree.insert2pass(39);
generatedTree.insert2pass(11);
generatedTree.insert2pass(87);
------------------------------

└── 27, 70, 89
    ├── 11, 19
    ├── 39
    ├── 84, 87
    └── 91

------------------------------

generatedTree.delete(89)
generatedTree.delete(11)

------------------------------

└── 27, 70, 87
    ├── 19
    ├── 39
    ├── 84
    └── 91


------------------------------

END - TEST 23


START - TEST 24
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(67);
generatedTree.insert2pass(37);
generatedTree.insert2pass(56);
generatedTree.insert2pass(41);
generatedTree.insert2pass(91);
generatedTree.insert2pass(45);
generatedTree.insert2pass(42);
generatedTree.insert2pass(52);
generatedTree.insert2pass(28);
generatedTree.insert2pass(86);
generatedTree.insert2pass(58);
generatedTree.insert2pass(51);
generatedTree.insert2pass(34);
generatedTree.insert2pass(60);
generatedTree.insert2pass(50);
generatedTree.insert2pass(94);
generatedTree.insert2pass(35);
generatedTree.insert2pass(48);
------------------------------

└── 41, 56
    ├── 34
    │   ├── 28
    │   └── 35, 37
    ├── 45, 51
    │   ├── 42
    │   ├── 48, 50
    │   └── 52
    └── 86
        ├── 58, 60, 67
        └── 91, 94

------------------------------

generatedTree.delete(56)
generatedTree.delete(42)
generatedTree.delete(52)

------------------------------

└── 41
    ├── 34
    │   ├── 28
    │   └── 35, 37
    └── 50, 58, 86
        ├── 45, 48
        ├── 51
        ├── 60, 67
        └── 91, 94


------------------------------

END - TEST 24


START - TEST 25
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(19);
generatedTree.insert2pass(53);
generatedTree.insert2pass(30);
generatedTree.insert2pass(29);
generatedTree.insert2pass(95);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(43);
generatedTree.insert2pass(57);
generatedTree.insert2pass(84);
generatedTree.insert2pass(44);
generatedTree.insert2pass(92);
------------------------------

└── 52
    ├── 29
    │   ├── 19
    │   └── 30, 43, 44
    └── 70, 89
        ├── 53, 57
        ├── 84
        └── 92, 95

------------------------------

generatedTree.delete(95)
generatedTree.delete(44)
generatedTree.delete(19)

------------------------------

└── 70
    ├── 30, 52
    │   ├── 29
    │   ├── 43
    │   └── 53, 57
    └── 89
        ├── 84
        └── 92


------------------------------

END - TEST 25


START - TEST 26
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(31);
generatedTree.insert2pass(27);
generatedTree.insert2pass(63);
generatedTree.insert2pass(59);
generatedTree.insert2pass(72);
generatedTree.insert2pass(86);
generatedTree.insert2pass(38);
generatedTree.insert2pass(32);
generatedTree.insert2pass(15);
generatedTree.insert2pass(29);
generatedTree.insert2pass(58);
generatedTree.insert2pass(33);
generatedTree.insert2pass(66);
generatedTree.insert2pass(93);
generatedTree.insert2pass(74);
generatedTree.insert2pass(92);
generatedTree.insert2pass(85);
generatedTree.insert2pass(78);
generatedTree.insert2pass(25);
------------------------------

└── 36
    ├── 27, 31
    │   ├── 15, 25
    │   ├── 29
    │   └── 32, 33
    └── 59, 72, 86
        ├── 38, 58
        ├── 63, 66
        ├── 74, 78, 85
        └── 92, 93

------------------------------

generatedTree.delete(15)
generatedTree.delete(32)

------------------------------

└── 36
    ├── 27, 31
    │   ├── 25
    │   ├── 29
    │   └── 33
    └── 59, 72, 86
        ├── 38, 58
        ├── 63, 66
        ├── 74, 78, 85
        └── 92, 93


------------------------------

END - TEST 26


START - TEST 27
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(17);
generatedTree.insert2pass(48);
generatedTree.insert2pass(37);
generatedTree.insert2pass(51);
generatedTree.insert2pass(77);
generatedTree.insert2pass(32);
generatedTree.insert2pass(21);
generatedTree.insert2pass(24);
generatedTree.insert2pass(54);
generatedTree.insert2pass(27);
generatedTree.insert2pass(59);
generatedTree.insert2pass(25);
generatedTree.insert2pass(72);
generatedTree.insert2pass(99);
generatedTree.insert2pass(80);
generatedTree.insert2pass(94);
------------------------------

└── 48
    ├── 21, 32
    │   ├── 17
    │   ├── 24, 25, 27
    │   └── 37
    └── 54, 77, 82
        ├── 51
        ├── 59, 72
        ├── 80
        └── 94, 99

------------------------------

generatedTree.delete(25)
generatedTree.delete(17)

------------------------------

└── 48
    ├── 24, 32
    │   ├── 21
    │   ├── 27
    │   └── 37
    └── 54, 77, 82
        ├── 51
        ├── 59, 72
        ├── 80
        └── 94, 99


------------------------------

END - TEST 27


START - TEST 28
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(33);
generatedTree.insert2pass(75);
generatedTree.insert2pass(13);
generatedTree.insert2pass(14);
generatedTree.insert2pass(11);
generatedTree.insert2pass(91);
generatedTree.insert2pass(84);
generatedTree.insert2pass(48);
generatedTree.insert2pass(31);
------------------------------

└── 14, 66
    ├── 11, 13
    ├── 31, 33, 48
    └── 75, 84, 91

------------------------------

generatedTree.delete(31)

------------------------------

└── 14, 66
    ├── 11, 13
    ├── 33, 48
    └── 75, 84, 91


------------------------------

END - TEST 28


START - TEST 29
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(81);
generatedTree.insert2pass(98);
generatedTree.insert2pass(40);
generatedTree.insert2pass(85);
generatedTree.insert2pass(52);
generatedTree.insert2pass(23);
generatedTree.insert2pass(62);
generatedTree.insert2pass(57);
generatedTree.insert2pass(87);
generatedTree.insert2pass(50);
generatedTree.insert2pass(33);
generatedTree.insert2pass(12);
generatedTree.insert2pass(72);
generatedTree.insert2pass(42);
generatedTree.insert2pass(26);
generatedTree.insert2pass(78);
------------------------------

└── 57
    ├── 23, 40
    │   ├── 12
    │   ├── 26, 33
    │   └── 42, 50, 52
    └── 81
        ├── 62, 72, 78
        └── 85, 87, 98

------------------------------

generatedTree.delete(72)

------------------------------

└── 40
    ├── 23
    │   ├── 12
    │   └── 26, 33
    └── 57, 81
        ├── 42, 50, 52
        ├── 62, 78
        └── 85, 87, 98


------------------------------

END - TEST 29


START - TEST 30
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(36);
generatedTree.insert2pass(97);
generatedTree.insert2pass(27);
generatedTree.insert2pass(26);
generatedTree.insert2pass(73);
generatedTree.insert2pass(52);
generatedTree.insert2pass(40);
generatedTree.insert2pass(38);
generatedTree.insert2pass(23);
generatedTree.insert2pass(48);
generatedTree.insert2pass(81);
generatedTree.insert2pass(42);
generatedTree.insert2pass(85);
generatedTree.insert2pass(31);
generatedTree.insert2pass(30);
generatedTree.insert2pass(44);
generatedTree.insert2pass(24);
generatedTree.insert2pass(32);
------------------------------

└── 43
    ├── 27, 31, 38
    │   ├── 23, 24, 26
    │   ├── 30
    │   ├── 32, 36
    │   └── 40, 42
    └── 73
        ├── 44, 48, 52
        └── 81, 85, 97

------------------------------

generatedTree.delete(44)

------------------------------

└── 38
    ├── 27, 31
    │   ├── 23, 24, 26
    │   ├── 30
    │   └── 32, 36
    └── 43, 73
        ├── 40, 42
        ├── 48, 52
        └── 81, 85, 97


------------------------------

END - TEST 30


START - TEST 31
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(33);
generatedTree.insert2pass(30);
generatedTree.insert2pass(85);
generatedTree.insert2pass(66);
generatedTree.insert2pass(80);
generatedTree.insert2pass(40);
------------------------------

└── 33, 66
    ├── 30
    ├── 40, 56
    └── 80, 85

------------------------------

generatedTree.delete(33)

------------------------------

└── 40, 66
    ├── 30
    ├── 56
    └── 80, 85


------------------------------

END - TEST 31


START - TEST 32
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(94);
generatedTree.insert2pass(11);
generatedTree.insert2pass(26);
generatedTree.insert2pass(34);
generatedTree.insert2pass(92);
generatedTree.insert2pass(99);
------------------------------

└── 82
    ├── 11, 26, 34
    └── 92, 94, 99

------------------------------

generatedTree.delete(94)

------------------------------

└── 82
    ├── 11, 26, 34
    └── 92, 99


------------------------------

END - TEST 32


START - TEST 33
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(82);
generatedTree.insert2pass(46);
generatedTree.insert2pass(48);
generatedTree.insert2pass(30);
------------------------------

└── 46
    ├── 30, 43
    └── 48, 82

------------------------------

generatedTree.delete(46)
generatedTree.delete(43)

------------------------------

└── 48
    ├── 30
    └── 82


------------------------------

END - TEST 33


START - TEST 34
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(88);
generatedTree.insert2pass(63);
generatedTree.insert2pass(66);
generatedTree.insert2pass(94);
generatedTree.insert2pass(15);
generatedTree.insert2pass(40);
generatedTree.insert2pass(49);
generatedTree.insert2pass(91);
generatedTree.insert2pass(24);
generatedTree.insert2pass(71);
generatedTree.insert2pass(37);
generatedTree.insert2pass(81);
generatedTree.insert2pass(60);
generatedTree.insert2pass(44);
------------------------------

└── 63
    ├── 29, 40
    │   ├── 15, 24
    │   ├── 37
    │   └── 44, 49, 60
    └── 88
        ├── 66, 71, 81
        └── 91, 94

------------------------------

generatedTree.delete(40)
generatedTree.delete(81)

------------------------------

└── 44
    ├── 29
    │   ├── 15, 24
    │   └── 37
    └── 63, 88
        ├── 49, 60
        ├── 66, 71
        └── 91, 94


------------------------------

END - TEST 34


START - TEST 35
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(31);
generatedTree.insert2pass(25);
generatedTree.insert2pass(27);
generatedTree.insert2pass(95);
generatedTree.insert2pass(90);
generatedTree.insert2pass(66);
generatedTree.insert2pass(20);
generatedTree.insert2pass(40);
------------------------------

└── 31, 90
    ├── 20, 25, 27
    ├── 37, 40, 66
    └── 95

------------------------------

generatedTree.delete(27)

------------------------------

└── 31, 90
    ├── 20, 25
    ├── 37, 40, 66
    └── 95


------------------------------

END - TEST 35


START - TEST 36
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(51);
generatedTree.insert2pass(96);
generatedTree.insert2pass(63);
generatedTree.insert2pass(49);
generatedTree.insert2pass(12);
generatedTree.insert2pass(89);
generatedTree.insert2pass(59);
generatedTree.insert2pass(29);
generatedTree.insert2pass(42);
generatedTree.insert2pass(61);
generatedTree.insert2pass(52);
generatedTree.insert2pass(83);
generatedTree.insert2pass(25);
generatedTree.insert2pass(41);
generatedTree.insert2pass(45);
generatedTree.insert2pass(58);
generatedTree.insert2pass(82);
generatedTree.insert2pass(67);
------------------------------

└── 51
    ├── 29, 46
    │   ├── 12, 25
    │   ├── 41, 42, 45
    │   └── 49
    └── 61, 82, 89
        ├── 52, 58, 59
        ├── 63, 67
        ├── 83
        └── 96

------------------------------

generatedTree.delete(83)
generatedTree.delete(67)

------------------------------

└── 51
    ├── 29, 46
    │   ├── 12, 25
    │   ├── 41, 42, 45
    │   └── 49
    └── 61, 89
        ├── 52, 58, 59
        ├── 63, 82
        └── 96


------------------------------

END - TEST 36


START - TEST 37
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(58);
generatedTree.insert2pass(77);
generatedTree.insert2pass(73);
generatedTree.insert2pass(36);
generatedTree.insert2pass(96);
generatedTree.insert2pass(74);
generatedTree.insert2pass(42);
generatedTree.insert2pass(12);
generatedTree.insert2pass(66);
generatedTree.insert2pass(90);
generatedTree.insert2pass(22);
generatedTree.insert2pass(23);
------------------------------

└── 58
    ├── 22, 36
    │   ├── 12
    │   ├── 23, 34
    │   └── 42
    └── 77
        ├── 66, 73, 74
        └── 90, 96

------------------------------

generatedTree.delete(36)
generatedTree.delete(96)
generatedTree.delete(12)

------------------------------

└── 58
    ├── 34
    │   ├── 22, 23
    │   └── 42
    └── 77
        ├── 66, 73, 74
        └── 90


------------------------------

END - TEST 37


START - TEST 38
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(80);
generatedTree.insert2pass(60);
generatedTree.insert2pass(51);
generatedTree.insert2pass(18);
generatedTree.insert2pass(91);
generatedTree.insert2pass(67);
generatedTree.insert2pass(50);
generatedTree.insert2pass(29);
generatedTree.insert2pass(28);
generatedTree.insert2pass(35);
generatedTree.insert2pass(57);
generatedTree.insert2pass(85);
generatedTree.insert2pass(38);
generatedTree.insert2pass(75);
generatedTree.insert2pass(31);
------------------------------

└── 51
    ├── 29, 38
    │   ├── 18, 28
    │   ├── 31, 35
    │   └── 50
    └── 60, 80
        ├── 57
        ├── 67, 75
        └── 85, 86, 91

------------------------------

generatedTree.delete(75)
generatedTree.delete(51)
generatedTree.delete(57)

------------------------------

└── 50
    ├── 29, 35
    │   ├── 18, 28
    │   ├── 31
    │   └── 38
    └── 80
        ├── 60, 67
        └── 85, 86, 91


------------------------------

END - TEST 38


START - TEST 39
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(28);
generatedTree.insert2pass(15);
generatedTree.insert2pass(73);
generatedTree.insert2pass(52);
generatedTree.insert2pass(23);
generatedTree.insert2pass(38);
generatedTree.insert2pass(56);
generatedTree.insert2pass(87);
generatedTree.insert2pass(85);
generatedTree.insert2pass(29);
generatedTree.insert2pass(32);
generatedTree.insert2pass(35);
generatedTree.insert2pass(16);
generatedTree.insert2pass(98);
generatedTree.insert2pass(37);
generatedTree.insert2pass(31);
generatedTree.insert2pass(69);
------------------------------

└── 52
    ├── 27, 29, 35
    │   ├── 15, 16, 23
    │   ├── 28
    │   ├── 31, 32
    │   └── 37, 38
    └── 73
        ├── 56, 69
        └── 85, 87, 98

------------------------------

generatedTree.delete(16)
generatedTree.delete(69)

------------------------------

└── 35
    ├── 27, 29
    │   ├── 15, 23
    │   ├── 28
    │   └── 31, 32
    └── 52, 73
        ├── 37, 38
        ├── 56
        └── 85, 87, 98


------------------------------

END - TEST 39


START - TEST 40
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(23);
generatedTree.insert2pass(70);
generatedTree.insert2pass(79);
generatedTree.insert2pass(88);
------------------------------

└── 70
    ├── 23
    └── 77, 79, 88

------------------------------

generatedTree.delete(79)
generatedTree.delete(70)

------------------------------

└── 77
    ├── 23
    └── 88


------------------------------

END - TEST 40


START - TEST 41
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(68);
generatedTree.insert2pass(82);
generatedTree.insert2pass(28);
generatedTree.insert2pass(74);
generatedTree.insert2pass(21);
generatedTree.insert2pass(56);
generatedTree.insert2pass(95);
generatedTree.insert2pass(90);
generatedTree.insert2pass(47);
generatedTree.insert2pass(92);
generatedTree.insert2pass(52);
generatedTree.insert2pass(65);
generatedTree.insert2pass(91);
generatedTree.insert2pass(34);
generatedTree.insert2pass(59);
generatedTree.insert2pass(20);
generatedTree.insert2pass(18);
generatedTree.insert2pass(14);
------------------------------

└── 68
    ├── 20, 28, 52
    │   ├── 14, 18
    │   ├── 21
    │   ├── 34, 47
    │   └── 56, 59, 65
    └── 82, 90
        ├── 74
        ├── 89
        └── 91, 92, 95

------------------------------

generatedTree.delete(52)
generatedTree.delete(59)
generatedTree.delete(20)

------------------------------

└── 68
    ├── 18, 28, 47
    │   ├── 14
    │   ├── 21
    │   ├── 34
    │   └── 56, 65
    └── 82, 90
        ├── 74
        ├── 89
        └── 91, 92, 95


------------------------------

END - TEST 41


START - TEST 42
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(47);
generatedTree.insert2pass(71);
generatedTree.insert2pass(63);
generatedTree.insert2pass(84);
generatedTree.insert2pass(70);
generatedTree.insert2pass(95);
generatedTree.insert2pass(76);
generatedTree.insert2pass(37);
generatedTree.insert2pass(93);
generatedTree.insert2pass(12);
generatedTree.insert2pass(36);
generatedTree.insert2pass(88);
generatedTree.insert2pass(22);
generatedTree.insert2pass(18);
------------------------------

└── 71
    ├── 30, 47
    │   ├── 12, 18, 22
    │   ├── 36, 37
    │   └── 63, 70
    └── 84
        ├── 76
        └── 88, 93, 95

------------------------------

generatedTree.delete(63)
generatedTree.delete(93)

------------------------------

└── 47
    ├── 30
    │   ├── 12, 18, 22
    │   └── 36, 37
    └── 71, 84
        ├── 70
        ├── 76
        └── 88, 95


------------------------------

END - TEST 42


START - TEST 43
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(60);
generatedTree.insert2pass(84);
generatedTree.insert2pass(46);
generatedTree.insert2pass(48);
generatedTree.insert2pass(69);
generatedTree.insert2pass(55);
generatedTree.insert2pass(32);
generatedTree.insert2pass(50);
generatedTree.insert2pass(11);
generatedTree.insert2pass(62);
generatedTree.insert2pass(72);
generatedTree.insert2pass(67);
generatedTree.insert2pass(70);
generatedTree.insert2pass(36);
generatedTree.insert2pass(68);
generatedTree.insert2pass(99);
generatedTree.insert2pass(85);
------------------------------

└── 60
    ├── 32, 48
    │   ├── 11
    │   ├── 36, 46
    │   └── 50, 55
    └── 69, 72
        ├── 62, 67, 68
        ├── 70
        └── 84, 85, 99

------------------------------

generatedTree.delete(68)
generatedTree.delete(11)

------------------------------

└── 60
    ├── 36, 48
    │   ├── 32
    │   ├── 46
    │   └── 50, 55
    └── 69, 72
        ├── 62, 67
        ├── 70
        └── 84, 85, 99


------------------------------

END - TEST 43


START - TEST 44
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(82);
generatedTree.insert2pass(37);
generatedTree.insert2pass(84);
generatedTree.insert2pass(51);
------------------------------

└── 82
    ├── 37, 51
    └── 84, 86

------------------------------

generatedTree.delete(84)
generatedTree.delete(37)
generatedTree.delete(82)

------------------------------

└── 51, 86


------------------------------

END - TEST 44


START - TEST 45
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(39);
generatedTree.insert2pass(54);
generatedTree.insert2pass(78);
generatedTree.insert2pass(58);
generatedTree.insert2pass(52);
generatedTree.insert2pass(89);
generatedTree.insert2pass(27);
generatedTree.insert2pass(97);
generatedTree.insert2pass(82);
generatedTree.insert2pass(12);
generatedTree.insert2pass(99);
generatedTree.insert2pass(19);
generatedTree.insert2pass(32);
generatedTree.insert2pass(11);
generatedTree.insert2pass(74);
generatedTree.insert2pass(76);
generatedTree.insert2pass(35);
------------------------------

└── 54
    ├── 19, 39
    │   ├── 11, 12
    │   ├── 27, 32, 35
    │   └── 52
    └── 78, 89
        ├── 58, 74, 76
        ├── 82
        └── 97, 99

------------------------------

generatedTree.delete(99)
generatedTree.delete(97)
generatedTree.delete(76)

------------------------------

└── 39
    ├── 19
    │   ├── 11, 12
    │   └── 27, 32, 35
    └── 54, 78
        ├── 52
        ├── 58, 74
        └── 82, 89


------------------------------

END - TEST 45


START - TEST 46
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(71);
generatedTree.insert2pass(49);
generatedTree.insert2pass(76);
generatedTree.insert2pass(93);
generatedTree.insert2pass(58);
------------------------------

└── 59
    ├── 49, 58
    └── 71, 76, 93

------------------------------

generatedTree.delete(49)
generatedTree.delete(59)

------------------------------

└── 71
    ├── 58
    └── 76, 93


------------------------------

END - TEST 46


START - TEST 47
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(72);
generatedTree.insert2pass(29);
generatedTree.insert2pass(57);
generatedTree.insert2pass(36);
generatedTree.insert2pass(64);
generatedTree.insert2pass(61);
generatedTree.insert2pass(76);
generatedTree.insert2pass(85);
generatedTree.insert2pass(96);
generatedTree.insert2pass(56);
generatedTree.insert2pass(70);
generatedTree.insert2pass(13);
generatedTree.insert2pass(49);
generatedTree.insert2pass(21);
generatedTree.insert2pass(33);
generatedTree.insert2pass(31);
generatedTree.insert2pass(53);
generatedTree.insert2pass(65);
------------------------------

└── 57
    ├── 29, 49
    │   ├── 13, 21, 28
    │   ├── 31, 33, 36
    │   └── 53, 56
    └── 64, 76
        ├── 61
        ├── 65, 70, 72
        └── 85, 96

------------------------------

generatedTree.delete(49)
generatedTree.delete(85)

------------------------------

└── 57
    ├── 29, 36
    │   ├── 13, 21, 28
    │   ├── 31, 33
    │   └── 53, 56
    └── 64, 76
        ├── 61
        ├── 65, 70, 72
        └── 96


------------------------------

END - TEST 47


START - TEST 48
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(57);
generatedTree.insert2pass(33);
generatedTree.insert2pass(89);
generatedTree.insert2pass(59);
generatedTree.insert2pass(85);
generatedTree.insert2pass(20);
generatedTree.insert2pass(32);
generatedTree.insert2pass(25);
generatedTree.insert2pass(12);
generatedTree.insert2pass(76);
generatedTree.insert2pass(45);
------------------------------

└── 32, 57, 62
    ├── 12, 20, 25
    ├── 33, 45
    ├── 59
    └── 76, 85, 89

------------------------------

generatedTree.delete(57)

------------------------------

└── 32, 45, 62
    ├── 12, 20, 25
    ├── 33
    ├── 59
    └── 76, 85, 89


------------------------------

END - TEST 48


START - TEST 49
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(25);
generatedTree.insert2pass(83);
generatedTree.insert2pass(18);
generatedTree.insert2pass(96);
------------------------------

└── 36
    ├── 18, 25
    └── 83, 96

------------------------------

generatedTree.delete(36)
generatedTree.delete(25)

------------------------------

└── 83
    ├── 18
    └── 96


------------------------------

END - TEST 49


START - TEST 50
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(44);
generatedTree.insert2pass(31);
generatedTree.insert2pass(37);
generatedTree.insert2pass(18);
generatedTree.insert2pass(77);
generatedTree.insert2pass(80);
generatedTree.insert2pass(60);
generatedTree.insert2pass(27);
generatedTree.insert2pass(19);
generatedTree.insert2pass(84);
generatedTree.insert2pass(57);
generatedTree.insert2pass(39);
generatedTree.insert2pass(33);
generatedTree.insert2pass(12);
generatedTree.insert2pass(29);
generatedTree.insert2pass(88);
generatedTree.insert2pass(32);
------------------------------

└── 44
    ├── 19, 31, 37
    │   ├── 12, 18
    │   ├── 27, 29
    │   ├── 32, 33
    │   └── 39
    └── 77
        ├── 46, 57, 60
        └── 80, 84, 88

------------------------------

generatedTree.delete(84)
generatedTree.delete(31)
generatedTree.delete(44)

------------------------------

└── 37
    ├── 19, 29
    │   ├── 12, 18
    │   ├── 27
    │   └── 32, 33
    └── 46, 77
        ├── 39
        ├── 57, 60
        └── 80, 88


------------------------------

END - TEST 50


START - TEST 51
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(24);
generatedTree.insert2pass(45);
generatedTree.insert2pass(12);
generatedTree.insert2pass(74);
generatedTree.insert2pass(98);
generatedTree.insert2pass(63);
generatedTree.insert2pass(71);
generatedTree.insert2pass(36);
generatedTree.insert2pass(22);
generatedTree.insert2pass(84);
generatedTree.insert2pass(11);
generatedTree.insert2pass(16);
------------------------------

└── 43
    ├── 12, 24
    │   ├── 11
    │   ├── 16, 22
    │   └── 36
    └── 74
        ├── 45, 63, 71
        └── 84, 98

------------------------------

generatedTree.delete(84)
generatedTree.delete(98)
generatedTree.delete(63)

------------------------------

└── 24
    ├── 12
    │   ├── 11
    │   └── 16, 22
    └── 43, 71
        ├── 36
        ├── 45
        └── 74


------------------------------

END - TEST 51


START - TEST 52
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(75);
generatedTree.insert2pass(65);
generatedTree.insert2pass(33);
generatedTree.insert2pass(16);
generatedTree.insert2pass(74);
generatedTree.insert2pass(66);
generatedTree.insert2pass(57);
generatedTree.insert2pass(37);
generatedTree.insert2pass(23);
generatedTree.insert2pass(88);
generatedTree.insert2pass(31);
generatedTree.insert2pass(11);
------------------------------

└── 65
    ├── 23, 33
    │   ├── 11, 16
    │   ├── 31
    │   └── 37, 40, 57
    └── 74
        ├── 66
        └── 75, 88

------------------------------

generatedTree.delete(75)
generatedTree.delete(57)
generatedTree.delete(88)

------------------------------

└── 33
    ├── 23
    │   ├── 11, 16
    │   └── 31
    └── 65
        ├── 37, 40
        └── 66, 74


------------------------------

END - TEST 52


START - TEST 53
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(97);
generatedTree.insert2pass(41);
generatedTree.insert2pass(28);
generatedTree.insert2pass(53);
generatedTree.insert2pass(60);
generatedTree.insert2pass(23);
generatedTree.insert2pass(95);
generatedTree.insert2pass(98);
generatedTree.insert2pass(92);
generatedTree.insert2pass(75);
generatedTree.insert2pass(86);
generatedTree.insert2pass(43);
generatedTree.insert2pass(63);
generatedTree.insert2pass(14);
generatedTree.insert2pass(45);
generatedTree.insert2pass(84);
generatedTree.insert2pass(65);
------------------------------

└── 82
    ├── 41, 60
    │   ├── 14, 23, 28
    │   ├── 43, 45, 53
    │   └── 63, 65, 75
    └── 92, 97
        ├── 84, 86
        ├── 95
        └── 98

------------------------------

generatedTree.delete(45)

------------------------------

└── 82
    ├── 41, 60
    │   ├── 14, 23, 28
    │   ├── 43, 53
    │   └── 63, 65, 75
    └── 92, 97
        ├── 84, 86
        ├── 95
        └── 98


------------------------------

END - TEST 53


START - TEST 54
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(28);
generatedTree.insert2pass(17);
generatedTree.insert2pass(61);
generatedTree.insert2pass(79);
generatedTree.insert2pass(42);
generatedTree.insert2pass(77);
generatedTree.insert2pass(78);
generatedTree.insert2pass(64);
generatedTree.insert2pass(71);
generatedTree.insert2pass(49);
generatedTree.insert2pass(23);
generatedTree.insert2pass(67);
generatedTree.insert2pass(13);
generatedTree.insert2pass(83);
------------------------------

└── 69
    ├── 28, 61
    │   ├── 13, 17, 23
    │   ├── 42, 49
    │   └── 64, 67
    └── 78
        ├── 71, 77
        └── 79, 83

------------------------------

generatedTree.delete(69)
generatedTree.delete(77)

------------------------------

└── 61
    ├── 28
    │   ├── 13, 17, 23
    │   └── 42, 49
    └── 67, 78
        ├── 64
        ├── 71
        └── 79, 83


------------------------------

END - TEST 54


START - TEST 55
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(21);
generatedTree.insert2pass(53);
generatedTree.insert2pass(81);
generatedTree.insert2pass(51);
generatedTree.insert2pass(56);
generatedTree.insert2pass(58);
generatedTree.insert2pass(57);
generatedTree.insert2pass(50);
generatedTree.insert2pass(59);
generatedTree.insert2pass(55);
generatedTree.insert2pass(43);
------------------------------

└── 47, 53, 58
    ├── 21, 43
    ├── 50, 51
    ├── 55, 56, 57
    └── 59, 81

------------------------------

generatedTree.delete(50)

------------------------------

└── 47, 53, 58
    ├── 21, 43
    ├── 51
    ├── 55, 56, 57
    └── 59, 81


------------------------------

END - TEST 55


START - TEST 56
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(60);
generatedTree.insert2pass(88);
generatedTree.insert2pass(28);
generatedTree.insert2pass(82);
generatedTree.insert2pass(98);
generatedTree.insert2pass(53);
generatedTree.insert2pass(50);
generatedTree.insert2pass(57);
------------------------------

└── 53, 69
    ├── 28, 50
    ├── 57, 60
    └── 82, 88, 98

------------------------------

generatedTree.delete(57)
generatedTree.delete(53)

------------------------------

└── 50, 69
    ├── 28
    ├── 60
    └── 82, 88, 98


------------------------------

END - TEST 56


START - TEST 57
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(39);
generatedTree.insert2pass(83);
generatedTree.insert2pass(14);
generatedTree.insert2pass(33);
generatedTree.insert2pass(97);
generatedTree.insert2pass(63);
generatedTree.insert2pass(24);
generatedTree.insert2pass(90);
generatedTree.insert2pass(21);
generatedTree.insert2pass(55);
generatedTree.insert2pass(46);
generatedTree.insert2pass(75);
generatedTree.insert2pass(36);
generatedTree.insert2pass(89);
generatedTree.insert2pass(12);
generatedTree.insert2pass(99);
generatedTree.insert2pass(44);
------------------------------

└── 39
    ├── 24
    │   ├── 12, 14, 21
    │   └── 33, 36
    └── 55, 83, 90
        ├── 44, 46
        ├── 63, 75
        ├── 89
        └── 97, 99

------------------------------

generatedTree.delete(36)

------------------------------

└── 55
    ├── 24, 39
    │   ├── 12, 14, 21
    │   ├── 33
    │   └── 44, 46
    └── 83, 90
        ├── 63, 75
        ├── 89
        └── 97, 99


------------------------------

END - TEST 57


START - TEST 58
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(86);
generatedTree.insert2pass(76);
generatedTree.insert2pass(52);
generatedTree.insert2pass(16);
------------------------------

└── 76
    ├── 16, 22, 52
    └── 86

------------------------------

generatedTree.delete(76)

------------------------------

└── 52
    ├── 16, 22
    └── 86


------------------------------

END - TEST 58


START - TEST 59
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(84);
generatedTree.insert2pass(32);
generatedTree.insert2pass(28);
generatedTree.insert2pass(57);
generatedTree.insert2pass(27);
generatedTree.insert2pass(89);
generatedTree.insert2pass(85);
generatedTree.insert2pass(50);
generatedTree.insert2pass(55);
generatedTree.insert2pass(95);
generatedTree.insert2pass(12);
generatedTree.insert2pass(96);
generatedTree.insert2pass(23);
------------------------------

└── 32
    ├── 27
    │   ├── 12, 15, 23
    │   └── 28
    └── 84, 89
        ├── 50, 55, 57
        ├── 85
        └── 95, 96

------------------------------

generatedTree.delete(89)
generatedTree.delete(32)

------------------------------

└── 50
    ├── 27
    │   ├── 12, 15, 23
    │   └── 28
    └── 84, 95
        ├── 55, 57
        ├── 85
        └── 96


------------------------------

END - TEST 59


START - TEST 60
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(13);
generatedTree.insert2pass(59);
generatedTree.insert2pass(49);
generatedTree.insert2pass(81);
generatedTree.insert2pass(97);
generatedTree.insert2pass(31);
generatedTree.insert2pass(34);
generatedTree.insert2pass(47);
generatedTree.insert2pass(35);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
------------------------------

└── 32
    ├── 27
    │   ├── 13, 21
    │   └── 31
    └── 49, 81
        ├── 34, 35, 47
        ├── 58, 59
        └── 97

------------------------------

generatedTree.delete(13)
generatedTree.delete(47)
generatedTree.delete(49)

------------------------------

└── 35
    ├── 27, 32
    │   ├── 21
    │   ├── 31
    │   └── 34
    └── 81
        ├── 58, 59
        └── 97


------------------------------

END - TEST 60


START - TEST 61
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(83);
generatedTree.insert2pass(55);
generatedTree.insert2pass(66);
generatedTree.insert2pass(63);
generatedTree.insert2pass(87);
generatedTree.insert2pass(82);
------------------------------

└── 70
    ├── 55, 63, 66
    └── 82, 83, 87

------------------------------

generatedTree.delete(63)
generatedTree.delete(55)
generatedTree.delete(87)

------------------------------

└── 70
    ├── 66
    └── 82, 83


------------------------------

END - TEST 61


START - TEST 62
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(97);
generatedTree.insert2pass(72);
generatedTree.insert2pass(31);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(49);
generatedTree.insert2pass(88);
generatedTree.insert2pass(81);
generatedTree.insert2pass(98);
generatedTree.insert2pass(63);
generatedTree.insert2pass(99);
generatedTree.insert2pass(51);
generatedTree.insert2pass(35);
generatedTree.insert2pass(91);
generatedTree.insert2pass(59);
generatedTree.insert2pass(85);
generatedTree.insert2pass(41);
------------------------------

└── 72
    ├── 31, 49, 58
    │   ├── 16
    │   ├── 35, 41
    │   ├── 51
    │   └── 59, 63
    └── 88, 98
        ├── 81, 85
        ├── 91, 97
        └── 99

------------------------------

generatedTree.delete(91)
generatedTree.delete(41)

------------------------------

└── 72
    ├── 31, 49, 58
    │   ├── 16
    │   ├── 35
    │   ├── 51
    │   └── 59, 63
    └── 88, 98
        ├── 81, 85
        ├── 97
        └── 99


------------------------------

END - TEST 62


START - TEST 63
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(42);
generatedTree.insert2pass(57);
generatedTree.insert2pass(55);
generatedTree.insert2pass(59);
generatedTree.insert2pass(54);
generatedTree.insert2pass(96);
generatedTree.insert2pass(88);
generatedTree.insert2pass(13);
generatedTree.insert2pass(50);
generatedTree.insert2pass(47);
generatedTree.insert2pass(31);
generatedTree.insert2pass(36);
generatedTree.insert2pass(38);
generatedTree.insert2pass(64);
generatedTree.insert2pass(67);
generatedTree.insert2pass(19);
generatedTree.insert2pass(97);
------------------------------

└── 57
    ├── 31, 42, 54
    │   ├── 13, 19
    │   ├── 36, 38
    │   ├── 47, 50
    │   └── 55
    └── 83
        ├── 59, 64, 67
        └── 88, 96, 97

------------------------------

generatedTree.delete(88)
generatedTree.delete(97)
generatedTree.delete(57)

------------------------------

└── 54
    ├── 31, 42
    │   ├── 13, 19
    │   ├── 36, 38
    │   └── 47, 50
    └── 59, 83
        ├── 55
        ├── 64, 67
        └── 96


------------------------------

END - TEST 63


START - TEST 64
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(36);
generatedTree.insert2pass(41);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(45);
generatedTree.insert2pass(56);
generatedTree.insert2pass(30);
generatedTree.insert2pass(92);
generatedTree.insert2pass(58);
generatedTree.insert2pass(84);
generatedTree.insert2pass(80);
generatedTree.insert2pass(65);
generatedTree.insert2pass(12);
generatedTree.insert2pass(11);
generatedTree.insert2pass(59);
------------------------------

└── 41
    ├── 19, 36
    │   ├── 11, 12
    │   ├── 30
    │   └── 37
    └── 46, 58, 84
        ├── 45
        ├── 56
        ├── 59, 65, 80
        └── 92

------------------------------

generatedTree.delete(19)
generatedTree.delete(12)
generatedTree.delete(59)

------------------------------

└── 41
    ├── 36
    │   ├── 11, 30
    │   └── 37
    └── 46, 58, 84
        ├── 45
        ├── 56
        ├── 65, 80
        └── 92


------------------------------

END - TEST 64


START - TEST 65
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(55);
generatedTree.insert2pass(61);
generatedTree.insert2pass(75);
generatedTree.insert2pass(95);
generatedTree.insert2pass(94);
generatedTree.insert2pass(13);
generatedTree.insert2pass(81);
generatedTree.insert2pass(20);
generatedTree.insert2pass(63);
generatedTree.insert2pass(31);
generatedTree.insert2pass(25);
generatedTree.insert2pass(80);
generatedTree.insert2pass(35);
------------------------------

└── 61
    ├── 20, 31
    │   ├── 13
    │   ├── 25
    │   └── 35, 55
    └── 75, 94
        ├── 63, 68
        ├── 80, 81
        └── 95

------------------------------

generatedTree.delete(95)

------------------------------

└── 61
    ├── 20, 31
    │   ├── 13
    │   ├── 25
    │   └── 35, 55
    └── 75, 81
        ├── 63, 68
        ├── 80
        └── 94


------------------------------

END - TEST 65


START - TEST 66
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(53);
generatedTree.insert2pass(30);
generatedTree.insert2pass(89);
generatedTree.insert2pass(97);
generatedTree.insert2pass(22);
------------------------------

└── 53
    ├── 22, 30
    └── 68, 89, 97

------------------------------

generatedTree.delete(53)
generatedTree.delete(30)

------------------------------

└── 68
    ├── 22
    └── 89, 97


------------------------------

END - TEST 66


START - TEST 67
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(54);
generatedTree.insert2pass(58);
generatedTree.insert2pass(24);
generatedTree.insert2pass(66);
generatedTree.insert2pass(99);
generatedTree.insert2pass(79);
generatedTree.insert2pass(96);
generatedTree.insert2pass(77);
generatedTree.insert2pass(74);
------------------------------

└── 57, 66, 96
    ├── 24, 54
    ├── 58
    ├── 74, 77, 79
    └── 99

------------------------------

generatedTree.delete(57)
generatedTree.delete(54)
generatedTree.delete(77)

------------------------------

└── 66, 96
    ├── 24, 58
    ├── 74, 79
    └── 99


------------------------------

END - TEST 67


START - TEST 68
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(14);
generatedTree.insert2pass(48);
generatedTree.insert2pass(32);
generatedTree.insert2pass(80);
generatedTree.insert2pass(67);
generatedTree.insert2pass(49);
generatedTree.insert2pass(20);
generatedTree.insert2pass(78);
generatedTree.insert2pass(23);
generatedTree.insert2pass(66);
generatedTree.insert2pass(27);
generatedTree.insert2pass(41);
generatedTree.insert2pass(42);
------------------------------

└── 32
    ├── 20
    │   ├── 14
    │   └── 23, 27
    └── 49, 67
        ├── 41, 42, 48
        ├── 66
        └── 78, 80

------------------------------

generatedTree.delete(32)
generatedTree.delete(27)
generatedTree.delete(14)

------------------------------

└── 49
    ├── 41
    │   ├── 20, 23
    │   └── 42, 48
    └── 67
        ├── 66
        └── 78, 80


------------------------------

END - TEST 68


START - TEST 69
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(40);
generatedTree.insert2pass(68);
generatedTree.insert2pass(91);
generatedTree.insert2pass(43);
generatedTree.insert2pass(47);
generatedTree.insert2pass(98);
generatedTree.insert2pass(56);
generatedTree.insert2pass(89);
generatedTree.insert2pass(74);
------------------------------

└── 43, 59, 91
    ├── 40
    ├── 47, 56
    ├── 68, 74, 89
    └── 98

------------------------------

generatedTree.delete(43)
generatedTree.delete(59)

------------------------------

└── 47, 68, 91
    ├── 40
    ├── 56
    ├── 74, 89
    └── 98


------------------------------

END - TEST 69


START - TEST 70
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(62);
generatedTree.insert2pass(20);
generatedTree.insert2pass(87);
generatedTree.insert2pass(48);
generatedTree.insert2pass(68);
generatedTree.insert2pass(99);
generatedTree.insert2pass(14);
generatedTree.insert2pass(98);
generatedTree.insert2pass(53);
generatedTree.insert2pass(50);
generatedTree.insert2pass(59);
------------------------------

└── 62
    ├── 25, 50
    │   ├── 14, 20
    │   ├── 48
    │   └── 53, 59
    └── 87
        ├── 68
        └── 98, 99

------------------------------

generatedTree.delete(14)

------------------------------

└── 62
    ├── 25, 50
    │   ├── 20
    │   ├── 48
    │   └── 53, 59
    └── 87
        ├── 68
        └── 98, 99


------------------------------

END - TEST 70


START - TEST 71
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(72);
generatedTree.insert2pass(68);
generatedTree.insert2pass(62);
generatedTree.insert2pass(15);
generatedTree.insert2pass(70);
generatedTree.insert2pass(23);
generatedTree.insert2pass(54);
generatedTree.insert2pass(45);
generatedTree.insert2pass(40);
generatedTree.insert2pass(43);
generatedTree.insert2pass(11);
generatedTree.insert2pass(85);
generatedTree.insert2pass(99);
generatedTree.insert2pass(30);
generatedTree.insert2pass(33);
generatedTree.insert2pass(76);
generatedTree.insert2pass(95);
------------------------------

└── 54
    ├── 23, 43
    │   ├── 11, 15
    │   ├── 30, 33, 40
    │   └── 45
    └── 68, 72, 85
        ├── 62
        ├── 70
        ├── 76
        └── 95, 99

------------------------------

generatedTree.delete(95)
generatedTree.delete(85)
generatedTree.delete(62)

------------------------------

└── 54
    ├── 23, 43
    │   ├── 11, 15
    │   ├── 30, 33, 40
    │   └── 45
    └── 72
        ├── 68, 70
        └── 76, 99


------------------------------

END - TEST 71


START - TEST 72
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(14);
generatedTree.insert2pass(40);
generatedTree.insert2pass(21);
generatedTree.insert2pass(78);
generatedTree.insert2pass(70);
generatedTree.insert2pass(39);
generatedTree.insert2pass(84);
generatedTree.insert2pass(28);
generatedTree.insert2pass(43);
generatedTree.insert2pass(45);
generatedTree.insert2pass(32);
generatedTree.insert2pass(41);
generatedTree.insert2pass(61);
generatedTree.insert2pass(38);
generatedTree.insert2pass(96);
------------------------------

└── 39
    ├── 27
    │   ├── 14, 21
    │   └── 28, 32, 38
    └── 43, 70
        ├── 40, 41
        ├── 45, 61
        └── 78, 84, 96

------------------------------

generatedTree.delete(70)
generatedTree.delete(27)
generatedTree.delete(41)

------------------------------

└── 43
    ├── 21, 39
    │   ├── 14
    │   ├── 28, 32, 38
    │   └── 40
    └── 61
        ├── 45
        └── 78, 84, 96


------------------------------

END - TEST 72


START - TEST 73
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(49);
generatedTree.insert2pass(39);
generatedTree.insert2pass(90);
generatedTree.insert2pass(71);
generatedTree.insert2pass(40);
generatedTree.insert2pass(32);
generatedTree.insert2pass(53);
------------------------------

└── 49, 71
    ├── 32, 39, 40
    ├── 51, 53
    └── 90

------------------------------

generatedTree.delete(49)
generatedTree.delete(51)

------------------------------

└── 40, 71
    ├── 32, 39
    ├── 53
    └── 90


------------------------------

END - TEST 73


START - TEST 74
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(79);
generatedTree.insert2pass(23);
generatedTree.insert2pass(90);
generatedTree.insert2pass(81);
generatedTree.insert2pass(18);
generatedTree.insert2pass(35);
generatedTree.insert2pass(11);
generatedTree.insert2pass(44);
generatedTree.insert2pass(62);
generatedTree.insert2pass(33);
generatedTree.insert2pass(71);
generatedTree.insert2pass(49);
generatedTree.insert2pass(55);
generatedTree.insert2pass(50);
generatedTree.insert2pass(77);
generatedTree.insert2pass(38);
------------------------------

└── 44
    ├── 23
    │   ├── 11, 18
    │   └── 33, 35, 38
    └── 62, 79
        ├── 49, 50, 55
        ├── 71, 77
        └── 81, 83, 90

------------------------------

generatedTree.delete(23)
generatedTree.delete(18)

------------------------------

└── 62
    ├── 33, 44
    │   ├── 11
    │   ├── 35, 38
    │   └── 49, 50, 55
    └── 79
        ├── 71, 77
        └── 81, 83, 90


------------------------------

END - TEST 74


START - TEST 75
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(89);
generatedTree.insert2pass(75);
generatedTree.insert2pass(87);
generatedTree.insert2pass(83);
------------------------------

└── 75
    ├── 45
    └── 83, 87, 89

------------------------------

generatedTree.delete(83)
generatedTree.delete(45)

------------------------------

└── 87
    ├── 75
    └── 89


------------------------------

END - TEST 75


START - TEST 76
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(30);
generatedTree.insert2pass(72);
generatedTree.insert2pass(71);
generatedTree.insert2pass(32);
generatedTree.insert2pass(85);
generatedTree.insert2pass(55);
generatedTree.insert2pass(66);
generatedTree.insert2pass(19);
generatedTree.insert2pass(46);
generatedTree.insert2pass(87);
generatedTree.insert2pass(26);
generatedTree.insert2pass(70);
generatedTree.insert2pass(77);
generatedTree.insert2pass(27);
generatedTree.insert2pass(89);
------------------------------

└── 66
    ├── 26, 32
    │   ├── 19
    │   ├── 27, 30
    │   └── 46, 55
    └── 72, 85
        ├── 70, 71
        ├── 74, 77
        └── 87, 89

------------------------------

generatedTree.delete(74)
generatedTree.delete(70)
generatedTree.delete(66)

------------------------------

└── 55
    ├── 26, 32
    │   ├── 19
    │   ├── 27, 30
    │   └── 46
    └── 72, 85
        ├── 71
        ├── 77
        └── 87, 89


------------------------------

END - TEST 76


START - TEST 77
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(64);
generatedTree.insert2pass(90);
generatedTree.insert2pass(49);
generatedTree.insert2pass(88);
generatedTree.insert2pass(41);
------------------------------

└── 64
    ├── 41, 45, 49
    └── 88, 90

------------------------------

generatedTree.delete(49)

------------------------------

└── 64
    ├── 41, 45
    └── 88, 90


------------------------------

END - TEST 77


START - TEST 78
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(76);
generatedTree.insert2pass(89);
generatedTree.insert2pass(84);
generatedTree.insert2pass(66);
generatedTree.insert2pass(26);
generatedTree.insert2pass(45);
generatedTree.insert2pass(80);
generatedTree.insert2pass(99);
generatedTree.insert2pass(94);
generatedTree.insert2pass(13);
generatedTree.insert2pass(47);
------------------------------

└── 76
    ├── 26, 65
    │   ├── 13
    │   ├── 45, 47
    │   └── 66
    └── 84
        ├── 80
        └── 89, 94, 99

------------------------------

generatedTree.delete(13)

------------------------------

└── 76
    ├── 45, 65
    │   ├── 26
    │   ├── 47
    │   └── 66
    └── 84
        ├── 80
        └── 89, 94, 99


------------------------------

END - TEST 78


START - TEST 79
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(40);
generatedTree.insert2pass(57);
generatedTree.insert2pass(59);
generatedTree.insert2pass(91);
generatedTree.insert2pass(94);
generatedTree.insert2pass(21);
generatedTree.insert2pass(77);
generatedTree.insert2pass(95);
generatedTree.insert2pass(25);
generatedTree.insert2pass(90);
generatedTree.insert2pass(92);
generatedTree.insert2pass(37);
generatedTree.insert2pass(80);
generatedTree.insert2pass(74);
generatedTree.insert2pass(70);
generatedTree.insert2pass(82);
generatedTree.insert2pass(15);
generatedTree.insert2pass(52);
------------------------------

└── 68
    ├── 25, 57
    │   ├── 15, 21
    │   ├── 37, 40, 52
    │   └── 59
    └── 80, 91
        ├── 70, 74, 77
        ├── 82, 90
        └── 92, 94, 95

------------------------------

generatedTree.delete(70)
generatedTree.delete(15)

------------------------------

└── 68
    ├── 25, 57
    │   ├── 21
    │   ├── 37, 40, 52
    │   └── 59
    └── 80, 91
        ├── 74, 77
        ├── 82, 90
        └── 92, 94, 95


------------------------------

END - TEST 79


START - TEST 80
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(60);
generatedTree.insert2pass(27);
generatedTree.insert2pass(18);
generatedTree.insert2pass(94);
------------------------------

└── 30
    ├── 18, 27
    └── 60, 94

------------------------------

generatedTree.delete(30)
generatedTree.delete(18)

------------------------------

└── 60
    ├── 27
    └── 94


------------------------------

END - TEST 80


START - TEST 81
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(51);
generatedTree.insert2pass(57);
generatedTree.insert2pass(32);
generatedTree.insert2pass(21);
generatedTree.insert2pass(97);
generatedTree.insert2pass(96);
generatedTree.insert2pass(64);
generatedTree.insert2pass(88);
generatedTree.insert2pass(46);
generatedTree.insert2pass(84);
generatedTree.insert2pass(12);
generatedTree.insert2pass(68);
generatedTree.insert2pass(98);
generatedTree.insert2pass(48);
generatedTree.insert2pass(75);
------------------------------

└── 57
    ├── 32
    │   ├── 12, 21
    │   └── 46, 48, 51
    └── 64, 84, 96
        ├── 62
        ├── 68, 75
        ├── 88
        └── 97, 98

------------------------------

generatedTree.delete(88)
generatedTree.delete(68)

------------------------------

└── 57
    ├── 32
    │   ├── 12, 21
    │   └── 46, 48, 51
    └── 75, 96
        ├── 62, 64
        ├── 84
        └── 97, 98


------------------------------

END - TEST 81


START - TEST 82
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(60);
generatedTree.insert2pass(96);
generatedTree.insert2pass(62);
generatedTree.insert2pass(33);
generatedTree.insert2pass(21);
generatedTree.insert2pass(43);
generatedTree.insert2pass(46);
generatedTree.insert2pass(17);
generatedTree.insert2pass(55);
generatedTree.insert2pass(88);
generatedTree.insert2pass(45);
generatedTree.insert2pass(91);
generatedTree.insert2pass(93);
generatedTree.insert2pass(13);
generatedTree.insert2pass(48);
generatedTree.insert2pass(69);
generatedTree.insert2pass(90);
------------------------------

└── 46
    ├── 33
    │   ├── 13, 17, 21
    │   └── 43, 45
    └── 60, 88, 93
        ├── 48, 53, 55
        ├── 62, 69
        ├── 90, 91
        └── 96

------------------------------

generatedTree.delete(88)

------------------------------

└── 46
    ├── 33
    │   ├── 13, 17, 21
    │   └── 43, 45
    └── 60, 69, 93
        ├── 48, 53, 55
        ├── 62
        ├── 90, 91
        └── 96


------------------------------

END - TEST 82


START - TEST 83
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(57);
generatedTree.insert2pass(35);
generatedTree.insert2pass(58);
generatedTree.insert2pass(26);
generatedTree.insert2pass(46);
generatedTree.insert2pass(88);
generatedTree.insert2pass(43);
generatedTree.insert2pass(70);
generatedTree.insert2pass(52);
generatedTree.insert2pass(12);
generatedTree.insert2pass(95);
generatedTree.insert2pass(92);
generatedTree.insert2pass(93);
generatedTree.insert2pass(38);
------------------------------

└── 57
    ├── 35, 46
    │   ├── 12, 26, 34
    │   ├── 38, 43
    │   └── 52
    └── 70, 92
        ├── 58
        ├── 88
        └── 93, 95

------------------------------

generatedTree.delete(93)
generatedTree.delete(70)
generatedTree.delete(88)

------------------------------

└── 46
    ├── 35
    │   ├── 12, 26, 34
    │   └── 38, 43
    └── 57, 92
        ├── 52
        ├── 58
        └── 95


------------------------------

END - TEST 83


START - TEST 84
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(63);
generatedTree.insert2pass(85);
generatedTree.insert2pass(25);
generatedTree.insert2pass(89);
generatedTree.insert2pass(49);
generatedTree.insert2pass(20);
generatedTree.insert2pass(90);
generatedTree.insert2pass(11);
generatedTree.insert2pass(70);
generatedTree.insert2pass(74);
generatedTree.insert2pass(78);
generatedTree.insert2pass(75);
------------------------------

└── 63
    ├── 49
    │   ├── 11, 20, 25
    │   └── 57
    └── 74, 89
        ├── 70
        ├── 75, 78, 85
        └── 90

------------------------------

generatedTree.delete(90)

------------------------------

└── 63
    ├── 49
    │   ├── 11, 20, 25
    │   └── 57
    └── 74, 85
        ├── 70
        ├── 75, 78
        └── 89


------------------------------

END - TEST 84


START - TEST 85
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(91);
generatedTree.insert2pass(67);
generatedTree.insert2pass(18);
generatedTree.insert2pass(13);
generatedTree.insert2pass(63);
generatedTree.insert2pass(57);
generatedTree.insert2pass(25);
generatedTree.insert2pass(66);
generatedTree.insert2pass(48);
generatedTree.insert2pass(53);
generatedTree.insert2pass(86);
generatedTree.insert2pass(56);
generatedTree.insert2pass(14);
generatedTree.insert2pass(51);
generatedTree.insert2pass(65);
generatedTree.insert2pass(98);
generatedTree.insert2pass(72);
generatedTree.insert2pass(26);
generatedTree.insert2pass(19);
generatedTree.insert2pass(55);
------------------------------

└── 61
    ├── 18, 48, 56
    │   ├── 13, 14
    │   ├── 19, 25, 26
    │   ├── 51, 53, 55
    │   └── 57
    └── 67, 91
        ├── 63, 65, 66
        ├── 72, 86
        └── 98

------------------------------

generatedTree.delete(55)

------------------------------

└── 61
    ├── 18, 48, 56
    │   ├── 13, 14
    │   ├── 19, 25, 26
    │   ├── 51, 53
    │   └── 57
    └── 67, 91
        ├── 63, 65, 66
        ├── 72, 86
        └── 98


------------------------------

END - TEST 85


START - TEST 86
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(41);
generatedTree.insert2pass(93);
generatedTree.insert2pass(12);
generatedTree.insert2pass(39);
generatedTree.insert2pass(87);
generatedTree.insert2pass(91);
generatedTree.insert2pass(33);
generatedTree.insert2pass(44);
------------------------------

└── 41, 91
    ├── 12, 33, 39
    ├── 44, 87
    └── 93

------------------------------

generatedTree.delete(44)

------------------------------

└── 41, 91
    ├── 12, 33, 39
    ├── 87
    └── 93


------------------------------

END - TEST 86


START - TEST 87
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(29);
generatedTree.insert2pass(42);
generatedTree.insert2pass(19);
generatedTree.insert2pass(70);
generatedTree.insert2pass(56);
generatedTree.insert2pass(48);
generatedTree.insert2pass(57);
generatedTree.insert2pass(44);
generatedTree.insert2pass(15);
------------------------------

└── 42, 56, 70
    ├── 15, 19, 29
    ├── 44, 48
    ├── 57
    └── 78

------------------------------

generatedTree.delete(78)

------------------------------

└── 42, 56
    ├── 15, 19, 29
    ├── 44, 48
    └── 57, 70


------------------------------

END - TEST 87


START - TEST 88
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(17);
generatedTree.insert2pass(93);
generatedTree.insert2pass(19);
generatedTree.insert2pass(33);
generatedTree.insert2pass(35);
generatedTree.insert2pass(59);
------------------------------

└── 19, 57
    ├── 17
    ├── 33, 35
    └── 59, 93

------------------------------

generatedTree.delete(93)
generatedTree.delete(33)
generatedTree.delete(59)

------------------------------

└── 19
    ├── 17
    └── 35, 57


------------------------------

END - TEST 88


START - TEST 89
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(20);
generatedTree.insert2pass(84);
generatedTree.insert2pass(74);
generatedTree.insert2pass(61);
generatedTree.insert2pass(90);
generatedTree.insert2pass(58);
generatedTree.insert2pass(57);
generatedTree.insert2pass(13);
generatedTree.insert2pass(82);
generatedTree.insert2pass(80);
generatedTree.insert2pass(83);
generatedTree.insert2pass(17);
generatedTree.insert2pass(43);
generatedTree.insert2pass(92);
generatedTree.insert2pass(30);
------------------------------

└── 74
    ├── 20, 58
    │   ├── 12, 13, 17
    │   ├── 30, 43, 57
    │   └── 61
    └── 84
        ├── 80, 82, 83
        └── 90, 92

------------------------------

generatedTree.delete(74)
generatedTree.delete(61)

------------------------------

└── 58
    ├── 20, 43
    │   ├── 12, 13, 17
    │   ├── 30
    │   └── 57
    └── 84
        ├── 80, 82, 83
        └── 90, 92


------------------------------

END - TEST 89


START - TEST 90
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(14);
generatedTree.insert2pass(92);
generatedTree.insert2pass(80);
generatedTree.insert2pass(49);
generatedTree.insert2pass(51);
generatedTree.insert2pass(66);
generatedTree.insert2pass(50);
generatedTree.insert2pass(79);
generatedTree.insert2pass(99);
generatedTree.insert2pass(68);
generatedTree.insert2pass(63);
generatedTree.insert2pass(54);
generatedTree.insert2pass(65);
generatedTree.insert2pass(37);
------------------------------

└── 51
    ├── 49
    │   ├── 14, 37
    │   └── 50
    └── 63, 68, 80
        ├── 54
        ├── 65, 66
        ├── 79
        └── 92, 99

------------------------------

generatedTree.delete(65)
generatedTree.delete(37)

------------------------------

└── 63
    ├── 49, 51
    │   ├── 14
    │   ├── 50
    │   └── 54
    └── 68, 80
        ├── 66
        ├── 79
        └── 92, 99


------------------------------

END - TEST 90


START - TEST 91
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(30);
generatedTree.insert2pass(33);
generatedTree.insert2pass(46);
generatedTree.insert2pass(67);
generatedTree.insert2pass(55);
generatedTree.insert2pass(90);
------------------------------

└── 31, 46
    ├── 30
    ├── 33
    └── 55, 67, 90

------------------------------

generatedTree.delete(90)

------------------------------

└── 31, 46
    ├── 30
    ├── 33
    └── 55, 67


------------------------------

END - TEST 91


START - TEST 92
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(97);
generatedTree.insert2pass(84);
generatedTree.insert2pass(50);
generatedTree.insert2pass(27);
generatedTree.insert2pass(82);
generatedTree.insert2pass(48);
generatedTree.insert2pass(83);
generatedTree.insert2pass(15);
generatedTree.insert2pass(87);
generatedTree.insert2pass(23);
generatedTree.insert2pass(78);
generatedTree.insert2pass(38);
generatedTree.insert2pass(57);
generatedTree.insert2pass(36);
generatedTree.insert2pass(22);
generatedTree.insert2pass(75);
generatedTree.insert2pass(72);
generatedTree.insert2pass(32);
generatedTree.insert2pass(35);
generatedTree.insert2pass(17);
------------------------------

└── 50
    ├── 23, 27, 38
    │   ├── 15, 17, 22
    │   ├── 24
    │   ├── 32, 35, 36
    │   └── 48
    └── 75, 82, 84
        ├── 57, 72
        ├── 78
        ├── 83
        └── 87, 97

------------------------------

generatedTree.delete(82)
generatedTree.delete(72)
generatedTree.delete(97)

------------------------------

└── 50
    ├── 23, 27, 38
    │   ├── 15, 17, 22
    │   ├── 24
    │   ├── 32, 35, 36
    │   └── 48
    └── 75, 84
        ├── 57
        ├── 78, 83
        └── 87


------------------------------

END - TEST 92


START - TEST 93
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(80);
generatedTree.insert2pass(33);
generatedTree.insert2pass(34);
generatedTree.insert2pass(22);
generatedTree.insert2pass(11);
------------------------------

└── 34
    ├── 11, 22, 33
    └── 80

------------------------------

generatedTree.delete(11)
generatedTree.delete(33)

------------------------------

└── 34
    ├── 22
    └── 80


------------------------------

END - TEST 93


START - TEST 94
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(68);
generatedTree.insert2pass(44);
generatedTree.insert2pass(99);
generatedTree.insert2pass(69);
generatedTree.insert2pass(49);
generatedTree.insert2pass(12);
generatedTree.insert2pass(35);
generatedTree.insert2pass(26);
------------------------------

└── 20, 44, 69
    ├── 12
    ├── 26, 35
    ├── 49, 68
    └── 99

------------------------------

generatedTree.delete(99)
generatedTree.delete(69)

------------------------------

└── 20, 44
    ├── 12
    ├── 26, 35
    └── 49, 68


------------------------------

END - TEST 94


START - TEST 95
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(35);
generatedTree.insert2pass(28);
generatedTree.insert2pass(58);
generatedTree.insert2pass(12);
generatedTree.insert2pass(95);
generatedTree.insert2pass(19);
generatedTree.insert2pass(74);
generatedTree.insert2pass(86);
------------------------------

└── 35, 89
    ├── 12, 19, 28
    ├── 58, 74, 86
    └── 95

------------------------------

generatedTree.delete(35)
generatedTree.delete(58)
generatedTree.delete(74)

------------------------------

└── 28, 89
    ├── 12, 19
    ├── 86
    └── 95


------------------------------

END - TEST 95


START - TEST 96
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(11);
generatedTree.insert2pass(21);
generatedTree.insert2pass(80);
generatedTree.insert2pass(96);
generatedTree.insert2pass(81);
generatedTree.insert2pass(39);
generatedTree.insert2pass(88);
generatedTree.insert2pass(28);
generatedTree.insert2pass(92);
generatedTree.insert2pass(99);
generatedTree.insert2pass(98);
generatedTree.insert2pass(78);
------------------------------

└── 80
    ├── 21, 39
    │   ├── 11
    │   ├── 28
    │   └── 56, 78
    └── 88, 96
        ├── 81
        ├── 92
        └── 98, 99

------------------------------

generatedTree.delete(92)

------------------------------

└── 80
    ├── 21, 39
    │   ├── 11
    │   ├── 28
    │   └── 56, 78
    └── 88, 98
        ├── 81
        ├── 96
        └── 99


------------------------------

END - TEST 96


START - TEST 97
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(56);
generatedTree.insert2pass(24);
generatedTree.insert2pass(41);
generatedTree.insert2pass(16);
generatedTree.insert2pass(65);
generatedTree.insert2pass(59);
generatedTree.insert2pass(73);
generatedTree.insert2pass(33);
generatedTree.insert2pass(96);
generatedTree.insert2pass(46);
generatedTree.insert2pass(88);
generatedTree.insert2pass(91);
generatedTree.insert2pass(52);
generatedTree.insert2pass(55);
------------------------------

└── 56
    ├── 24, 41
    │   ├── 16
    │   ├── 33
    │   └── 46, 52, 55
    └── 61, 73
        ├── 59
        ├── 65
        └── 88, 91, 96

------------------------------

generatedTree.delete(96)

------------------------------

└── 56
    ├── 24, 41
    │   ├── 16
    │   ├── 33
    │   └── 46, 52, 55
    └── 61, 73
        ├── 59
        ├── 65
        └── 88, 91


------------------------------

END - TEST 97


START - TEST 98
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(94);
generatedTree.insert2pass(89);
generatedTree.insert2pass(71);
generatedTree.insert2pass(88);
generatedTree.insert2pass(25);
generatedTree.insert2pass(44);
generatedTree.insert2pass(75);
generatedTree.insert2pass(36);
generatedTree.insert2pass(43);
generatedTree.insert2pass(26);
generatedTree.insert2pass(51);
generatedTree.insert2pass(97);
------------------------------

└── 71
    ├── 36, 44
    │   ├── 25, 26
    │   ├── 43
    │   └── 51, 62
    └── 89
        ├── 75, 88
        └── 94, 97

------------------------------

generatedTree.delete(88)

------------------------------

└── 44
    ├── 36
    │   ├── 25, 26
    │   └── 43
    └── 71, 89
        ├── 51, 62
        ├── 75
        └── 94, 97


------------------------------

END - TEST 98


START - TEST 99
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(97);
generatedTree.insert2pass(14);
generatedTree.insert2pass(28);
generatedTree.insert2pass(27);
generatedTree.insert2pass(82);
generatedTree.insert2pass(76);
generatedTree.insert2pass(32);
generatedTree.insert2pass(48);
generatedTree.insert2pass(58);
------------------------------

└── 28, 48, 82
    ├── 14, 27
    ├── 32
    ├── 58, 76
    └── 97

------------------------------

generatedTree.delete(48)

------------------------------

└── 28, 58, 82
    ├── 14, 27
    ├── 32
    ├── 76
    └── 97


------------------------------

END - TEST 99


START - TEST 100
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(50);
generatedTree.insert2pass(83);
generatedTree.insert2pass(96);
generatedTree.insert2pass(65);
generatedTree.insert2pass(16);
generatedTree.insert2pass(39);
generatedTree.insert2pass(25);
generatedTree.insert2pass(76);
generatedTree.insert2pass(72);
generatedTree.insert2pass(54);
generatedTree.insert2pass(68);
generatedTree.insert2pass(18);
generatedTree.insert2pass(75);
generatedTree.insert2pass(35);
generatedTree.insert2pass(67);
generatedTree.insert2pass(22);
generatedTree.insert2pass(63);
------------------------------

└── 50
    ├── 18, 26
    │   ├── 16
    │   ├── 22, 25
    │   └── 35, 39
    └── 65, 72, 83
        ├── 54, 63
        ├── 67, 68
        ├── 75, 76
        └── 96

------------------------------

generatedTree.delete(65)
generatedTree.delete(16)
generatedTree.delete(26)

------------------------------

└── 50
    ├── 22, 35
    │   ├── 18
    │   ├── 25
    │   └── 39
    └── 63, 72, 83
        ├── 54
        ├── 67, 68
        ├── 75, 76
        └── 96


------------------------------

END - TEST 100


START - TEST 101
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(53);
generatedTree.insert2pass(30);
generatedTree.insert2pass(99);
generatedTree.insert2pass(79);
generatedTree.insert2pass(96);
generatedTree.insert2pass(74);
generatedTree.insert2pass(84);
generatedTree.insert2pass(44);
------------------------------

└── 33, 79
    ├── 30
    ├── 44, 53, 74
    └── 84, 96, 99

------------------------------

generatedTree.delete(79)
generatedTree.delete(30)
generatedTree.delete(53)

------------------------------

└── 44, 84
    ├── 33
    ├── 74
    └── 96, 99


------------------------------

END - TEST 101


START - TEST 102
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(94);
generatedTree.insert2pass(26);
generatedTree.insert2pass(20);
generatedTree.insert2pass(59);
generatedTree.insert2pass(98);
generatedTree.insert2pass(19);
generatedTree.insert2pass(22);
generatedTree.insert2pass(52);
generatedTree.insert2pass(14);
generatedTree.insert2pass(37);
generatedTree.insert2pass(90);
generatedTree.insert2pass(71);
generatedTree.insert2pass(16);
generatedTree.insert2pass(51);
generatedTree.insert2pass(24);
generatedTree.insert2pass(44);
generatedTree.insert2pass(42);
generatedTree.insert2pass(58);
------------------------------

└── 29, 52
    ├── 20
    │   ├── 14, 16, 19
    │   └── 22, 24, 26
    ├── 44
    │   ├── 37, 42
    │   └── 51
    └── 71, 94
        ├── 58, 59
        ├── 90
        └── 98

------------------------------

generatedTree.delete(19)
generatedTree.delete(22)

------------------------------

└── 52
    ├── 20, 29, 44
    │   ├── 14, 16
    │   ├── 24, 26
    │   ├── 37, 42
    │   └── 51
    └── 71, 94
        ├── 58, 59
        ├── 90
        └── 98


------------------------------

END - TEST 102


START - TEST 103
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(98);
generatedTree.insert2pass(27);
generatedTree.insert2pass(93);
generatedTree.insert2pass(77);
generatedTree.insert2pass(46);
generatedTree.insert2pass(19);
generatedTree.insert2pass(63);
generatedTree.insert2pass(36);
generatedTree.insert2pass(90);
generatedTree.insert2pass(61);
generatedTree.insert2pass(92);
generatedTree.insert2pass(44);
generatedTree.insert2pass(31);
------------------------------

└── 63
    ├── 27, 45
    │   ├── 19
    │   ├── 31, 36, 44
    │   └── 46, 61
    └── 93
        ├── 77, 90, 92
        └── 98

------------------------------

generatedTree.delete(31)

------------------------------

└── 63
    ├── 27, 45
    │   ├── 19
    │   ├── 36, 44
    │   └── 46, 61
    └── 93
        ├── 77, 90, 92
        └── 98


------------------------------

END - TEST 103


START - TEST 104
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(48);
generatedTree.insert2pass(50);
generatedTree.insert2pass(61);
generatedTree.insert2pass(70);
generatedTree.insert2pass(81);
generatedTree.insert2pass(42);
generatedTree.insert2pass(58);
generatedTree.insert2pass(98);
generatedTree.insert2pass(56);
------------------------------

└── 50, 70
    ├── 42, 48
    ├── 56, 58, 61
    └── 81, 98

------------------------------

generatedTree.delete(58)

------------------------------

└── 50, 70
    ├── 42, 48
    ├── 56, 61
    └── 81, 98


------------------------------

END - TEST 104


START - TEST 105
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(70);
generatedTree.insert2pass(26);
generatedTree.insert2pass(16);
generatedTree.insert2pass(15);
generatedTree.insert2pass(14);
generatedTree.insert2pass(38);
generatedTree.insert2pass(72);
generatedTree.insert2pass(52);
generatedTree.insert2pass(63);
generatedTree.insert2pass(12);
------------------------------

└── 15, 26, 70
    ├── 11, 12, 14
    ├── 16
    ├── 38, 52, 63
    └── 72

------------------------------

generatedTree.delete(72)
generatedTree.delete(15)

------------------------------

└── 14, 26, 63
    ├── 11, 12
    ├── 16
    ├── 38, 52
    └── 70


------------------------------

END - TEST 105


START - TEST 106
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(26);
generatedTree.insert2pass(59);
generatedTree.insert2pass(73);
generatedTree.insert2pass(61);
------------------------------

└── 26
    ├── 24
    └── 59, 61, 73

------------------------------

generatedTree.delete(59)

------------------------------

└── 26
    ├── 24
    └── 61, 73


------------------------------

END - TEST 106


START - TEST 107
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(50);
generatedTree.insert2pass(94);
generatedTree.insert2pass(36);
generatedTree.insert2pass(54);
generatedTree.insert2pass(28);
generatedTree.insert2pass(33);
generatedTree.insert2pass(17);
generatedTree.insert2pass(96);
------------------------------

└── 33, 50, 56
    ├── 17, 28
    ├── 36
    ├── 54
    └── 94, 96

------------------------------

generatedTree.delete(17)
generatedTree.delete(54)
generatedTree.delete(33)

------------------------------

└── 50, 94
    ├── 28, 36
    ├── 56
    └── 96


------------------------------

END - TEST 107


START - TEST 108
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(81);
generatedTree.insert2pass(83);
generatedTree.insert2pass(50);
generatedTree.insert2pass(62);
generatedTree.insert2pass(94);
generatedTree.insert2pass(78);
generatedTree.insert2pass(69);
generatedTree.insert2pass(84);
generatedTree.insert2pass(93);
------------------------------

└── 62, 81, 84
    ├── 50
    ├── 69, 78
    ├── 83
    └── 93, 94

------------------------------

generatedTree.delete(78)

------------------------------

└── 62, 81, 84
    ├── 50
    ├── 69
    ├── 83
    └── 93, 94


------------------------------

END - TEST 108


START - TEST 109
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(47);
generatedTree.insert2pass(43);
generatedTree.insert2pass(15);
generatedTree.insert2pass(12);
generatedTree.insert2pass(85);
generatedTree.insert2pass(75);
generatedTree.insert2pass(65);
generatedTree.insert2pass(60);
generatedTree.insert2pass(41);
generatedTree.insert2pass(86);
------------------------------

└── 15, 43, 75
    ├── 12
    ├── 34, 41
    ├── 47, 60, 65
    └── 85, 86

------------------------------

generatedTree.delete(75)

------------------------------

└── 15, 43, 65
    ├── 12
    ├── 34, 41
    ├── 47, 60
    └── 85, 86


------------------------------

END - TEST 109


START - TEST 110
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(63);
generatedTree.insert2pass(86);
generatedTree.insert2pass(39);
generatedTree.insert2pass(17);
------------------------------

└── 79
    ├── 17, 39, 63
    └── 86

------------------------------

generatedTree.delete(39)
generatedTree.delete(86)

------------------------------

└── 63
    ├── 17
    └── 79


------------------------------

END - TEST 110


START - TEST 111
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(60);
generatedTree.insert2pass(61);
generatedTree.insert2pass(27);
generatedTree.insert2pass(41);
generatedTree.insert2pass(92);
generatedTree.insert2pass(82);
generatedTree.insert2pass(95);
generatedTree.insert2pass(42);
generatedTree.insert2pass(45);
generatedTree.insert2pass(31);
generatedTree.insert2pass(11);
generatedTree.insert2pass(53);
generatedTree.insert2pass(39);
generatedTree.insert2pass(54);
generatedTree.insert2pass(38);
generatedTree.insert2pass(28);
generatedTree.insert2pass(97);
generatedTree.insert2pass(83);
generatedTree.insert2pass(34);
------------------------------

└── 41, 61
    ├── 27, 38
    │   ├── 11
    │   ├── 28, 31, 34
    │   └── 39
    ├── 45
    │   ├── 42
    │   └── 53, 54, 60
    └── 92
        ├── 82, 83
        └── 95, 97, 98

------------------------------

generatedTree.delete(45)
generatedTree.delete(98)

------------------------------

└── 38, 53
    ├── 27
    │   ├── 11
    │   └── 28, 31, 34
    ├── 41
    │   ├── 39
    │   └── 42
    └── 61, 92
        ├── 54, 60
        ├── 82, 83
        └── 95, 97


------------------------------

END - TEST 111


START - TEST 112
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(57);
generatedTree.insert2pass(50);
generatedTree.insert2pass(21);
generatedTree.insert2pass(12);
generatedTree.insert2pass(70);
generatedTree.insert2pass(65);
generatedTree.insert2pass(36);
generatedTree.insert2pass(89);
generatedTree.insert2pass(66);
generatedTree.insert2pass(38);
------------------------------

└── 21, 50, 65
    ├── 12
    ├── 34, 36, 38
    ├── 57
    └── 66, 70, 89

------------------------------

generatedTree.delete(21)
generatedTree.delete(65)

------------------------------

└── 34, 50, 66
    ├── 12
    ├── 36, 38
    ├── 57
    └── 70, 89


------------------------------

END - TEST 112


START - TEST 113
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(28);
generatedTree.insert2pass(54);
generatedTree.insert2pass(88);
generatedTree.insert2pass(67);
generatedTree.insert2pass(19);
generatedTree.insert2pass(35);
generatedTree.insert2pass(86);
generatedTree.insert2pass(39);
generatedTree.insert2pass(55);
generatedTree.insert2pass(23);
generatedTree.insert2pass(40);
generatedTree.insert2pass(27);
generatedTree.insert2pass(15);
generatedTree.insert2pass(17);
generatedTree.insert2pass(21);
generatedTree.insert2pass(32);
------------------------------

└── 23, 54
    ├── 17
    │   ├── 15
    │   └── 19, 21
    ├── 28, 39
    │   ├── 27
    │   ├── 32, 35
    │   └── 40
    └── 73
        ├── 55, 67
        └── 86, 88

------------------------------

generatedTree.delete(19)

------------------------------

└── 28, 54
    ├── 17, 23
    │   ├── 15
    │   ├── 21
    │   └── 27
    ├── 39
    │   ├── 32, 35
    │   └── 40
    └── 73
        ├── 55, 67
        └── 86, 88


------------------------------

END - TEST 113


START - TEST 114
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(41);
generatedTree.insert2pass(86);
generatedTree.insert2pass(87);
generatedTree.insert2pass(67);
generatedTree.insert2pass(74);
generatedTree.insert2pass(92);
generatedTree.insert2pass(79);
------------------------------

└── 67, 86
    ├── 41
    ├── 74, 79
    └── 87, 92

------------------------------

generatedTree.delete(74)
generatedTree.delete(87)
generatedTree.delete(79)

------------------------------

└── 86
    ├── 41, 67
    └── 92


------------------------------

END - TEST 114


START - TEST 115
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(79);
generatedTree.insert2pass(70);
generatedTree.insert2pass(77);
generatedTree.insert2pass(60);
generatedTree.insert2pass(56);
generatedTree.insert2pass(36);
generatedTree.insert2pass(74);
generatedTree.insert2pass(48);
generatedTree.insert2pass(61);
generatedTree.insert2pass(12);
generatedTree.insert2pass(91);
------------------------------

└── 60
    ├── 43
    │   ├── 12, 36, 38
    │   └── 48, 56
    └── 70, 77
        ├── 61, 68
        ├── 74
        └── 79, 91

------------------------------

generatedTree.delete(74)

------------------------------

└── 60
    ├── 43
    │   ├── 12, 36, 38
    │   └── 48, 56
    └── 68, 77
        ├── 61
        ├── 70
        └── 79, 91


------------------------------

END - TEST 115


START - TEST 116
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(80);
generatedTree.insert2pass(52);
generatedTree.insert2pass(55);
generatedTree.insert2pass(18);
generatedTree.insert2pass(34);
generatedTree.insert2pass(28);
generatedTree.insert2pass(49);
generatedTree.insert2pass(78);
generatedTree.insert2pass(95);
generatedTree.insert2pass(91);
generatedTree.insert2pass(17);
generatedTree.insert2pass(76);
generatedTree.insert2pass(37);
generatedTree.insert2pass(26);
generatedTree.insert2pass(69);
generatedTree.insert2pass(90);
------------------------------

└── 55
    ├── 18, 34
    │   ├── 17
    │   ├── 26, 28
    │   └── 37, 49, 52
    └── 80
        ├── 69, 76, 78
        └── 90, 91, 95

------------------------------

generatedTree.delete(18)

------------------------------

└── 55
    ├── 26, 34
    │   ├── 17
    │   ├── 28
    │   └── 37, 49, 52
    └── 80
        ├── 69, 76, 78
        └── 90, 91, 95


------------------------------

END - TEST 116


START - TEST 117
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(99);
generatedTree.insert2pass(62);
generatedTree.insert2pass(90);
generatedTree.insert2pass(96);
generatedTree.insert2pass(73);
generatedTree.insert2pass(78);
generatedTree.insert2pass(95);
generatedTree.insert2pass(77);
generatedTree.insert2pass(98);
generatedTree.insert2pass(42);
generatedTree.insert2pass(57);
generatedTree.insert2pass(65);
generatedTree.insert2pass(29);
------------------------------

└── 78
    ├── 42, 62
    │   ├── 13, 29
    │   ├── 57
    │   └── 65, 73, 77
    └── 96
        ├── 90, 95
        └── 98, 99

------------------------------

generatedTree.delete(42)

------------------------------

└── 78
    ├── 29, 62
    │   ├── 13
    │   ├── 57
    │   └── 65, 73, 77
    └── 96
        ├── 90, 95
        └── 98, 99


------------------------------

END - TEST 117


START - TEST 118
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(67);
generatedTree.insert2pass(42);
generatedTree.insert2pass(22);
generatedTree.insert2pass(80);
generatedTree.insert2pass(26);
generatedTree.insert2pass(34);
generatedTree.insert2pass(61);
generatedTree.insert2pass(84);
generatedTree.insert2pass(45);
------------------------------

└── 26, 56, 67
    ├── 22
    ├── 34, 42, 45
    ├── 61
    └── 80, 84

------------------------------

generatedTree.delete(61)

------------------------------

└── 26, 45, 67
    ├── 22
    ├── 34, 42
    ├── 56
    └── 80, 84


------------------------------

END - TEST 118


START - TEST 119
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(25);
generatedTree.insert2pass(56);
generatedTree.insert2pass(46);
generatedTree.insert2pass(42);
generatedTree.insert2pass(15);
generatedTree.insert2pass(91);
generatedTree.insert2pass(44);
generatedTree.insert2pass(81);
generatedTree.insert2pass(69);
generatedTree.insert2pass(51);
generatedTree.insert2pass(41);
------------------------------

└── 40, 46, 81
    ├── 15, 25
    ├── 41, 42, 44
    ├── 51, 56, 69
    └── 91

------------------------------

generatedTree.delete(15)

------------------------------

└── 40, 46, 81
    ├── 25
    ├── 41, 42, 44
    ├── 51, 56, 69
    └── 91


------------------------------

END - TEST 119


START - TEST 120
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(72);
generatedTree.insert2pass(90);
generatedTree.insert2pass(13);
generatedTree.insert2pass(67);
generatedTree.insert2pass(19);
generatedTree.insert2pass(22);
generatedTree.insert2pass(85);
generatedTree.insert2pass(57);
generatedTree.insert2pass(24);
generatedTree.insert2pass(56);
generatedTree.insert2pass(65);
generatedTree.insert2pass(92);
generatedTree.insert2pass(76);
generatedTree.insert2pass(79);
generatedTree.insert2pass(78);
generatedTree.insert2pass(50);
------------------------------

└── 46, 72
    ├── 19
    │   ├── 13
    │   └── 22, 24
    ├── 57
    │   ├── 50, 56
    │   └── 65, 67
    └── 79, 90
        ├── 76, 78
        ├── 85
        └── 92

------------------------------

generatedTree.delete(65)
generatedTree.delete(85)

------------------------------

└── 46, 72
    ├── 19
    │   ├── 13
    │   └── 22, 24
    ├── 57
    │   ├── 50, 56
    │   └── 67
    └── 78, 90
        ├── 76
        ├── 79
        └── 92


------------------------------

END - TEST 120


START - TEST 121
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(92);
generatedTree.insert2pass(67);
generatedTree.insert2pass(53);
generatedTree.insert2pass(65);
generatedTree.insert2pass(98);
generatedTree.insert2pass(83);
generatedTree.insert2pass(34);
generatedTree.insert2pass(41);
generatedTree.insert2pass(51);
generatedTree.insert2pass(37);
generatedTree.insert2pass(22);
generatedTree.insert2pass(91);
generatedTree.insert2pass(69);
generatedTree.insert2pass(81);
generatedTree.insert2pass(62);
generatedTree.insert2pass(72);
generatedTree.insert2pass(90);
------------------------------

└── 53
    ├── 41
    │   ├── 22, 34, 37
    │   └── 50, 51
    └── 67, 83, 92
        ├── 62, 65
        ├── 69, 72, 81
        ├── 90, 91
        └── 98

------------------------------

generatedTree.delete(92)
generatedTree.delete(22)

------------------------------

└── 67
    ├── 41, 53
    │   ├── 34, 37
    │   ├── 50, 51
    │   └── 62, 65
    └── 83, 91
        ├── 69, 72, 81
        ├── 90
        └── 98


------------------------------

END - TEST 121


START - TEST 122
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(12);
generatedTree.insert2pass(98);
generatedTree.insert2pass(49);
generatedTree.insert2pass(68);
generatedTree.insert2pass(70);
generatedTree.insert2pass(18);
generatedTree.insert2pass(19);
generatedTree.insert2pass(47);
generatedTree.insert2pass(67);
generatedTree.insert2pass(85);
------------------------------

└── 49
    ├── 18
    │   ├── 12
    │   └── 19, 47
    └── 68, 96
        ├── 67
        ├── 70, 85
        └── 98

------------------------------

generatedTree.delete(47)
generatedTree.delete(19)

------------------------------

└── 68
    ├── 49
    │   ├── 12, 18
    │   └── 67
    └── 96
        ├── 70, 85
        └── 98


------------------------------

END - TEST 122


START - TEST 123
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(67);
generatedTree.insert2pass(22);
generatedTree.insert2pass(69);
generatedTree.insert2pass(91);
generatedTree.insert2pass(33);
generatedTree.insert2pass(19);
generatedTree.insert2pass(18);
------------------------------

└── 22, 67
    ├── 18, 19
    ├── 33
    └── 69, 91

------------------------------

generatedTree.delete(67)
generatedTree.delete(69)
generatedTree.delete(19)

------------------------------

└── 22
    ├── 18
    └── 33, 91


------------------------------

END - TEST 123


START - TEST 124
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(39);
generatedTree.insert2pass(11);
generatedTree.insert2pass(99);
generatedTree.insert2pass(73);
generatedTree.insert2pass(70);
generatedTree.insert2pass(32);
generatedTree.insert2pass(38);
generatedTree.insert2pass(14);
generatedTree.insert2pass(82);
generatedTree.insert2pass(17);
generatedTree.insert2pass(84);
generatedTree.insert2pass(67);
generatedTree.insert2pass(23);
generatedTree.insert2pass(53);
generatedTree.insert2pass(79);
generatedTree.insert2pass(37);
generatedTree.insert2pass(77);
generatedTree.insert2pass(63);
generatedTree.insert2pass(59);
------------------------------

└── 39
    ├── 14, 32
    │   ├── 11
    │   ├── 17, 23
    │   └── 37, 38
    └── 67, 73, 84
        ├── 53, 59, 63
        ├── 70
        ├── 77, 79, 82
        └── 99

------------------------------

generatedTree.delete(14)

------------------------------

└── 39
    ├── 17, 32
    │   ├── 11
    │   ├── 23
    │   └── 37, 38
    └── 67, 73, 84
        ├── 53, 59, 63
        ├── 70
        ├── 77, 79, 82
        └── 99


------------------------------

END - TEST 124


START - TEST 125
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(57);
generatedTree.insert2pass(90);
generatedTree.insert2pass(81);
generatedTree.insert2pass(91);
generatedTree.insert2pass(42);
generatedTree.insert2pass(49);
generatedTree.insert2pass(69);
generatedTree.insert2pass(84);
generatedTree.insert2pass(80);
generatedTree.insert2pass(32);
generatedTree.insert2pass(46);
generatedTree.insert2pass(18);
generatedTree.insert2pass(65);
generatedTree.insert2pass(45);
generatedTree.insert2pass(95);
generatedTree.insert2pass(41);
------------------------------

└── 81
    ├── 42, 49, 66
    │   ├── 18, 32, 41
    │   ├── 45, 46
    │   ├── 57, 65
    │   └── 69, 80
    └── 90
        ├── 84
        └── 91, 95

------------------------------

generatedTree.delete(81)

------------------------------

└── 80
    ├── 42, 49, 66
    │   ├── 18, 32, 41
    │   ├── 45, 46
    │   ├── 57, 65
    │   └── 69
    └── 90
        ├── 84
        └── 91, 95


------------------------------

END - TEST 125


START - TEST 126
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(41);
generatedTree.insert2pass(20);
generatedTree.insert2pass(73);
generatedTree.insert2pass(63);
generatedTree.insert2pass(14);
generatedTree.insert2pass(29);
generatedTree.insert2pass(39);
generatedTree.insert2pass(24);
generatedTree.insert2pass(17);
generatedTree.insert2pass(37);
generatedTree.insert2pass(31);
generatedTree.insert2pass(51);
generatedTree.insert2pass(88);
generatedTree.insert2pass(78);
generatedTree.insert2pass(94);
generatedTree.insert2pass(35);
generatedTree.insert2pass(30);
------------------------------

└── 29, 63
    ├── 20
    │   ├── 14, 17
    │   └── 24
    ├── 37, 41
    │   ├── 30, 31, 35
    │   ├── 39
    │   └── 51
    └── 78
        ├── 73
        └── 88, 94

------------------------------

generatedTree.delete(17)

------------------------------

└── 37, 63
    ├── 20, 29
    │   ├── 14
    │   ├── 24
    │   └── 30, 31, 35
    ├── 41
    │   ├── 39
    │   └── 51
    └── 78
        ├── 73
        └── 88, 94


------------------------------

END - TEST 126


START - TEST 127
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(67);
generatedTree.insert2pass(13);
generatedTree.insert2pass(24);
generatedTree.insert2pass(58);
generatedTree.insert2pass(81);
generatedTree.insert2pass(54);
generatedTree.insert2pass(25);
generatedTree.insert2pass(96);
generatedTree.insert2pass(50);
generatedTree.insert2pass(53);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
------------------------------

└── 54
    ├── 24, 47
    │   ├── 13
    │   ├── 25, 32
    │   └── 50, 53
    └── 67
        ├── 58, 60
        └── 81, 96

------------------------------

generatedTree.delete(81)
generatedTree.delete(13)
generatedTree.delete(58)

------------------------------

└── 47
    ├── 25
    │   ├── 24
    │   └── 32
    └── 54, 67
        ├── 50, 53
        ├── 60
        └── 96


------------------------------

END - TEST 127


START - TEST 128
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(36);
generatedTree.insert2pass(15);
generatedTree.insert2pass(64);
generatedTree.insert2pass(61);
generatedTree.insert2pass(67);
generatedTree.insert2pass(54);
generatedTree.insert2pass(28);
generatedTree.insert2pass(95);
generatedTree.insert2pass(39);
generatedTree.insert2pass(72);
generatedTree.insert2pass(40);
generatedTree.insert2pass(34);
------------------------------

└── 61
    ├── 36, 54
    │   ├── 15, 28, 34
    │   ├── 39, 40
    │   └── 59
    └── 67
        ├── 64
        └── 72, 95

------------------------------

generatedTree.delete(61)
generatedTree.delete(54)
generatedTree.delete(64)

------------------------------

└── 36, 40, 67
    ├── 15, 28, 34
    ├── 39
    ├── 59
    └── 72, 95


------------------------------

END - TEST 128


START - TEST 129
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(50);
generatedTree.insert2pass(39);
generatedTree.insert2pass(22);
generatedTree.insert2pass(98);
generatedTree.insert2pass(24);
generatedTree.insert2pass(81);
generatedTree.insert2pass(60);
generatedTree.insert2pass(84);
generatedTree.insert2pass(86);
generatedTree.insert2pass(17);
generatedTree.insert2pass(37);
------------------------------

└── 24, 50, 81
    ├── 17, 22
    ├── 37, 39
    ├── 54, 60
    └── 84, 86, 98

------------------------------

generatedTree.delete(60)

------------------------------

└── 24, 50, 81
    ├── 17, 22
    ├── 37, 39
    ├── 54
    └── 84, 86, 98


------------------------------

END - TEST 129


START - TEST 130
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(32);
generatedTree.insert2pass(77);
generatedTree.insert2pass(45);
generatedTree.insert2pass(31);
generatedTree.insert2pass(21);
generatedTree.insert2pass(52);
generatedTree.insert2pass(49);
generatedTree.insert2pass(62);
------------------------------

└── 35, 52
    ├── 21, 31, 32
    ├── 45, 49
    └── 62, 77

------------------------------

generatedTree.delete(45)

------------------------------

└── 35, 52
    ├── 21, 31, 32
    ├── 49
    └── 62, 77


------------------------------

END - TEST 130


START - TEST 131
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(20);
generatedTree.insert2pass(57);
generatedTree.insert2pass(56);
generatedTree.insert2pass(48);
generatedTree.insert2pass(69);
generatedTree.insert2pass(36);
generatedTree.insert2pass(11);
generatedTree.insert2pass(58);
generatedTree.insert2pass(52);
------------------------------

└── 36, 51, 57
    ├── 11, 20
    ├── 48
    ├── 52, 56
    └── 58, 69

------------------------------

generatedTree.delete(57)

------------------------------

└── 36, 51, 56
    ├── 11, 20
    ├── 48
    ├── 52
    └── 58, 69


------------------------------

END - TEST 131


START - TEST 132
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(86);
generatedTree.insert2pass(76);
generatedTree.insert2pass(68);
generatedTree.insert2pass(65);
generatedTree.insert2pass(59);
generatedTree.insert2pass(85);
generatedTree.insert2pass(80);
generatedTree.insert2pass(66);
------------------------------

└── 68, 76
    ├── 59, 65, 66
    ├── 75
    └── 80, 85, 86

------------------------------

generatedTree.delete(76)
generatedTree.delete(85)

------------------------------

└── 68, 80
    ├── 59, 65, 66
    ├── 75
    └── 86


------------------------------

END - TEST 132


START - TEST 133
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(98);
generatedTree.insert2pass(23);
generatedTree.insert2pass(33);
generatedTree.insert2pass(13);
generatedTree.insert2pass(24);
generatedTree.insert2pass(89);
generatedTree.insert2pass(30);
generatedTree.insert2pass(96);
generatedTree.insert2pass(71);
generatedTree.insert2pass(92);
generatedTree.insert2pass(51);
generatedTree.insert2pass(85);
generatedTree.insert2pass(70);
generatedTree.insert2pass(79);
------------------------------

└── 46
    ├── 23
    │   ├── 13
    │   └── 24, 30, 33
    └── 71, 89, 96
        ├── 51, 70
        ├── 79, 85
        ├── 92
        └── 98

------------------------------

generatedTree.delete(13)
generatedTree.delete(46)
generatedTree.delete(23)

------------------------------

└── 71
    ├── 33
    │   ├── 24, 30
    │   └── 51, 70
    └── 89, 96
        ├── 79, 85
        ├── 92
        └── 98


------------------------------

END - TEST 133


START - TEST 134
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(22);
generatedTree.insert2pass(72);
generatedTree.insert2pass(11);
generatedTree.insert2pass(39);
generatedTree.insert2pass(63);
generatedTree.insert2pass(80);
------------------------------

└── 22, 72
    ├── 11
    ├── 39, 63
    └── 80, 82

------------------------------

generatedTree.delete(22)

------------------------------

└── 39, 72
    ├── 11
    ├── 63
    └── 80, 82


------------------------------

END - TEST 134


START - TEST 135
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(38);
generatedTree.insert2pass(92);
generatedTree.insert2pass(44);
generatedTree.insert2pass(47);
generatedTree.insert2pass(99);
generatedTree.insert2pass(23);
generatedTree.insert2pass(75);
generatedTree.insert2pass(73);
generatedTree.insert2pass(96);
generatedTree.insert2pass(90);
generatedTree.insert2pass(71);
generatedTree.insert2pass(79);
generatedTree.insert2pass(49);
------------------------------

└── 45, 73, 92
    ├── 23, 38, 44
    ├── 47, 49, 71
    ├── 75, 79, 90
    └── 96, 99

------------------------------

generatedTree.delete(96)

------------------------------

└── 45, 73, 92
    ├── 23, 38, 44
    ├── 47, 49, 71
    ├── 75, 79, 90
    └── 99


------------------------------

END - TEST 135


START - TEST 136
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(68);
generatedTree.insert2pass(85);
generatedTree.insert2pass(51);
------------------------------

└── 68
    ├── 51, 58
    └── 85

------------------------------

generatedTree.delete(85)
generatedTree.delete(58)

------------------------------

└── 51, 68


------------------------------

END - TEST 136


START - TEST 137
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(75);
generatedTree.insert2pass(15);
generatedTree.insert2pass(72);
generatedTree.insert2pass(93);
generatedTree.insert2pass(35);
generatedTree.insert2pass(47);
generatedTree.insert2pass(12);
generatedTree.insert2pass(19);
generatedTree.insert2pass(96);
generatedTree.insert2pass(26);
generatedTree.insert2pass(80);
generatedTree.insert2pass(77);
generatedTree.insert2pass(95);
------------------------------

└── 47
    ├── 21
    │   ├── 12, 15, 19
    │   └── 26, 35
    └── 75, 93
        ├── 72
        ├── 77, 80
        └── 95, 96

------------------------------

generatedTree.delete(80)

------------------------------

└── 47
    ├── 21
    │   ├── 12, 15, 19
    │   └── 26, 35
    └── 75, 93
        ├── 72
        ├── 77
        └── 95, 96


------------------------------

END - TEST 137


START - TEST 138
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(73);
generatedTree.insert2pass(40);
generatedTree.insert2pass(95);
generatedTree.insert2pass(88);
------------------------------

└── 40
    ├── 20
    └── 73, 88, 95

------------------------------

generatedTree.delete(95)
generatedTree.delete(20)

------------------------------

└── 73
    ├── 40
    └── 88


------------------------------

END - TEST 138


START - TEST 139
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(14);
generatedTree.insert2pass(72);
generatedTree.insert2pass(62);
generatedTree.insert2pass(26);
generatedTree.insert2pass(18);
generatedTree.insert2pass(58);
generatedTree.insert2pass(71);
generatedTree.insert2pass(92);
generatedTree.insert2pass(43);
generatedTree.insert2pass(94);
generatedTree.insert2pass(74);
generatedTree.insert2pass(12);
------------------------------

└── 26, 70, 72
    ├── 12, 14, 18
    ├── 43, 58, 62
    ├── 71
    └── 74, 92, 94

------------------------------

generatedTree.delete(26)

------------------------------

└── 18, 70, 72
    ├── 12, 14
    ├── 43, 58, 62
    ├── 71
    └── 74, 92, 94


------------------------------

END - TEST 139


START - TEST 140
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(56);
generatedTree.insert2pass(43);
generatedTree.insert2pass(97);
generatedTree.insert2pass(67);
generatedTree.insert2pass(37);
generatedTree.insert2pass(22);
generatedTree.insert2pass(58);
generatedTree.insert2pass(75);
generatedTree.insert2pass(73);
------------------------------

└── 56, 67, 86
    ├── 22, 37, 43
    ├── 58
    ├── 73, 75
    └── 97

------------------------------

generatedTree.delete(22)

------------------------------

└── 56, 67, 86
    ├── 37, 43
    ├── 58
    ├── 73, 75
    └── 97


------------------------------

END - TEST 140


START - TEST 141
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(86);
generatedTree.insert2pass(28);
generatedTree.insert2pass(75);
generatedTree.insert2pass(42);
generatedTree.insert2pass(26);
generatedTree.insert2pass(81);
generatedTree.insert2pass(11);
generatedTree.insert2pass(98);
generatedTree.insert2pass(74);
generatedTree.insert2pass(92);
generatedTree.insert2pass(43);
generatedTree.insert2pass(83);
generatedTree.insert2pass(84);
generatedTree.insert2pass(95);
generatedTree.insert2pass(62);
generatedTree.insert2pass(44);
generatedTree.insert2pass(23);
generatedTree.insert2pass(65);
------------------------------

└── 28, 75
    ├── 22
    │   ├── 11
    │   └── 23, 26
    ├── 43, 62
    │   ├── 42
    │   ├── 44
    │   └── 65, 74
    └── 86
        ├── 81, 83, 84
        └── 92, 95, 98

------------------------------

generatedTree.delete(42)

------------------------------

└── 28, 75
    ├── 22
    │   ├── 11
    │   └── 23, 26
    ├── 62
    │   ├── 43, 44
    │   └── 65, 74
    └── 86
        ├── 81, 83, 84
        └── 92, 95, 98


------------------------------

END - TEST 141


START - TEST 142
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(78);
generatedTree.insert2pass(56);
generatedTree.insert2pass(51);
generatedTree.insert2pass(26);
generatedTree.insert2pass(79);
generatedTree.insert2pass(69);
generatedTree.insert2pass(19);
generatedTree.insert2pass(80);
generatedTree.insert2pass(96);
generatedTree.insert2pass(55);
generatedTree.insert2pass(20);
generatedTree.insert2pass(82);
generatedTree.insert2pass(63);
generatedTree.insert2pass(39);
generatedTree.insert2pass(18);
generatedTree.insert2pass(67);
generatedTree.insert2pass(34);
generatedTree.insert2pass(60);
generatedTree.insert2pass(75);
------------------------------

└── 61
    ├── 20, 51
    │   ├── 18, 19
    │   ├── 26, 34, 39
    │   └── 55, 56, 60
    └── 67, 78, 80
        ├── 63
        ├── 69, 75
        ├── 79
        └── 82, 96

------------------------------

generatedTree.delete(63)

------------------------------

└── 61
    ├── 20, 51
    │   ├── 18, 19
    │   ├── 26, 34, 39
    │   └── 55, 56, 60
    └── 69, 78, 80
        ├── 67
        ├── 75
        ├── 79
        └── 82, 96


------------------------------

END - TEST 142


START - TEST 143
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(43);
generatedTree.insert2pass(82);
generatedTree.insert2pass(69);
generatedTree.insert2pass(73);
generatedTree.insert2pass(59);
generatedTree.insert2pass(21);
generatedTree.insert2pass(24);
generatedTree.insert2pass(81);
generatedTree.insert2pass(96);
generatedTree.insert2pass(77);
generatedTree.insert2pass(29);
generatedTree.insert2pass(72);
generatedTree.insert2pass(34);
generatedTree.insert2pass(33);
generatedTree.insert2pass(76);
generatedTree.insert2pass(30);
generatedTree.insert2pass(11);
generatedTree.insert2pass(27);
generatedTree.insert2pass(86);
generatedTree.insert2pass(38);
generatedTree.insert2pass(28);
------------------------------

└── 33, 69
    ├── 24, 29
    │   ├── 11, 21
    │   ├── 27, 28
    │   └── 30
    ├── 43
    │   ├── 34, 38
    │   └── 59
    └── 75, 82
        ├── 72, 73
        ├── 76, 77, 81
        └── 86, 96

------------------------------

generatedTree.delete(96)
generatedTree.delete(28)

------------------------------

└── 33, 69
    ├── 24, 29
    │   ├── 11, 21
    │   ├── 27
    │   └── 30
    ├── 43
    │   ├── 34, 38
    │   └── 59
    └── 75, 82
        ├── 72, 73
        ├── 76, 77, 81
        └── 86


------------------------------

END - TEST 143


START - TEST 144
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(24);
generatedTree.insert2pass(72);
generatedTree.insert2pass(14);
generatedTree.insert2pass(12);
generatedTree.insert2pass(32);
------------------------------

└── 14, 72
    ├── 12
    ├── 24, 32
    └── 84

------------------------------

generatedTree.delete(32)
generatedTree.delete(24)

------------------------------

└── 72
    ├── 12, 14
    └── 84


------------------------------

END - TEST 144


START - TEST 145
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(12);
generatedTree.insert2pass(61);
generatedTree.insert2pass(32);
generatedTree.insert2pass(25);
generatedTree.insert2pass(82);
generatedTree.insert2pass(94);
generatedTree.insert2pass(65);
generatedTree.insert2pass(95);
generatedTree.insert2pass(64);
generatedTree.insert2pass(13);
generatedTree.insert2pass(35);
generatedTree.insert2pass(62);
generatedTree.insert2pass(74);
generatedTree.insert2pass(81);
generatedTree.insert2pass(28);
generatedTree.insert2pass(36);
------------------------------

└── 61
    ├── 25, 32
    │   ├── 12, 13
    │   ├── 28
    │   └── 35, 36
    └── 65, 94
        ├── 62, 64
        ├── 74, 81, 82
        └── 95, 96

------------------------------

generatedTree.delete(82)
generatedTree.delete(62)
generatedTree.delete(65)

------------------------------

└── 61
    ├── 25, 32
    │   ├── 12, 13
    │   ├── 28
    │   └── 35, 36
    └── 74, 94
        ├── 64
        ├── 81
        └── 95, 96


------------------------------

END - TEST 145


START - TEST 146
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(58);
generatedTree.insert2pass(42);
generatedTree.insert2pass(11);
generatedTree.insert2pass(83);
generatedTree.insert2pass(44);
generatedTree.insert2pass(40);
generatedTree.insert2pass(71);
generatedTree.insert2pass(25);
generatedTree.insert2pass(48);
generatedTree.insert2pass(97);
generatedTree.insert2pass(60);
------------------------------

└── 42, 58, 83
    ├── 11, 25, 40
    ├── 44, 48
    ├── 60, 71
    └── 90, 97

------------------------------

generatedTree.delete(97)

------------------------------

└── 42, 58, 83
    ├── 11, 25, 40
    ├── 44, 48
    ├── 60, 71
    └── 90


------------------------------

END - TEST 146


START - TEST 147
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(80);
generatedTree.insert2pass(81);
generatedTree.insert2pass(82);
generatedTree.insert2pass(45);
generatedTree.insert2pass(29);
generatedTree.insert2pass(88);
generatedTree.insert2pass(97);
generatedTree.insert2pass(96);
generatedTree.insert2pass(69);
generatedTree.insert2pass(27);
generatedTree.insert2pass(91);
generatedTree.insert2pass(40);
generatedTree.insert2pass(59);
generatedTree.insert2pass(74);
generatedTree.insert2pass(66);
generatedTree.insert2pass(31);
generatedTree.insert2pass(54);
generatedTree.insert2pass(92);
generatedTree.insert2pass(63);
------------------------------

└── 45, 81
    ├── 29
    │   ├── 27
    │   └── 31, 40
    ├── 59, 69
    │   ├── 54
    │   ├── 63, 66
    │   └── 74, 80
    └── 88, 96
        ├── 82
        ├── 91, 92, 95
        └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(69)

------------------------------

└── 45, 81
    ├── 29
    │   ├── 27
    │   └── 31, 40
    ├── 59, 66
    │   ├── 54
    │   ├── 63
    │   └── 74, 80
    └── 88, 95
        ├── 82
        ├── 91, 92
        └── 96


------------------------------

END - TEST 147


START - TEST 148
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(59);
generatedTree.insert2pass(43);
generatedTree.insert2pass(78);
generatedTree.insert2pass(72);
generatedTree.insert2pass(91);
generatedTree.insert2pass(65);
generatedTree.insert2pass(35);
generatedTree.insert2pass(37);
generatedTree.insert2pass(94);
generatedTree.insert2pass(25);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
------------------------------

└── 43
    ├── 35
    │   ├── 25, 32
    │   └── 37
    └── 59, 72
        ├── 44, 58
        ├── 65
        └── 78, 91, 94

------------------------------

generatedTree.delete(65)
generatedTree.delete(43)
generatedTree.delete(25)

------------------------------

└── 35, 44, 72
    ├── 32
    ├── 37
    ├── 58, 59
    └── 78, 91, 94


------------------------------

END - TEST 148


START - TEST 149
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(91);
generatedTree.insert2pass(32);
generatedTree.insert2pass(56);
generatedTree.insert2pass(73);
generatedTree.insert2pass(46);
------------------------------

└── 37, 73
    ├── 32
    ├── 46, 56
    └── 91

------------------------------

generatedTree.delete(37)
generatedTree.delete(46)
generatedTree.delete(56)

------------------------------

└── 73
    ├── 32
    └── 91


------------------------------

END - TEST 149


START - TEST 150
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(18);
generatedTree.insert2pass(25);
generatedTree.insert2pass(76);
generatedTree.insert2pass(47);
generatedTree.insert2pass(54);
generatedTree.insert2pass(94);
generatedTree.insert2pass(97);
------------------------------

└── 25, 51, 76
    ├── 18
    ├── 47
    ├── 54
    └── 94, 97

------------------------------

generatedTree.delete(25)
generatedTree.delete(76)

------------------------------

└── 51, 94
    ├── 18, 47
    ├── 54
    └── 97


------------------------------

END - TEST 150


START - TEST 151
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(88);
generatedTree.insert2pass(41);
generatedTree.insert2pass(75);
generatedTree.insert2pass(11);
generatedTree.insert2pass(40);
generatedTree.insert2pass(94);
------------------------------

└── 41
    ├── 11, 34, 40
    └── 75, 88, 94

------------------------------

generatedTree.delete(75)
generatedTree.delete(11)
generatedTree.delete(41)

------------------------------

└── 40
    ├── 34
    └── 88, 94


------------------------------

END - TEST 151


START - TEST 152
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(93);
generatedTree.insert2pass(34);
generatedTree.insert2pass(52);
generatedTree.insert2pass(87);
generatedTree.insert2pass(69);
generatedTree.insert2pass(14);
generatedTree.insert2pass(90);
generatedTree.insert2pass(25);
generatedTree.insert2pass(23);
generatedTree.insert2pass(94);
generatedTree.insert2pass(68);
generatedTree.insert2pass(12);
generatedTree.insert2pass(42);
generatedTree.insert2pass(59);
generatedTree.insert2pass(79);
generatedTree.insert2pass(71);
------------------------------

└── 52
    ├── 25
    │   ├── 12, 14, 23
    │   └── 34, 42
    └── 68, 78, 90
        ├── 59
        ├── 69, 71
        ├── 79, 87
        └── 93, 94

------------------------------

generatedTree.delete(25)
generatedTree.delete(69)
generatedTree.delete(79)

------------------------------

└── 68
    ├── 23, 52
    │   ├── 12, 14
    │   ├── 34, 42
    │   └── 59
    └── 78, 90
        ├── 71
        ├── 87
        └── 93, 94


------------------------------

END - TEST 152


START - TEST 153
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(97);
generatedTree.insert2pass(48);
generatedTree.insert2pass(67);
generatedTree.insert2pass(70);
generatedTree.insert2pass(39);
generatedTree.insert2pass(33);
generatedTree.insert2pass(14);
generatedTree.insert2pass(17);
generatedTree.insert2pass(91);
generatedTree.insert2pass(19);
------------------------------

└── 17, 39, 67
    ├── 14
    ├── 19, 33
    ├── 48
    └── 70, 91, 97

------------------------------

generatedTree.delete(17)
generatedTree.delete(70)

------------------------------

└── 19, 39, 67
    ├── 14
    ├── 33
    ├── 48
    └── 91, 97


------------------------------

END - TEST 153


START - TEST 154
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(80);
generatedTree.insert2pass(99);
generatedTree.insert2pass(23);
generatedTree.insert2pass(11);
generatedTree.insert2pass(54);
generatedTree.insert2pass(38);
generatedTree.insert2pass(72);
generatedTree.insert2pass(68);
generatedTree.insert2pass(97);
generatedTree.insert2pass(33);
generatedTree.insert2pass(82);
generatedTree.insert2pass(95);
generatedTree.insert2pass(28);
generatedTree.insert2pass(31);
generatedTree.insert2pass(91);
generatedTree.insert2pass(48);
------------------------------

└── 38
    ├── 15, 28
    │   ├── 11
    │   ├── 23
    │   └── 31, 33
    └── 68, 80, 97
        ├── 48, 54
        ├── 72
        ├── 82, 91, 95
        └── 99

------------------------------

generatedTree.delete(28)

------------------------------

└── 38
    ├── 15, 31
    │   ├── 11
    │   ├── 23
    │   └── 33
    └── 68, 80, 97
        ├── 48, 54
        ├── 72
        ├── 82, 91, 95
        └── 99


------------------------------

END - TEST 154


START - TEST 155
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(98);
generatedTree.insert2pass(43);
generatedTree.insert2pass(94);
generatedTree.insert2pass(23);
generatedTree.insert2pass(95);
generatedTree.insert2pass(42);
generatedTree.insert2pass(99);
generatedTree.insert2pass(73);
generatedTree.insert2pass(33);
generatedTree.insert2pass(28);
generatedTree.insert2pass(20);
generatedTree.insert2pass(29);
generatedTree.insert2pass(90);
------------------------------

└── 92
    ├── 28, 42
    │   ├── 20, 23
    │   ├── 29, 33
    │   └── 43, 73, 90
    └── 95
        ├── 94
        └── 98, 99

------------------------------

generatedTree.delete(98)
generatedTree.delete(29)

------------------------------

└── 92
    ├── 28, 42
    │   ├── 20, 23
    │   ├── 33
    │   └── 43, 73, 90
    └── 95
        ├── 94
        └── 99


------------------------------

END - TEST 155


START - TEST 156
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(90);
generatedTree.insert2pass(91);
generatedTree.insert2pass(47);
generatedTree.insert2pass(20);
generatedTree.insert2pass(93);
generatedTree.insert2pass(44);
generatedTree.insert2pass(87);
generatedTree.insert2pass(80);
generatedTree.insert2pass(38);
generatedTree.insert2pass(84);
generatedTree.insert2pass(74);
generatedTree.insert2pass(51);
generatedTree.insert2pass(55);
generatedTree.insert2pass(54);
generatedTree.insert2pass(12);
------------------------------

└── 47
    ├── 21
    │   ├── 12, 20
    │   └── 38, 44
    └── 74, 84, 90
        ├── 51, 54, 55
        ├── 80
        ├── 87
        └── 91, 93

------------------------------

generatedTree.delete(38)
generatedTree.delete(47)
generatedTree.delete(90)

------------------------------

└── 74
    ├── 21, 51
    │   ├── 12, 20
    │   ├── 44
    │   └── 54, 55
    └── 84, 91
        ├── 80
        ├── 87
        └── 93


------------------------------

END - TEST 156


START - TEST 157
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(24);
generatedTree.insert2pass(72);
generatedTree.insert2pass(87);
generatedTree.insert2pass(76);
generatedTree.insert2pass(54);
generatedTree.insert2pass(52);
generatedTree.insert2pass(45);
generatedTree.insert2pass(46);
generatedTree.insert2pass(92);
generatedTree.insert2pass(31);
generatedTree.insert2pass(18);
generatedTree.insert2pass(11);
generatedTree.insert2pass(55);
------------------------------

└── 72
    ├── 24, 45, 52
    │   ├── 11, 18
    │   ├── 31
    │   ├── 46
    │   └── 54, 55
    └── 76
        ├── 75
        └── 87, 92

------------------------------

generatedTree.delete(54)
generatedTree.delete(31)

------------------------------

└── 72
    ├── 18, 45, 52
    │   ├── 11
    │   ├── 24
    │   ├── 46
    │   └── 55
    └── 76
        ├── 75
        └── 87, 92


------------------------------

END - TEST 157


START - TEST 158
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(14);
generatedTree.insert2pass(71);
generatedTree.insert2pass(34);
generatedTree.insert2pass(17);
generatedTree.insert2pass(50);
generatedTree.insert2pass(28);
------------------------------

└── 17, 71
    ├── 14
    ├── 28, 34, 50
    └── 82

------------------------------

generatedTree.delete(50)

------------------------------

└── 17, 71
    ├── 14
    ├── 28, 34
    └── 82


------------------------------

END - TEST 158


START - TEST 159
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(74);
generatedTree.insert2pass(43);
generatedTree.insert2pass(11);
generatedTree.insert2pass(65);
generatedTree.insert2pass(56);
generatedTree.insert2pass(31);
------------------------------

└── 43, 64
    ├── 11, 31
    ├── 56
    └── 65, 74

------------------------------

generatedTree.delete(11)
generatedTree.delete(31)
generatedTree.delete(64)

------------------------------

└── 56
    ├── 43
    └── 65, 74


------------------------------

END - TEST 159


START - TEST 160
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(61);
generatedTree.insert2pass(27);
generatedTree.insert2pass(21);
generatedTree.insert2pass(71);
generatedTree.insert2pass(47);
------------------------------

└── 43
    ├── 21, 27
    └── 47, 61, 71

------------------------------

generatedTree.delete(27)
generatedTree.delete(61)
generatedTree.delete(71)

------------------------------

└── 43
    ├── 21
    └── 47


------------------------------

END - TEST 160


START - TEST 161
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(48);
generatedTree.insert2pass(11);
generatedTree.insert2pass(51);
generatedTree.insert2pass(29);
generatedTree.insert2pass(54);
generatedTree.insert2pass(59);
------------------------------

└── 48, 54
    ├── 11, 29
    ├── 51
    └── 59, 89

------------------------------

generatedTree.delete(11)
generatedTree.delete(51)
generatedTree.delete(59)

------------------------------

└── 48
    ├── 29
    └── 54, 89


------------------------------

END - TEST 161


START - TEST 162
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(26);
generatedTree.insert2pass(37);
generatedTree.insert2pass(87);
generatedTree.insert2pass(22);
generatedTree.insert2pass(86);
generatedTree.insert2pass(78);
generatedTree.insert2pass(41);
------------------------------

└── 37, 86
    ├── 22, 26
    ├── 41, 52, 78
    └── 87

------------------------------

generatedTree.delete(22)
generatedTree.delete(78)

------------------------------

└── 37, 86
    ├── 26
    ├── 41, 52
    └── 87


------------------------------

END - TEST 162


START - TEST 163
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(61);
generatedTree.insert2pass(86);
generatedTree.insert2pass(60);
generatedTree.insert2pass(74);
generatedTree.insert2pass(32);
generatedTree.insert2pass(23);
generatedTree.insert2pass(13);
generatedTree.insert2pass(53);
generatedTree.insert2pass(38);
generatedTree.insert2pass(21);
generatedTree.insert2pass(66);
generatedTree.insert2pass(64);
generatedTree.insert2pass(87);
generatedTree.insert2pass(44);
generatedTree.insert2pass(28);
generatedTree.insert2pass(45);
generatedTree.insert2pass(34);
------------------------------

└── 32, 61
    ├── 21
    │   ├── 13
    │   └── 23, 28
    ├── 44, 53
    │   ├── 34, 38
    │   ├── 45
    │   └── 60
    └── 86
        ├── 64, 66, 74
        └── 87, 96

------------------------------

generatedTree.delete(44)
generatedTree.delete(23)
generatedTree.delete(32)

------------------------------

└── 38, 61
    ├── 21
    │   ├── 13
    │   └── 28, 34
    ├── 53
    │   ├── 45
    │   └── 60
    └── 86
        ├── 64, 66, 74
        └── 87, 96


------------------------------

END - TEST 163


START - TEST 164
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(77);
generatedTree.insert2pass(13);
generatedTree.insert2pass(49);
generatedTree.insert2pass(81);
generatedTree.insert2pass(87);
generatedTree.insert2pass(31);
generatedTree.insert2pass(20);
generatedTree.insert2pass(22);
generatedTree.insert2pass(12);
generatedTree.insert2pass(83);
generatedTree.insert2pass(93);
generatedTree.insert2pass(46);
generatedTree.insert2pass(32);
generatedTree.insert2pass(42);
generatedTree.insert2pass(16);
generatedTree.insert2pass(76);
generatedTree.insert2pass(62);
generatedTree.insert2pass(68);
generatedTree.insert2pass(89);
------------------------------

└── 31, 57
    ├── 20
    │   ├── 12, 13, 16
    │   └── 22
    ├── 46
    │   ├── 32, 42
    │   └── 49
    └── 76, 81, 87
        ├── 62, 68
        ├── 77
        ├── 83
        └── 89, 93

------------------------------

generatedTree.delete(49)
generatedTree.delete(12)
generatedTree.delete(87)

------------------------------

└── 42, 76
    ├── 20, 31
    │   ├── 13, 16
    │   ├── 22
    │   └── 32
    ├── 57
    │   ├── 46
    │   └── 62, 68
    └── 81, 89
        ├── 77
        ├── 83
        └── 93


------------------------------

END - TEST 164


START - TEST 165
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(42);
generatedTree.insert2pass(17);
generatedTree.insert2pass(61);
generatedTree.insert2pass(32);
generatedTree.insert2pass(97);
generatedTree.insert2pass(74);
generatedTree.insert2pass(28);
generatedTree.insert2pass(38);
generatedTree.insert2pass(33);
generatedTree.insert2pass(46);
generatedTree.insert2pass(62);
generatedTree.insert2pass(36);
generatedTree.insert2pass(19);
generatedTree.insert2pass(78);
generatedTree.insert2pass(98);
generatedTree.insert2pass(35);
------------------------------

└── 42
    ├── 28, 33
    │   ├── 17, 19
    │   ├── 32
    │   └── 35, 36, 38
    └── 68, 78
        ├── 46, 61, 62
        ├── 74
        └── 97, 98

------------------------------

generatedTree.delete(28)

------------------------------

└── 42
    ├── 19, 33
    │   ├── 17
    │   ├── 32
    │   └── 35, 36, 38
    └── 68, 78
        ├── 46, 61, 62
        ├── 74
        └── 97, 98


------------------------------

END - TEST 165


START - TEST 166
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(32);
generatedTree.insert2pass(18);
generatedTree.insert2pass(63);
generatedTree.insert2pass(64);
generatedTree.insert2pass(72);
generatedTree.insert2pass(73);
generatedTree.insert2pass(51);
generatedTree.insert2pass(39);
generatedTree.insert2pass(41);
generatedTree.insert2pass(17);
generatedTree.insert2pass(54);
generatedTree.insert2pass(38);
generatedTree.insert2pass(31);
generatedTree.insert2pass(94);
generatedTree.insert2pass(57);
generatedTree.insert2pass(36);
generatedTree.insert2pass(16);
generatedTree.insert2pass(99);
generatedTree.insert2pass(35);
------------------------------

└── 39
    ├── 18, 32
    │   ├── 15, 16, 17
    │   ├── 31
    │   └── 35, 36, 38
    └── 51, 63, 72
        ├── 41
        ├── 54, 57
        ├── 64
        └── 73, 94, 99

------------------------------

generatedTree.delete(16)

------------------------------

└── 39
    ├── 18, 32
    │   ├── 15, 17
    │   ├── 31
    │   └── 35, 36, 38
    └── 51, 63, 72
        ├── 41
        ├── 54, 57
        ├── 64
        └── 73, 94, 99


------------------------------

END - TEST 166


START - TEST 167
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(30);
generatedTree.insert2pass(41);
generatedTree.insert2pass(40);
generatedTree.insert2pass(11);
generatedTree.insert2pass(66);
generatedTree.insert2pass(84);
generatedTree.insert2pass(71);
generatedTree.insert2pass(49);
generatedTree.insert2pass(45);
generatedTree.insert2pass(47);
generatedTree.insert2pass(81);
generatedTree.insert2pass(44);
generatedTree.insert2pass(67);
generatedTree.insert2pass(77);
generatedTree.insert2pass(68);
generatedTree.insert2pass(21);
generatedTree.insert2pass(86);
generatedTree.insert2pass(18);
generatedTree.insert2pass(64);
------------------------------

└── 49
    ├── 30, 41
    │   ├── 11, 18, 21
    │   ├── 40
    │   └── 44, 45, 47
    └── 66, 71, 81
        ├── 57, 64
        ├── 67, 68
        ├── 77
        └── 84, 86

------------------------------

generatedTree.delete(77)

------------------------------

└── 49
    ├── 30, 41
    │   ├── 11, 18, 21
    │   ├── 40
    │   └── 44, 45, 47
    └── 66, 68, 81
        ├── 57, 64
        ├── 67
        ├── 71
        └── 84, 86


------------------------------

END - TEST 167


START - TEST 168
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(31);
generatedTree.insert2pass(94);
generatedTree.insert2pass(67);
generatedTree.insert2pass(47);
generatedTree.insert2pass(72);
generatedTree.insert2pass(56);
generatedTree.insert2pass(88);
generatedTree.insert2pass(69);
generatedTree.insert2pass(42);
generatedTree.insert2pass(54);
generatedTree.insert2pass(63);
generatedTree.insert2pass(90);
------------------------------

└── 67
    ├── 44, 54
    │   ├── 31, 42
    │   ├── 47
    │   └── 56, 63
    └── 88
        ├── 69, 72
        └── 90, 94

------------------------------

generatedTree.delete(63)
generatedTree.delete(94)
generatedTree.delete(31)

------------------------------

└── 67
    ├── 44, 54
    │   ├── 42
    │   ├── 47
    │   └── 56
    └── 88
        ├── 69, 72
        └── 90


------------------------------

END - TEST 168


START - TEST 169
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(81);
generatedTree.insert2pass(15);
generatedTree.insert2pass(74);
generatedTree.insert2pass(62);
generatedTree.insert2pass(75);
generatedTree.insert2pass(48);
generatedTree.insert2pass(16);
generatedTree.insert2pass(42);
------------------------------

└── 48, 74
    ├── 15, 16, 42
    ├── 62
    └── 75, 81

------------------------------

generatedTree.delete(75)
generatedTree.delete(74)

------------------------------

└── 48
    ├── 15, 16, 42
    └── 62, 81


------------------------------

END - TEST 169


START - TEST 170
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(74);
generatedTree.insert2pass(34);
generatedTree.insert2pass(67);
generatedTree.insert2pass(71);
generatedTree.insert2pass(33);
generatedTree.insert2pass(31);
generatedTree.insert2pass(93);
generatedTree.insert2pass(17);
generatedTree.insert2pass(16);
generatedTree.insert2pass(63);
------------------------------

└── 31, 34, 69
    ├── 16, 17
    ├── 33
    ├── 63, 67
    └── 71, 74, 93

------------------------------

generatedTree.delete(93)
generatedTree.delete(69)
generatedTree.delete(71)

------------------------------

└── 31, 34, 67
    ├── 16, 17
    ├── 33
    ├── 63
    └── 74


------------------------------

END - TEST 170


START - TEST 171
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(58);
generatedTree.insert2pass(34);
generatedTree.insert2pass(88);
generatedTree.insert2pass(25);
generatedTree.insert2pass(49);
generatedTree.insert2pass(92);
------------------------------

└── 58
    ├── 25, 34, 49
    └── 88, 92, 95

------------------------------

generatedTree.delete(92)
generatedTree.delete(49)

------------------------------

└── 58
    ├── 25, 34
    └── 88, 95


------------------------------

END - TEST 171


START - TEST 172
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(27);
generatedTree.insert2pass(38);
generatedTree.insert2pass(51);
generatedTree.insert2pass(11);
generatedTree.insert2pass(42);
generatedTree.insert2pass(28);
generatedTree.insert2pass(79);
generatedTree.insert2pass(77);
generatedTree.insert2pass(17);
generatedTree.insert2pass(50);
generatedTree.insert2pass(90);
------------------------------

└── 38
    ├── 27
    │   ├── 11, 17
    │   └── 28
    └── 47, 77
        ├── 42
        ├── 50, 51
        └── 79, 90

------------------------------

generatedTree.delete(38)

------------------------------

└── 42
    ├── 27
    │   ├── 11, 17
    │   └── 28
    └── 50, 77
        ├── 47
        ├── 51
        └── 79, 90


------------------------------

END - TEST 172


START - TEST 173
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(68);
generatedTree.insert2pass(91);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(29);
generatedTree.insert2pass(12);
generatedTree.insert2pass(36);
generatedTree.insert2pass(62);
generatedTree.insert2pass(74);
generatedTree.insert2pass(97);
generatedTree.insert2pass(59);
------------------------------

└── 16, 36, 68
    ├── 11, 12
    ├── 29
    ├── 58, 59, 62
    └── 74, 91, 97

------------------------------

generatedTree.delete(74)
generatedTree.delete(59)
generatedTree.delete(58)

------------------------------

└── 16, 36, 68
    ├── 11, 12
    ├── 29
    ├── 62
    └── 91, 97


------------------------------

END - TEST 173


START - TEST 174
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(13);
generatedTree.insert2pass(24);
generatedTree.insert2pass(98);
generatedTree.insert2pass(41);
generatedTree.insert2pass(16);
generatedTree.insert2pass(12);
generatedTree.insert2pass(68);
generatedTree.insert2pass(88);
generatedTree.insert2pass(45);
generatedTree.insert2pass(65);
generatedTree.insert2pass(36);
generatedTree.insert2pass(40);
generatedTree.insert2pass(51);
generatedTree.insert2pass(50);
generatedTree.insert2pass(42);
------------------------------

└── 45
    ├── 24, 40
    │   ├── 12, 13, 16
    │   ├── 36
    │   └── 41, 42
    └── 65, 75
        ├── 50, 51
        ├── 68
        └── 88, 98

------------------------------

generatedTree.delete(24)

------------------------------

└── 45
    ├── 16, 40
    │   ├── 12, 13
    │   ├── 36
    │   └── 41, 42
    └── 65, 75
        ├── 50, 51
        ├── 68
        └── 88, 98


------------------------------

END - TEST 174


START - TEST 175
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(69);
generatedTree.insert2pass(95);
generatedTree.insert2pass(35);
generatedTree.insert2pass(63);
generatedTree.insert2pass(85);
generatedTree.insert2pass(41);
generatedTree.insert2pass(40);
generatedTree.insert2pass(49);
generatedTree.insert2pass(77);
generatedTree.insert2pass(80);
------------------------------

└── 58
    ├── 40
    │   ├── 35
    │   └── 41, 49
    └── 69, 85
        ├── 63
        ├── 77, 80
        └── 95

------------------------------

generatedTree.delete(41)
generatedTree.delete(80)
generatedTree.delete(40)

------------------------------

└── 69
    ├── 58
    │   ├── 35, 49
    │   └── 63
    └── 85
        ├── 77
        └── 95


------------------------------

END - TEST 175


START - TEST 176
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(79);
generatedTree.insert2pass(30);
generatedTree.insert2pass(36);
generatedTree.insert2pass(67);
------------------------------

└── 30
    ├── 15
    └── 36, 67, 79

------------------------------

generatedTree.delete(30)
generatedTree.delete(15)

------------------------------

└── 67
    ├── 36
    └── 79


------------------------------

END - TEST 176


START - TEST 177
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(67);
generatedTree.insert2pass(22);
generatedTree.insert2pass(27);
generatedTree.insert2pass(45);
generatedTree.insert2pass(69);
------------------------------

└── 27
    ├── 22
    └── 45, 67, 69

------------------------------

generatedTree.delete(45)

------------------------------

└── 27
    ├── 22
    └── 67, 69


------------------------------

END - TEST 177


START - TEST 178
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(85);
generatedTree.insert2pass(11);
generatedTree.insert2pass(36);
generatedTree.insert2pass(57);
generatedTree.insert2pass(46);
generatedTree.insert2pass(66);
generatedTree.insert2pass(15);
generatedTree.insert2pass(33);
generatedTree.insert2pass(94);
generatedTree.insert2pass(91);
generatedTree.insert2pass(90);
generatedTree.insert2pass(25);
generatedTree.insert2pass(22);
generatedTree.insert2pass(29);
------------------------------

└── 62
    ├── 15, 25, 36
    │   ├── 11
    │   ├── 22
    │   ├── 29, 33
    │   └── 46, 57
    └── 85
        ├── 66
        └── 90, 91, 94

------------------------------

generatedTree.delete(91)

------------------------------

└── 36
    ├── 15, 25
    │   ├── 11
    │   ├── 22
    │   └── 29, 33
    └── 62, 85
        ├── 46, 57
        ├── 66
        └── 90, 94


------------------------------

END - TEST 178


START - TEST 179
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(13);
generatedTree.insert2pass(94);
generatedTree.insert2pass(38);
generatedTree.insert2pass(96);
generatedTree.insert2pass(35);
generatedTree.insert2pass(84);
generatedTree.insert2pass(41);
generatedTree.insert2pass(89);
generatedTree.insert2pass(68);
generatedTree.insert2pass(16);
generatedTree.insert2pass(79);
------------------------------

└── 57
    ├── 35
    │   ├── 13, 16
    │   └── 38, 41
    └── 84, 94
        ├── 68, 79
        ├── 89
        └── 96

------------------------------

generatedTree.delete(94)

------------------------------

└── 57
    ├── 35
    │   ├── 13, 16
    │   └── 38, 41
    └── 84
        ├── 68, 79
        └── 89, 96


------------------------------

END - TEST 179


START - TEST 180
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(98);
generatedTree.insert2pass(65);
generatedTree.insert2pass(92);
generatedTree.insert2pass(32);
generatedTree.insert2pass(52);
generatedTree.insert2pass(99);
generatedTree.insert2pass(51);
generatedTree.insert2pass(27);
generatedTree.insert2pass(50);
generatedTree.insert2pass(88);
generatedTree.insert2pass(79);
generatedTree.insert2pass(44);
------------------------------

└── 65
    ├── 32, 51
    │   ├── 20, 27
    │   ├── 44, 50
    │   └── 52
    └── 98
        ├── 79, 88, 92
        └── 99

------------------------------

generatedTree.delete(52)

------------------------------

└── 65
    ├── 32, 50
    │   ├── 20, 27
    │   ├── 44
    │   └── 51
    └── 98
        ├── 79, 88, 92
        └── 99


------------------------------

END - TEST 180


START - TEST 181
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(40);
generatedTree.insert2pass(54);
generatedTree.insert2pass(53);
generatedTree.insert2pass(62);
------------------------------

└── 46
    ├── 40
    └── 53, 54, 62

------------------------------

generatedTree.delete(46)

------------------------------

└── 53
    ├── 40
    └── 54, 62


------------------------------

END - TEST 181


START - TEST 182
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(17);
generatedTree.insert2pass(23);
generatedTree.insert2pass(31);
generatedTree.insert2pass(98);
generatedTree.insert2pass(58);
generatedTree.insert2pass(78);
generatedTree.insert2pass(49);
generatedTree.insert2pass(68);
generatedTree.insert2pass(51);
generatedTree.insert2pass(25);
generatedTree.insert2pass(11);
generatedTree.insert2pass(82);
------------------------------

└── 31
    ├── 20
    │   ├── 11, 17
    │   └── 23, 25
    └── 58, 78
        ├── 49, 51
        ├── 68
        └── 82, 98

------------------------------

generatedTree.delete(25)
generatedTree.delete(20)

------------------------------

└── 58
    ├── 17, 31
    │   ├── 11
    │   ├── 23
    │   └── 49, 51
    └── 78
        ├── 68
        └── 82, 98


------------------------------

END - TEST 182


START - TEST 183
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(97);
generatedTree.insert2pass(41);
generatedTree.insert2pass(79);
generatedTree.insert2pass(22);
generatedTree.insert2pass(50);
generatedTree.insert2pass(36);
generatedTree.insert2pass(77);
generatedTree.insert2pass(61);
generatedTree.insert2pass(49);
------------------------------

└── 41, 64
    ├── 22, 36
    ├── 49, 50, 61
    └── 77, 79, 97

------------------------------

generatedTree.delete(41)

------------------------------

└── 36, 64
    ├── 22
    ├── 49, 50, 61
    └── 77, 79, 97


------------------------------

END - TEST 183


START - TEST 184
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(71);
generatedTree.insert2pass(92);
generatedTree.insert2pass(83);
generatedTree.insert2pass(20);
generatedTree.insert2pass(72);
generatedTree.insert2pass(34);
generatedTree.insert2pass(30);
generatedTree.insert2pass(58);
------------------------------

└── 34, 71
    ├── 20, 30
    ├── 52, 58
    └── 72, 83, 92

------------------------------

generatedTree.delete(20)
generatedTree.delete(34)

------------------------------

└── 52, 71
    ├── 30
    ├── 58
    └── 72, 83, 92


------------------------------

END - TEST 184


START - TEST 185
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(75);
generatedTree.insert2pass(25);
generatedTree.insert2pass(91);
generatedTree.insert2pass(53);
generatedTree.insert2pass(62);
------------------------------

└── 63
    ├── 25, 53, 62
    └── 75, 91

------------------------------

generatedTree.delete(63)

------------------------------

└── 62
    ├── 25, 53
    └── 75, 91


------------------------------

END - TEST 185


START - TEST 186
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(48);
generatedTree.insert2pass(47);
generatedTree.insert2pass(96);
generatedTree.insert2pass(27);
generatedTree.insert2pass(69);
generatedTree.insert2pass(22);
generatedTree.insert2pass(24);
generatedTree.insert2pass(56);
generatedTree.insert2pass(26);
generatedTree.insert2pass(58);
generatedTree.insert2pass(54);
generatedTree.insert2pass(95);
generatedTree.insert2pass(73);
generatedTree.insert2pass(33);
generatedTree.insert2pass(38);
generatedTree.insert2pass(67);
------------------------------

└── 47
    ├── 22, 26
    │   ├── 19
    │   ├── 24
    │   └── 27, 33, 38
    └── 56, 69
        ├── 48, 54
        ├── 58, 67
        └── 73, 95, 96

------------------------------

generatedTree.delete(95)
generatedTree.delete(69)

------------------------------

└── 47
    ├── 22, 26
    │   ├── 19
    │   ├── 24
    │   └── 27, 33, 38
    └── 56, 67
        ├── 48, 54
        ├── 58
        └── 73, 96


------------------------------

END - TEST 186


START - TEST 187
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(88);
generatedTree.insert2pass(26);
generatedTree.insert2pass(29);
generatedTree.insert2pass(89);
generatedTree.insert2pass(23);
generatedTree.insert2pass(41);
generatedTree.insert2pass(81);
generatedTree.insert2pass(30);
------------------------------

└── 26, 71
    ├── 23
    ├── 29, 30, 41
    └── 81, 88, 89

------------------------------

generatedTree.delete(41)

------------------------------

└── 26, 71
    ├── 23
    ├── 29, 30
    └── 81, 88, 89


------------------------------

END - TEST 187


START - TEST 188
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(21);
generatedTree.insert2pass(79);
generatedTree.insert2pass(76);
generatedTree.insert2pass(84);
generatedTree.insert2pass(52);
generatedTree.insert2pass(90);
------------------------------

└── 21, 79
    ├── 15
    ├── 52, 76
    └── 84, 90

------------------------------

generatedTree.delete(15)

------------------------------

└── 52, 79
    ├── 21
    ├── 76
    └── 84, 90


------------------------------

END - TEST 188


START - TEST 189
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(92);
generatedTree.insert2pass(11);
generatedTree.insert2pass(98);
generatedTree.insert2pass(42);
generatedTree.insert2pass(70);
generatedTree.insert2pass(37);
generatedTree.insert2pass(12);
generatedTree.insert2pass(58);
generatedTree.insert2pass(44);
generatedTree.insert2pass(40);
generatedTree.insert2pass(25);
------------------------------

└── 37, 44, 62
    ├── 11, 12, 25
    ├── 40, 42
    ├── 58
    └── 70, 92, 98

------------------------------

generatedTree.delete(11)
generatedTree.delete(40)

------------------------------

└── 37, 44, 62
    ├── 12, 25
    ├── 42
    ├── 58
    └── 70, 92, 98


------------------------------

END - TEST 189


START - TEST 190
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(54);
generatedTree.insert2pass(82);
generatedTree.insert2pass(80);
generatedTree.insert2pass(39);
generatedTree.insert2pass(68);
generatedTree.insert2pass(16);
generatedTree.insert2pass(23);
------------------------------

└── 39, 54
    ├── 16, 23
    ├── 49
    └── 68, 80, 82

------------------------------

generatedTree.delete(23)
generatedTree.delete(16)

------------------------------

└── 54
    ├── 39, 49
    └── 68, 80, 82


------------------------------

END - TEST 190


START - TEST 191
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(70);
generatedTree.insert2pass(19);
generatedTree.insert2pass(17);
generatedTree.insert2pass(49);
generatedTree.insert2pass(53);
generatedTree.insert2pass(75);
generatedTree.insert2pass(54);
generatedTree.insert2pass(42);
generatedTree.insert2pass(30);
generatedTree.insert2pass(62);
generatedTree.insert2pass(80);
generatedTree.insert2pass(81);
generatedTree.insert2pass(94);
------------------------------

└── 53
    ├── 24
    │   ├── 17, 19
    │   └── 30, 42, 49
    └── 70, 80
        ├── 54, 62
        ├── 75
        └── 81, 94

------------------------------

generatedTree.delete(42)
generatedTree.delete(24)

------------------------------

└── 70
    ├── 19, 53
    │   ├── 17
    │   ├── 30, 49
    │   └── 54, 62
    └── 80
        ├── 75
        └── 81, 94


------------------------------

END - TEST 191


START - TEST 192
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(97);
generatedTree.insert2pass(85);
generatedTree.insert2pass(32);
generatedTree.insert2pass(84);
generatedTree.insert2pass(47);
------------------------------

└── 84, 93
    ├── 32, 47
    ├── 85
    └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(47)
generatedTree.delete(85)

------------------------------

└── 84
    ├── 32
    └── 93


------------------------------

END - TEST 192


START - TEST 193
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(32);
generatedTree.insert2pass(86);
generatedTree.insert2pass(33);
generatedTree.insert2pass(69);
generatedTree.insert2pass(30);
------------------------------

└── 68
    ├── 30, 32, 33
    └── 69, 86

------------------------------

generatedTree.delete(69)
generatedTree.delete(30)
generatedTree.delete(86)

------------------------------

└── 33
    ├── 32
    └── 68


------------------------------

END - TEST 193


START - TEST 194
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(31);
generatedTree.insert2pass(72);
generatedTree.insert2pass(28);
generatedTree.insert2pass(71);
generatedTree.insert2pass(89);
generatedTree.insert2pass(24);
generatedTree.insert2pass(73);
generatedTree.insert2pass(87);
generatedTree.insert2pass(58);
generatedTree.insert2pass(81);
generatedTree.insert2pass(53);
------------------------------

└── 68
    ├── 28
    │   ├── 24
    │   └── 31, 53, 58
    └── 72, 87
        ├── 71
        ├── 73, 81
        └── 89

------------------------------

generatedTree.delete(58)
generatedTree.delete(31)

------------------------------

└── 72
    ├── 28, 68
    │   ├── 24
    │   ├── 53
    │   └── 71
    └── 87
        ├── 73, 81
        └── 89


------------------------------

END - TEST 194


START - TEST 195
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(56);
generatedTree.insert2pass(99);
generatedTree.insert2pass(61);
generatedTree.insert2pass(42);
generatedTree.insert2pass(98);
generatedTree.insert2pass(97);
generatedTree.insert2pass(84);
generatedTree.insert2pass(93);
generatedTree.insert2pass(29);
generatedTree.insert2pass(82);
generatedTree.insert2pass(34);
generatedTree.insert2pass(59);
generatedTree.insert2pass(52);
generatedTree.insert2pass(60);
generatedTree.insert2pass(12);
generatedTree.insert2pass(78);
------------------------------

└── 84
    ├── 29, 56, 61
    │   ├── 12, 25
    │   ├── 34, 42, 52
    │   ├── 59, 60
    │   └── 78, 82
    └── 98
        ├── 93, 97
        └── 99

------------------------------

generatedTree.delete(99)
generatedTree.delete(56)

------------------------------

└── 61
    ├── 29, 52
    │   ├── 12, 25
    │   ├── 34, 42
    │   └── 59, 60
    └── 84, 97
        ├── 78, 82
        ├── 93
        └── 98


------------------------------

END - TEST 195


START - TEST 196
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(97);
generatedTree.insert2pass(72);
generatedTree.insert2pass(44);
generatedTree.insert2pass(34);
generatedTree.insert2pass(68);
generatedTree.insert2pass(24);
generatedTree.insert2pass(48);
generatedTree.insert2pass(14);
generatedTree.insert2pass(95);
generatedTree.insert2pass(38);
generatedTree.insert2pass(87);
generatedTree.insert2pass(15);
generatedTree.insert2pass(64);
generatedTree.insert2pass(13);
generatedTree.insert2pass(49);
generatedTree.insert2pass(70);
generatedTree.insert2pass(60);
generatedTree.insert2pass(26);
------------------------------

└── 44
    ├── 24
    │   ├── 13, 14, 15
    │   └── 26, 34, 38
    └── 50, 68, 72
        ├── 48, 49
        ├── 60, 64
        ├── 70
        └── 87, 95, 97

------------------------------

generatedTree.delete(95)

------------------------------

└── 44
    ├── 24
    │   ├── 13, 14, 15
    │   └── 26, 34, 38
    └── 50, 68, 72
        ├── 48, 49
        ├── 60, 64
        ├── 70
        └── 87, 97


------------------------------

END - TEST 196


START - TEST 197
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(95);
generatedTree.insert2pass(61);
generatedTree.insert2pass(82);
generatedTree.insert2pass(72);
generatedTree.insert2pass(55);
generatedTree.insert2pass(93);
generatedTree.insert2pass(58);
generatedTree.insert2pass(90);
generatedTree.insert2pass(59);
generatedTree.insert2pass(22);
generatedTree.insert2pass(35);
generatedTree.insert2pass(71);
generatedTree.insert2pass(40);
generatedTree.insert2pass(44);
generatedTree.insert2pass(37);
generatedTree.insert2pass(66);
------------------------------

└── 61
    ├── 35, 44, 55
    │   ├── 22
    │   ├── 37, 40
    │   ├── 49
    │   └── 58, 59
    └── 82
        ├── 66, 71, 72
        └── 90, 93, 95

------------------------------

generatedTree.delete(49)
generatedTree.delete(22)

------------------------------

└── 61
    ├── 40, 55
    │   ├── 35, 37
    │   ├── 44
    │   └── 58, 59
    └── 82
        ├── 66, 71, 72
        └── 90, 93, 95


------------------------------

END - TEST 197


START - TEST 198
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(67);
generatedTree.insert2pass(41);
generatedTree.insert2pass(30);
generatedTree.insert2pass(87);
generatedTree.insert2pass(54);
generatedTree.insert2pass(74);
generatedTree.insert2pass(66);
generatedTree.insert2pass(16);
------------------------------

└── 41, 67
    ├── 16, 30
    ├── 54, 66
    └── 74, 78, 87

------------------------------

generatedTree.delete(16)
generatedTree.delete(41)

------------------------------

└── 54, 67
    ├── 30
    ├── 66
    └── 74, 78, 87


------------------------------

END - TEST 198


START - TEST 199
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(50);
generatedTree.insert2pass(41);
generatedTree.insert2pass(70);
generatedTree.insert2pass(43);
generatedTree.insert2pass(76);
generatedTree.insert2pass(92);
generatedTree.insert2pass(26);
generatedTree.insert2pass(99);
generatedTree.insert2pass(87);
generatedTree.insert2pass(14);
generatedTree.insert2pass(67);
------------------------------

└── 70
    ├── 41, 50
    │   ├── 14, 26
    │   ├── 43
    │   └── 67, 68
    └── 92
        ├── 76, 87
        └── 99

------------------------------

generatedTree.delete(70)
generatedTree.delete(41)
generatedTree.delete(87)

------------------------------

└── 50
    ├── 26
    │   ├── 14
    │   └── 43
    └── 68, 92
        ├── 67
        ├── 76
        └── 99


------------------------------

END - TEST 199


START - TEST 200
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(28);
generatedTree.insert2pass(56);
generatedTree.insert2pass(89);
generatedTree.insert2pass(13);
generatedTree.insert2pass(68);
generatedTree.insert2pass(79);
generatedTree.insert2pass(47);
generatedTree.insert2pass(26);
generatedTree.insert2pass(34);
generatedTree.insert2pass(69);
generatedTree.insert2pass(54);
generatedTree.insert2pass(90);
generatedTree.insert2pass(59);
generatedTree.insert2pass(52);
generatedTree.insert2pass(25);
------------------------------

└── 56
    ├── 28, 47
    │   ├── 13, 25, 26
    │   ├── 34
    │   └── 52, 54
    └── 68, 79
        ├── 59, 61
        ├── 69
        └── 89, 90

------------------------------

generatedTree.delete(54)

------------------------------

└── 56
    ├── 28, 47
    │   ├── 13, 25, 26
    │   ├── 34
    │   └── 52
    └── 68, 79
        ├── 59, 61
        ├── 69
        └── 89, 90


------------------------------

END - TEST 200


START - TEST 201
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(76);
generatedTree.insert2pass(14);
generatedTree.insert2pass(63);
generatedTree.insert2pass(17);
generatedTree.insert2pass(42);
generatedTree.insert2pass(69);
generatedTree.insert2pass(43);
generatedTree.insert2pass(23);
generatedTree.insert2pass(45);
generatedTree.insert2pass(53);
generatedTree.insert2pass(93);
generatedTree.insert2pass(67);
generatedTree.insert2pass(44);
generatedTree.insert2pass(28);
generatedTree.insert2pass(83);
------------------------------

└── 63
    ├── 17, 42, 45
    │   ├── 14
    │   ├── 23, 28
    │   ├── 43, 44
    │   └── 53
    └── 76
        ├── 67, 69
        └── 83, 90, 93

------------------------------

generatedTree.delete(17)
generatedTree.delete(76)

------------------------------

└── 45
    ├── 23, 42
    │   ├── 14
    │   ├── 28
    │   └── 43, 44
    └── 63, 69
        ├── 53
        ├── 67
        └── 83, 90, 93


------------------------------

END - TEST 201


START - TEST 202
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(27);
generatedTree.insert2pass(89);
generatedTree.insert2pass(62);
generatedTree.insert2pass(40);
generatedTree.insert2pass(85);
generatedTree.insert2pass(58);
generatedTree.insert2pass(11);
generatedTree.insert2pass(14);
generatedTree.insert2pass(53);
generatedTree.insert2pass(42);
------------------------------

└── 27, 49, 85
    ├── 11, 14
    ├── 40, 42
    ├── 53, 58, 62
    └── 89

------------------------------

generatedTree.delete(11)

------------------------------

└── 27, 49, 85
    ├── 14
    ├── 40, 42
    ├── 53, 58, 62
    └── 89


------------------------------

END - TEST 202


START - TEST 203
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(51);
generatedTree.insert2pass(98);
generatedTree.insert2pass(71);
generatedTree.insert2pass(97);
generatedTree.insert2pass(61);
generatedTree.insert2pass(42);
generatedTree.insert2pass(84);
generatedTree.insert2pass(13);
generatedTree.insert2pass(56);
------------------------------

└── 51, 71, 97
    ├── 11, 13, 42
    ├── 56, 61
    ├── 84
    └── 98

------------------------------

generatedTree.delete(42)

------------------------------

└── 51, 71, 97
    ├── 11, 13
    ├── 56, 61
    ├── 84
    └── 98


------------------------------

END - TEST 203


START - TEST 204
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(48);
generatedTree.insert2pass(12);
generatedTree.insert2pass(45);
generatedTree.insert2pass(49);
generatedTree.insert2pass(60);
generatedTree.insert2pass(44);
generatedTree.insert2pass(30);
generatedTree.insert2pass(92);
generatedTree.insert2pass(17);
generatedTree.insert2pass(41);
generatedTree.insert2pass(63);
generatedTree.insert2pass(24);
generatedTree.insert2pass(95);
generatedTree.insert2pass(38);
generatedTree.insert2pass(82);
generatedTree.insert2pass(16);
generatedTree.insert2pass(20);
------------------------------

└── 44
    ├── 13, 17, 30
    │   ├── 12
    │   ├── 16
    │   ├── 20, 24
    │   └── 38, 41
    └── 48, 60, 92
        ├── 45
        ├── 49
        ├── 63, 82
        └── 95

------------------------------

generatedTree.delete(17)
generatedTree.delete(44)

------------------------------

└── 41
    ├── 13, 20, 30
    │   ├── 12
    │   ├── 16
    │   ├── 24
    │   └── 38
    └── 48, 60, 92
        ├── 45
        ├── 49
        ├── 63, 82
        └── 95


------------------------------

END - TEST 204


START - TEST 205
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(38);
generatedTree.insert2pass(47);
generatedTree.insert2pass(95);
generatedTree.insert2pass(40);
generatedTree.insert2pass(72);
generatedTree.insert2pass(64);
------------------------------

└── 42, 72
    ├── 38, 40
    ├── 47, 64
    └── 95

------------------------------

generatedTree.delete(72)
generatedTree.delete(38)

------------------------------

└── 42, 64
    ├── 40
    ├── 47
    └── 95


------------------------------

END - TEST 205


START - TEST 206
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(64);
generatedTree.insert2pass(56);
generatedTree.insert2pass(99);
generatedTree.insert2pass(84);
------------------------------

└── 64
    ├── 56
    └── 84, 90, 99

------------------------------

generatedTree.delete(56)
generatedTree.delete(90)

------------------------------

└── 84
    ├── 64
    └── 99


------------------------------

END - TEST 206


START - TEST 207
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(62);
generatedTree.insert2pass(22);
generatedTree.insert2pass(70);
generatedTree.insert2pass(15);
generatedTree.insert2pass(16);
generatedTree.insert2pass(45);
generatedTree.insert2pass(37);
generatedTree.insert2pass(95);
------------------------------

└── 16, 59
    ├── 15
    ├── 22, 37, 45
    └── 62, 70, 95

------------------------------

generatedTree.delete(45)

------------------------------

└── 16, 59
    ├── 15
    ├── 22, 37
    └── 62, 70, 95


------------------------------

END - TEST 207


START - TEST 208
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(48);
generatedTree.insert2pass(55);
generatedTree.insert2pass(44);
generatedTree.insert2pass(34);
generatedTree.insert2pass(14);
generatedTree.insert2pass(35);
------------------------------

└── 34, 48
    ├── 14
    ├── 35, 44
    └── 55

------------------------------

generatedTree.delete(35)

------------------------------

└── 34, 48
    ├── 14
    ├── 44
    └── 55


------------------------------

END - TEST 208


START - TEST 209
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(26);
generatedTree.insert2pass(80);
generatedTree.insert2pass(83);
generatedTree.insert2pass(75);
generatedTree.insert2pass(58);
generatedTree.insert2pass(73);
generatedTree.insert2pass(18);
generatedTree.insert2pass(88);
generatedTree.insert2pass(45);
generatedTree.insert2pass(57);
generatedTree.insert2pass(56);
generatedTree.insert2pass(52);
------------------------------

└── 58
    ├── 26, 56
    │   ├── 18
    │   ├── 45, 52
    │   └── 57
    └── 80
        ├── 73, 75
        └── 83, 84, 88

------------------------------

generatedTree.delete(83)
generatedTree.delete(56)

------------------------------

└── 57
    ├── 26
    │   ├── 18
    │   └── 45, 52
    └── 73, 80
        ├── 58
        ├── 75
        └── 84, 88


------------------------------

END - TEST 209


START - TEST 210
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(11);
generatedTree.insert2pass(22);
generatedTree.insert2pass(32);
generatedTree.insert2pass(35);
generatedTree.insert2pass(80);
generatedTree.insert2pass(76);
generatedTree.insert2pass(75);
generatedTree.insert2pass(86);
generatedTree.insert2pass(49);
generatedTree.insert2pass(67);
generatedTree.insert2pass(31);
------------------------------

└── 35
    ├── 22
    │   ├── 11
    │   └── 31, 32
    └── 75, 80
        ├── 49, 67
        ├── 76
        └── 86, 93

------------------------------

generatedTree.delete(31)
generatedTree.delete(11)

------------------------------

└── 75
    ├── 35
    │   ├── 22, 32
    │   └── 49, 67
    └── 80
        ├── 76
        └── 86, 93


------------------------------

END - TEST 210


START - TEST 211
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(89);
generatedTree.insert2pass(59);
generatedTree.insert2pass(84);
generatedTree.insert2pass(43);
generatedTree.insert2pass(95);
generatedTree.insert2pass(88);
generatedTree.insert2pass(63);
generatedTree.insert2pass(72);
generatedTree.insert2pass(82);
generatedTree.insert2pass(74);
------------------------------

└── 59, 79, 89
    ├── 43
    ├── 63, 72, 74
    ├── 82, 84, 88
    └── 95

------------------------------

generatedTree.delete(82)
generatedTree.delete(84)

------------------------------

└── 59, 79, 89
    ├── 43
    ├── 63, 72, 74
    ├── 88
    └── 95


------------------------------

END - TEST 211


START - TEST 212
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(91);
generatedTree.insert2pass(41);
generatedTree.insert2pass(20);
generatedTree.insert2pass(60);
generatedTree.insert2pass(49);
generatedTree.insert2pass(99);
generatedTree.insert2pass(35);
generatedTree.insert2pass(57);
generatedTree.insert2pass(82);
generatedTree.insert2pass(55);
generatedTree.insert2pass(64);
generatedTree.insert2pass(36);
generatedTree.insert2pass(19);
generatedTree.insert2pass(93);
generatedTree.insert2pass(89);
generatedTree.insert2pass(39);
generatedTree.insert2pass(59);
generatedTree.insert2pass(30);
generatedTree.insert2pass(87);
------------------------------

└── 57
    ├── 35, 41
    │   ├── 19, 20, 30
    │   ├── 36, 39
    │   └── 49, 55
    └── 78, 91
        ├── 59, 60, 64
        ├── 82, 87, 89
        └── 93, 99

------------------------------

generatedTree.delete(93)

------------------------------

└── 57
    ├── 35, 41
    │   ├── 19, 20, 30
    │   ├── 36, 39
    │   └── 49, 55
    └── 78, 91
        ├── 59, 60, 64
        ├── 82, 87, 89
        └── 99


------------------------------

END - TEST 212


START - TEST 213
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(23);
generatedTree.insert2pass(66);
generatedTree.insert2pass(60);
generatedTree.insert2pass(28);
generatedTree.insert2pass(84);
generatedTree.insert2pass(64);
generatedTree.insert2pass(53);
------------------------------

└── 28, 66
    ├── 23
    ├── 53, 60, 64
    └── 84, 85

------------------------------

generatedTree.delete(28)
generatedTree.delete(64)

------------------------------

└── 53, 66
    ├── 23
    ├── 60
    └── 84, 85


------------------------------

END - TEST 213


START - TEST 214
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(98);
generatedTree.insert2pass(65);
generatedTree.insert2pass(62);
generatedTree.insert2pass(34);
generatedTree.insert2pass(45);
generatedTree.insert2pass(42);
generatedTree.insert2pass(56);
generatedTree.insert2pass(78);
generatedTree.insert2pass(25);
generatedTree.insert2pass(93);
generatedTree.insert2pass(47);
generatedTree.insert2pass(87);
generatedTree.insert2pass(77);
------------------------------

└── 45
    ├── 34
    │   ├── 25, 29
    │   └── 42
    └── 65, 93
        ├── 47, 56, 62
        ├── 77, 78, 87
        └── 98

------------------------------

generatedTree.delete(25)
generatedTree.delete(29)

------------------------------

└── 65
    ├── 45
    │   ├── 34, 42
    │   └── 47, 56, 62
    └── 93
        ├── 77, 78, 87
        └── 98


------------------------------

END - TEST 214


START - TEST 215
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(92);
generatedTree.insert2pass(26);
generatedTree.insert2pass(98);
generatedTree.insert2pass(96);
generatedTree.insert2pass(40);
generatedTree.insert2pass(83);
generatedTree.insert2pass(28);
generatedTree.insert2pass(49);
------------------------------

└── 28, 79, 96
    ├── 26
    ├── 40, 49
    ├── 83, 92
    └── 98

------------------------------

generatedTree.delete(49)
generatedTree.delete(26)
generatedTree.delete(96)

------------------------------

└── 79, 92
    ├── 28, 40
    ├── 83
    └── 98


------------------------------

END - TEST 215


START - TEST 216
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(31);
generatedTree.insert2pass(59);
generatedTree.insert2pass(50);
generatedTree.insert2pass(29);
------------------------------

└── 59
    ├── 29, 31, 50
    └── 93

------------------------------

generatedTree.delete(50)
generatedTree.delete(29)

------------------------------

└── 59
    ├── 31
    └── 93


------------------------------

END - TEST 216


START - TEST 217
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(50);
generatedTree.insert2pass(25);
generatedTree.insert2pass(17);
generatedTree.insert2pass(65);
generatedTree.insert2pass(34);
------------------------------

└── 50
    ├── 17, 25, 34
    └── 65, 79

------------------------------

generatedTree.delete(17)

------------------------------

└── 50
    ├── 25, 34
    └── 65, 79


------------------------------

END - TEST 217


START - TEST 218
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(69);
generatedTree.insert2pass(52);
generatedTree.insert2pass(39);
generatedTree.insert2pass(62);
generatedTree.insert2pass(53);
generatedTree.insert2pass(21);
generatedTree.insert2pass(89);
generatedTree.insert2pass(61);
generatedTree.insert2pass(40);
generatedTree.insert2pass(65);
generatedTree.insert2pass(50);
generatedTree.insert2pass(44);
generatedTree.insert2pass(41);
generatedTree.insert2pass(91);
generatedTree.insert2pass(13);
------------------------------

└── 61
    ├── 39, 44, 52
    │   ├── 13, 21
    │   ├── 40, 41
    │   ├── 50
    │   └── 53
    └── 69
        ├── 62, 65
        └── 70, 89, 91

------------------------------

generatedTree.delete(52)

------------------------------

└── 61
    ├── 39, 44
    │   ├── 13, 21
    │   ├── 40, 41
    │   └── 50, 53
    └── 69
        ├── 62, 65
        └── 70, 89, 91


------------------------------

END - TEST 218


START - TEST 219
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(28);
generatedTree.insert2pass(24);
generatedTree.insert2pass(92);
generatedTree.insert2pass(90);
generatedTree.insert2pass(56);
generatedTree.insert2pass(58);
generatedTree.insert2pass(91);
generatedTree.insert2pass(34);
------------------------------

└── 28, 58, 90
    ├── 24
    ├── 34, 56
    ├── 84
    └── 91, 92

------------------------------

generatedTree.delete(24)
generatedTree.delete(58)

------------------------------

└── 34, 90
    ├── 28
    ├── 56, 84
    └── 91, 92


------------------------------

END - TEST 219


START - TEST 220
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(15);
generatedTree.insert2pass(72);
generatedTree.insert2pass(28);
generatedTree.insert2pass(40);
generatedTree.insert2pass(25);
generatedTree.insert2pass(69);
generatedTree.insert2pass(80);
generatedTree.insert2pass(84);
generatedTree.insert2pass(17);
generatedTree.insert2pass(76);
generatedTree.insert2pass(96);
generatedTree.insert2pass(45);
generatedTree.insert2pass(27);
generatedTree.insert2pass(67);
generatedTree.insert2pass(42);
generatedTree.insert2pass(13);
------------------------------

└── 71
    ├── 17, 28, 45
    │   ├── 13, 15
    │   ├── 25, 27
    │   ├── 40, 42
    │   └── 67, 69
    └── 80
        ├── 72, 76
        └── 84, 96

------------------------------

generatedTree.delete(15)

------------------------------

└── 71
    ├── 17, 28, 45
    │   ├── 13
    │   ├── 25, 27
    │   ├── 40, 42
    │   └── 67, 69
    └── 80
        ├── 72, 76
        └── 84, 96


------------------------------

END - TEST 220


START - TEST 221
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(94);
generatedTree.insert2pass(53);
generatedTree.insert2pass(83);
generatedTree.insert2pass(25);
generatedTree.insert2pass(87);
generatedTree.insert2pass(64);
generatedTree.insert2pass(81);
generatedTree.insert2pass(21);
generatedTree.insert2pass(91);
generatedTree.insert2pass(18);
generatedTree.insert2pass(56);
generatedTree.insert2pass(44);
------------------------------

└── 53
    ├── 21
    │   ├── 17, 18
    │   └── 25, 44
    └── 81, 87
        ├── 56, 64
        ├── 83
        └── 91, 94

------------------------------

generatedTree.delete(18)
generatedTree.delete(25)
generatedTree.delete(56)

------------------------------

└── 81
    ├── 21, 53
    │   ├── 17
    │   ├── 44
    │   └── 64
    └── 87
        ├── 83
        └── 91, 94


------------------------------

END - TEST 221


START - TEST 222
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(27);
generatedTree.insert2pass(55);
generatedTree.insert2pass(78);
generatedTree.insert2pass(62);
generatedTree.insert2pass(33);
generatedTree.insert2pass(17);
generatedTree.insert2pass(28);
generatedTree.insert2pass(97);
generatedTree.insert2pass(24);
generatedTree.insert2pass(80);
generatedTree.insert2pass(61);
generatedTree.insert2pass(77);
------------------------------

└── 33
    ├── 27
    │   ├── 17, 20, 24
    │   └── 28
    └── 62, 80
        ├── 55, 61
        ├── 77, 78
        └── 97

------------------------------

generatedTree.delete(27)
generatedTree.delete(28)
generatedTree.delete(17)

------------------------------

└── 62
    ├── 33
    │   ├── 20, 24
    │   └── 55, 61
    └── 80
        ├── 77, 78
        └── 97


------------------------------

END - TEST 222


START - TEST 223
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(48);
generatedTree.insert2pass(37);
generatedTree.insert2pass(75);
generatedTree.insert2pass(50);
generatedTree.insert2pass(77);
generatedTree.insert2pass(49);
------------------------------

└── 48, 75
    ├── 37
    ├── 49, 50
    └── 77

------------------------------

generatedTree.delete(77)
generatedTree.delete(50)
generatedTree.delete(75)

------------------------------

└── 48
    ├── 37
    └── 49


------------------------------

END - TEST 223


START - TEST 224
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(26);
generatedTree.insert2pass(41);
generatedTree.insert2pass(22);
generatedTree.insert2pass(89);
generatedTree.insert2pass(42);
generatedTree.insert2pass(97);
generatedTree.insert2pass(69);
generatedTree.insert2pass(46);
generatedTree.insert2pass(64);
generatedTree.insert2pass(57);
------------------------------

└── 41, 63, 89
    ├── 22, 26
    ├── 42, 46, 57
    ├── 64, 69
    └── 97

------------------------------

generatedTree.delete(46)
generatedTree.delete(26)
generatedTree.delete(64)

------------------------------

└── 41, 63, 89
    ├── 22
    ├── 42, 57
    ├── 69
    └── 97


------------------------------

END - TEST 224


START - TEST 225
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(23);
generatedTree.insert2pass(76);
generatedTree.insert2pass(55);
generatedTree.insert2pass(64);
generatedTree.insert2pass(51);
generatedTree.insert2pass(89);
generatedTree.insert2pass(75);
generatedTree.insert2pass(95);
generatedTree.insert2pass(19);
generatedTree.insert2pass(33);
------------------------------

└── 23, 55, 76
    ├── 19
    ├── 33, 51
    ├── 64, 75
    └── 89, 95

------------------------------

generatedTree.delete(89)
generatedTree.delete(95)
generatedTree.delete(51)

------------------------------

└── 23, 55, 75
    ├── 19
    ├── 33
    ├── 64
    └── 76


------------------------------

END - TEST 225


START - TEST 226
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(35);
generatedTree.insert2pass(99);
generatedTree.insert2pass(67);
generatedTree.insert2pass(24);
generatedTree.insert2pass(50);
generatedTree.insert2pass(85);
generatedTree.insert2pass(84);
generatedTree.insert2pass(70);
generatedTree.insert2pass(49);
generatedTree.insert2pass(17);
generatedTree.insert2pass(76);
generatedTree.insert2pass(51);
------------------------------

└── 63
    ├── 35
    │   ├── 17, 24
    │   └── 49, 50, 51
    └── 70, 85
        ├── 67
        ├── 76, 84
        └── 99

------------------------------

generatedTree.delete(70)
generatedTree.delete(84)
generatedTree.delete(99)

------------------------------

└── 35, 63, 76
    ├── 17, 24
    ├── 49, 50, 51
    ├── 67
    └── 85


------------------------------

END - TEST 226


START - TEST 227
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(59);
generatedTree.insert2pass(88);
generatedTree.insert2pass(91);
generatedTree.insert2pass(16);
generatedTree.insert2pass(43);
generatedTree.insert2pass(37);
generatedTree.insert2pass(54);
generatedTree.insert2pass(93);
generatedTree.insert2pass(13);
generatedTree.insert2pass(49);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(48);
generatedTree.insert2pass(81);
generatedTree.insert2pass(35);
------------------------------

└── 54
    ├── 16, 43
    │   ├── 13
    │   ├── 35, 37, 39
    │   └── 45, 48, 49
    └── 61, 91
        ├── 59
        ├── 81, 88
        └── 93

------------------------------

generatedTree.delete(49)
generatedTree.delete(81)
generatedTree.delete(13)

------------------------------

└── 54
    ├── 35, 43
    │   ├── 16
    │   ├── 37, 39
    │   └── 45, 48
    └── 61, 91
        ├── 59
        ├── 88
        └── 93


------------------------------

END - TEST 227


START - TEST 228
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(16);
generatedTree.insert2pass(74);
generatedTree.insert2pass(25);
generatedTree.insert2pass(70);
generatedTree.insert2pass(65);
generatedTree.insert2pass(73);
generatedTree.insert2pass(94);
generatedTree.insert2pass(11);
generatedTree.insert2pass(97);
generatedTree.insert2pass(61);
generatedTree.insert2pass(90);
generatedTree.insert2pass(64);
generatedTree.insert2pass(92);
generatedTree.insert2pass(46);
------------------------------

└── 71
    ├── 25, 65
    │   ├── 11, 16
    │   ├── 46, 61, 64
    │   └── 70
    └── 74, 94
        ├── 73
        ├── 90, 92
        └── 97

------------------------------

generatedTree.delete(46)
generatedTree.delete(71)
generatedTree.delete(25)

------------------------------

└── 70
    ├── 16, 64
    │   ├── 11
    │   ├── 61
    │   └── 65
    └── 74, 94
        ├── 73
        ├── 90, 92
        └── 97


------------------------------

END - TEST 228


START - TEST 229
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(72);
generatedTree.insert2pass(34);
generatedTree.insert2pass(13);
generatedTree.insert2pass(79);
generatedTree.insert2pass(36);
generatedTree.insert2pass(94);
generatedTree.insert2pass(15);
generatedTree.insert2pass(18);
generatedTree.insert2pass(12);
generatedTree.insert2pass(95);
generatedTree.insert2pass(35);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
generatedTree.insert2pass(22);
------------------------------

└── 34
    ├── 15, 25
    │   ├── 12, 13
    │   ├── 18, 22
    │   └── 30
    └── 72
        ├── 35, 36, 61
        └── 79, 94, 95

------------------------------

generatedTree.delete(79)
generatedTree.delete(72)
generatedTree.delete(61)

------------------------------

└── 25
    ├── 15
    │   ├── 12, 13
    │   └── 18, 22
    └── 34, 36
        ├── 30
        ├── 35
        └── 94, 95


------------------------------

END - TEST 229


START - TEST 230
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(50);
generatedTree.insert2pass(12);
generatedTree.insert2pass(99);
generatedTree.insert2pass(26);
generatedTree.insert2pass(86);
generatedTree.insert2pass(31);
generatedTree.insert2pass(70);
generatedTree.insert2pass(21);
------------------------------

└── 26, 50, 95
    ├── 12, 21
    ├── 31
    ├── 70, 86
    └── 99

------------------------------

generatedTree.delete(31)

------------------------------

└── 21, 50, 95
    ├── 12
    ├── 26
    ├── 70, 86
    └── 99


------------------------------

END - TEST 230


START - TEST 231
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(80);
generatedTree.insert2pass(26);
generatedTree.insert2pass(59);
generatedTree.insert2pass(82);
generatedTree.insert2pass(72);
generatedTree.insert2pass(79);
generatedTree.insert2pass(92);
generatedTree.insert2pass(14);
------------------------------

└── 59, 80
    ├── 14, 26
    ├── 72, 79
    └── 82, 92

------------------------------

generatedTree.delete(59)

------------------------------

└── 26, 80
    ├── 14
    ├── 72, 79
    └── 82, 92


------------------------------

END - TEST 231


START - TEST 232
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(93);
generatedTree.insert2pass(23);
generatedTree.insert2pass(64);
generatedTree.insert2pass(27);
generatedTree.insert2pass(81);
generatedTree.insert2pass(48);
generatedTree.insert2pass(33);
generatedTree.insert2pass(30);
generatedTree.insert2pass(85);
generatedTree.insert2pass(67);
------------------------------

└── 27, 58, 81
    ├── 23
    ├── 30, 33, 48
    ├── 64, 67
    └── 85, 93

------------------------------

generatedTree.delete(30)
generatedTree.delete(85)
generatedTree.delete(33)

------------------------------

└── 27, 58, 81
    ├── 23
    ├── 48
    ├── 64, 67
    └── 93


------------------------------

END - TEST 232


START - TEST 233
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(53);
generatedTree.insert2pass(78);
generatedTree.insert2pass(29);
generatedTree.insert2pass(43);
generatedTree.insert2pass(57);
generatedTree.insert2pass(50);
generatedTree.insert2pass(22);
generatedTree.insert2pass(66);
generatedTree.insert2pass(75);
------------------------------

└── 38, 53, 66
    ├── 22, 29
    ├── 43, 50
    ├── 57
    └── 75, 78

------------------------------

generatedTree.delete(50)
generatedTree.delete(38)
generatedTree.delete(53)

------------------------------

└── 29, 66
    ├── 22
    ├── 43, 57
    └── 75, 78


------------------------------

END - TEST 233


START - TEST 234
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(34);
generatedTree.insert2pass(64);
generatedTree.insert2pass(33);
generatedTree.insert2pass(21);
generatedTree.insert2pass(40);
generatedTree.insert2pass(97);
generatedTree.insert2pass(63);
generatedTree.insert2pass(22);
generatedTree.insert2pass(62);
generatedTree.insert2pass(59);
generatedTree.insert2pass(93);
generatedTree.insert2pass(80);
generatedTree.insert2pass(41);
generatedTree.insert2pass(12);
generatedTree.insert2pass(53);
generatedTree.insert2pass(20);
------------------------------

└── 34
    ├── 21
    │   ├── 12, 15, 20
    │   └── 22, 33
    └── 41, 62, 64
        ├── 40
        ├── 53, 59
        ├── 63
        └── 80, 93, 97

------------------------------

generatedTree.delete(93)

------------------------------

└── 34
    ├── 21
    │   ├── 12, 15, 20
    │   └── 22, 33
    └── 41, 62, 64
        ├── 40
        ├── 53, 59
        ├── 63
        └── 80, 97


------------------------------

END - TEST 234


START - TEST 235
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(21);
generatedTree.insert2pass(75);
generatedTree.insert2pass(30);
generatedTree.insert2pass(50);
generatedTree.insert2pass(76);
generatedTree.insert2pass(65);
generatedTree.insert2pass(79);
------------------------------

└── 59, 75
    ├── 21, 30, 50
    ├── 65
    └── 76, 79

------------------------------

generatedTree.delete(21)
generatedTree.delete(50)
generatedTree.delete(79)

------------------------------

└── 59, 75
    ├── 30
    ├── 65
    └── 76


------------------------------

END - TEST 235


START - TEST 236
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(41);
generatedTree.insert2pass(40);
generatedTree.insert2pass(58);
generatedTree.insert2pass(38);
generatedTree.insert2pass(30);
generatedTree.insert2pass(95);
------------------------------

└── 41
    ├── 30, 38, 40
    └── 58, 66, 95

------------------------------

generatedTree.delete(41)

------------------------------

└── 40
    ├── 30, 38
    └── 58, 66, 95


------------------------------

END - TEST 236


START - TEST 237
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(13);
generatedTree.insert2pass(45);
generatedTree.insert2pass(78);
generatedTree.insert2pass(68);
generatedTree.insert2pass(56);
generatedTree.insert2pass(15);
generatedTree.insert2pass(87);
generatedTree.insert2pass(60);
------------------------------

└── 45, 78
    ├── 13, 15
    ├── 56, 60, 68
    └── 87, 96

------------------------------

generatedTree.delete(15)
generatedTree.delete(45)
generatedTree.delete(96)

------------------------------

└── 56, 78
    ├── 13
    ├── 60, 68
    └── 87


------------------------------

END - TEST 237


START - TEST 238
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(32);
generatedTree.insert2pass(67);
generatedTree.insert2pass(98);
generatedTree.insert2pass(30);
generatedTree.insert2pass(83);
generatedTree.insert2pass(80);
generatedTree.insert2pass(97);
generatedTree.insert2pass(36);
generatedTree.insert2pass(45);
generatedTree.insert2pass(95);
generatedTree.insert2pass(47);
generatedTree.insert2pass(21);
------------------------------

└── 32, 67, 85
    ├── 21, 30
    ├── 36, 45, 47
    ├── 80, 83
    └── 95, 97, 98

------------------------------

generatedTree.delete(83)
generatedTree.delete(21)

------------------------------

└── 32, 67, 85
    ├── 30
    ├── 36, 45, 47
    ├── 80
    └── 95, 97, 98


------------------------------

END - TEST 238


START - TEST 239
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(77);
generatedTree.insert2pass(45);
generatedTree.insert2pass(11);
generatedTree.insert2pass(98);
generatedTree.insert2pass(90);
generatedTree.insert2pass(69);
generatedTree.insert2pass(78);
generatedTree.insert2pass(60);
generatedTree.insert2pass(43);
generatedTree.insert2pass(58);
generatedTree.insert2pass(74);
generatedTree.insert2pass(76);
generatedTree.insert2pass(86);
generatedTree.insert2pass(66);
generatedTree.insert2pass(13);
generatedTree.insert2pass(27);
------------------------------

└── 60, 77
    ├── 43, 53
    │   ├── 11, 13, 27
    │   ├── 45
    │   └── 58
    ├── 74
    │   ├── 66, 69
    │   └── 76
    └── 90
        ├── 78, 86
        └── 98

------------------------------

generatedTree.delete(53)

------------------------------

└── 60, 77
    ├── 43
    │   ├── 11, 13, 27
    │   └── 45, 58
    ├── 74
    │   ├── 66, 69
    │   └── 76
    └── 90
        ├── 78, 86
        └── 98


------------------------------

END - TEST 239


START - TEST 240
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(60);
generatedTree.insert2pass(36);
generatedTree.insert2pass(26);
generatedTree.insert2pass(35);
generatedTree.insert2pass(97);
generatedTree.insert2pass(55);
generatedTree.insert2pass(54);
generatedTree.insert2pass(83);
generatedTree.insert2pass(84);
generatedTree.insert2pass(45);
generatedTree.insert2pass(92);
generatedTree.insert2pass(32);
generatedTree.insert2pass(13);
generatedTree.insert2pass(39);
generatedTree.insert2pass(66);
------------------------------

└── 60
    ├── 35, 54
    │   ├── 13, 26, 32
    │   ├── 36, 39, 45
    │   └── 55
    └── 87
        ├── 66, 83, 84
        └── 92, 97

------------------------------

generatedTree.delete(26)

------------------------------

└── 60
    ├── 35, 54
    │   ├── 13, 32
    │   ├── 36, 39, 45
    │   └── 55
    └── 87
        ├── 66, 83, 84
        └── 92, 97


------------------------------

END - TEST 240


START - TEST 241
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(96);
generatedTree.insert2pass(50);
generatedTree.insert2pass(82);
generatedTree.insert2pass(43);
generatedTree.insert2pass(51);
generatedTree.insert2pass(94);
generatedTree.insert2pass(45);
generatedTree.insert2pass(72);
generatedTree.insert2pass(20);
generatedTree.insert2pass(84);
------------------------------

└── 43, 50, 82
    ├── 20, 22
    ├── 45
    ├── 51, 72
    └── 84, 94, 96

------------------------------

generatedTree.delete(22)
generatedTree.delete(45)

------------------------------

└── 43, 51, 82
    ├── 20
    ├── 50
    ├── 72
    └── 84, 94, 96


------------------------------

END - TEST 241


START - TEST 242
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(99);
generatedTree.insert2pass(42);
generatedTree.insert2pass(23);
generatedTree.insert2pass(98);
generatedTree.insert2pass(48);
generatedTree.insert2pass(46);
generatedTree.insert2pass(70);
generatedTree.insert2pass(13);
generatedTree.insert2pass(40);
generatedTree.insert2pass(62);
generatedTree.insert2pass(61);
generatedTree.insert2pass(73);
generatedTree.insert2pass(35);
generatedTree.insert2pass(82);
generatedTree.insert2pass(32);
generatedTree.insert2pass(57);
generatedTree.insert2pass(91);
------------------------------

└── 58
    ├── 23, 42
    │   ├── 13
    │   ├── 32, 35, 40
    │   └── 46, 48, 57
    └── 62, 73, 98
        ├── 61
        ├── 70
        ├── 82, 91
        └── 99

------------------------------

generatedTree.delete(35)
generatedTree.delete(40)
generatedTree.delete(82)

------------------------------

└── 58
    ├── 23, 42
    │   ├── 13
    │   ├── 32
    │   └── 46, 48, 57
    └── 62, 73, 98
        ├── 61
        ├── 70
        ├── 91
        └── 99


------------------------------

END - TEST 242


START - TEST 243
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(79);
generatedTree.insert2pass(33);
generatedTree.insert2pass(75);
generatedTree.insert2pass(24);
generatedTree.insert2pass(17);
generatedTree.insert2pass(77);
generatedTree.insert2pass(52);
generatedTree.insert2pass(89);
generatedTree.insert2pass(51);
generatedTree.insert2pass(60);
generatedTree.insert2pass(20);
generatedTree.insert2pass(36);
generatedTree.insert2pass(80);
------------------------------

└── 52
    ├── 24, 42
    │   ├── 17, 20
    │   ├── 33, 36
    │   └── 51
    └── 77
        ├── 60, 75
        └── 79, 80, 89

------------------------------

generatedTree.delete(79)
generatedTree.delete(60)
generatedTree.delete(89)

------------------------------

└── 42
    ├── 24
    │   ├── 17, 20
    │   └── 33, 36
    └── 52, 77
        ├── 51
        ├── 75
        └── 80


------------------------------

END - TEST 243


START - TEST 244
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(39);
generatedTree.insert2pass(43);
generatedTree.insert2pass(24);
generatedTree.insert2pass(97);
generatedTree.insert2pass(59);
generatedTree.insert2pass(27);
generatedTree.insert2pass(87);
generatedTree.insert2pass(92);
generatedTree.insert2pass(31);
generatedTree.insert2pass(17);
generatedTree.insert2pass(54);
generatedTree.insert2pass(20);
generatedTree.insert2pass(29);
generatedTree.insert2pass(25);
------------------------------

└── 43
    ├── 20, 27
    │   ├── 17
    │   ├── 24, 25
    │   └── 29, 31, 39
    └── 86
        ├── 54, 59
        └── 87, 92, 97

------------------------------

generatedTree.delete(87)
generatedTree.delete(39)
generatedTree.delete(29)

------------------------------

└── 27
    ├── 20
    │   ├── 17
    │   └── 24, 25
    └── 43, 86
        ├── 31
        ├── 54, 59
        └── 92, 97


------------------------------

END - TEST 244


START - TEST 245
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(16);
generatedTree.insert2pass(73);
generatedTree.insert2pass(78);
generatedTree.insert2pass(69);
generatedTree.insert2pass(58);
generatedTree.insert2pass(14);
generatedTree.insert2pass(91);
generatedTree.insert2pass(60);
generatedTree.insert2pass(28);
generatedTree.insert2pass(86);
generatedTree.insert2pass(72);
generatedTree.insert2pass(88);
generatedTree.insert2pass(99);
generatedTree.insert2pass(47);
generatedTree.insert2pass(59);
generatedTree.insert2pass(35);
generatedTree.insert2pass(53);
generatedTree.insert2pass(79);
generatedTree.insert2pass(95);
generatedTree.insert2pass(75);
------------------------------

└── 58, 73
    ├── 16, 35
    │   ├── 14
    │   ├── 28
    │   └── 47, 53
    ├── 69
    │   ├── 59, 60
    │   └── 72
    └── 84, 88
        ├── 75, 78, 79
        ├── 86
        └── 91, 95, 99

------------------------------

generatedTree.delete(95)
generatedTree.delete(58)
generatedTree.delete(86)

------------------------------

└── 53, 73
    ├── 16, 35
    │   ├── 14
    │   ├── 28
    │   └── 47
    ├── 69
    │   ├── 59, 60
    │   └── 72
    └── 79, 88
        ├── 75, 78
        ├── 84
        └── 91, 99


------------------------------

END - TEST 245


START - TEST 246
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(33);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(12);
generatedTree.insert2pass(51);
generatedTree.insert2pass(58);
generatedTree.insert2pass(99);
generatedTree.insert2pass(85);
generatedTree.insert2pass(97);
generatedTree.insert2pass(28);
generatedTree.insert2pass(79);
generatedTree.insert2pass(17);
generatedTree.insert2pass(95);
generatedTree.insert2pass(29);
generatedTree.insert2pass(77);
generatedTree.insert2pass(34);
generatedTree.insert2pass(23);
------------------------------

└── 51
    ├── 28, 36
    │   ├── 12, 17, 23
    │   ├── 29, 33, 34
    │   └── 37
    └── 61, 85, 97
        ├── 58
        ├── 77, 79
        ├── 95
        └── 99

------------------------------

generatedTree.delete(37)

------------------------------

└── 51
    ├── 28, 34
    │   ├── 12, 17, 23
    │   ├── 29, 33
    │   └── 36
    └── 61, 85, 97
        ├── 58
        ├── 77, 79
        ├── 95
        └── 99


------------------------------

END - TEST 246


START - TEST 247
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(76);
generatedTree.insert2pass(48);
generatedTree.insert2pass(97);
generatedTree.insert2pass(42);
generatedTree.insert2pass(53);
generatedTree.insert2pass(99);
generatedTree.insert2pass(63);
------------------------------

└── 61, 97
    ├── 42, 48, 53
    ├── 63, 76
    └── 99

------------------------------

generatedTree.delete(97)
generatedTree.delete(63)

------------------------------

└── 53, 76
    ├── 42, 48
    ├── 61
    └── 99


------------------------------

END - TEST 247


START - TEST 248
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(53);
generatedTree.insert2pass(67);
generatedTree.insert2pass(71);
generatedTree.insert2pass(58);
generatedTree.insert2pass(87);
------------------------------

└── 67
    ├── 53, 58
    └── 71, 87, 89

------------------------------

generatedTree.delete(67)
generatedTree.delete(89)

------------------------------

└── 58
    ├── 53
    └── 71, 87


------------------------------

END - TEST 248


START - TEST 249
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(73);
generatedTree.insert2pass(36);
generatedTree.insert2pass(39);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(59);
generatedTree.insert2pass(18);
generatedTree.insert2pass(28);
generatedTree.insert2pass(29);
------------------------------

└── 18, 36, 58
    ├── 16
    ├── 27, 28, 29
    ├── 39
    └── 59, 73

------------------------------

generatedTree.delete(58)
generatedTree.delete(16)
generatedTree.delete(73)

------------------------------

└── 27, 36
    ├── 18
    ├── 28, 29
    └── 39, 59


------------------------------

END - TEST 249


START - TEST 250
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(69);
generatedTree.insert2pass(85);
generatedTree.insert2pass(33);
generatedTree.insert2pass(38);
generatedTree.insert2pass(13);
generatedTree.insert2pass(20);
generatedTree.insert2pass(53);
generatedTree.insert2pass(72);
generatedTree.insert2pass(31);
------------------------------

└── 20, 38, 69
    ├── 13
    ├── 31, 33
    ├── 50, 53
    └── 72, 85

------------------------------

generatedTree.delete(31)
generatedTree.delete(20)
generatedTree.delete(69)

------------------------------

└── 38, 53
    ├── 13, 33
    ├── 50
    └── 72, 85


------------------------------

END - TEST 250


START - TEST 251
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(31);
generatedTree.insert2pass(49);
generatedTree.insert2pass(96);
generatedTree.insert2pass(86);
generatedTree.insert2pass(15);
generatedTree.insert2pass(70);
generatedTree.insert2pass(35);
generatedTree.insert2pass(40);
generatedTree.insert2pass(99);
generatedTree.insert2pass(52);
------------------------------

└── 31, 49, 94
    ├── 15
    ├── 35, 40
    ├── 52, 70, 86
    └── 96, 99

------------------------------

generatedTree.delete(96)
generatedTree.delete(31)

------------------------------

└── 35, 49, 94
    ├── 15
    ├── 40
    ├── 52, 70, 86
    └── 99


------------------------------

END - TEST 251


START - TEST 252
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(11);
generatedTree.insert2pass(76);
generatedTree.insert2pass(94);
generatedTree.insert2pass(80);
generatedTree.insert2pass(95);
------------------------------

└── 61, 80
    ├── 11
    ├── 76
    └── 94, 95

------------------------------

generatedTree.delete(80)
generatedTree.delete(11)
generatedTree.delete(61)

------------------------------

└── 94
    ├── 76
    └── 95


------------------------------

END - TEST 252


START - TEST 253
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(20);
generatedTree.insert2pass(88);
generatedTree.insert2pass(83);
generatedTree.insert2pass(31);
generatedTree.insert2pass(84);
generatedTree.insert2pass(55);
generatedTree.insert2pass(98);
generatedTree.insert2pass(93);
generatedTree.insert2pass(70);
generatedTree.insert2pass(86);
generatedTree.insert2pass(66);
generatedTree.insert2pass(51);
generatedTree.insert2pass(15);
generatedTree.insert2pass(64);
generatedTree.insert2pass(45);
generatedTree.insert2pass(79);
generatedTree.insert2pass(21);
------------------------------

└── 55, 84
    ├── 20, 36
    │   ├── 15
    │   ├── 21, 31
    │   └── 45, 51
    ├── 70
    │   ├── 64, 66
    │   └── 79, 83
    └── 93
        ├── 86, 88
        └── 98

------------------------------

generatedTree.delete(55)
generatedTree.delete(31)
generatedTree.delete(84)

------------------------------

└── 51
    ├── 20, 36
    │   ├── 15
    │   ├── 21
    │   └── 45
    └── 70, 83, 93
        ├── 64, 66
        ├── 79
        ├── 86, 88
        └── 98


------------------------------

END - TEST 253


START - TEST 254
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(38);
generatedTree.insert2pass(20);
generatedTree.insert2pass(63);
generatedTree.insert2pass(87);
generatedTree.insert2pass(53);
generatedTree.insert2pass(15);
generatedTree.insert2pass(71);
generatedTree.insert2pass(90);
generatedTree.insert2pass(80);
generatedTree.insert2pass(69);
generatedTree.insert2pass(76);
------------------------------

└── 65
    ├── 38
    │   ├── 15, 20
    │   └── 53, 63
    └── 71, 87
        ├── 69
        ├── 76, 80
        └── 90

------------------------------

generatedTree.delete(38)
generatedTree.delete(69)

------------------------------

└── 71
    ├── 20, 63
    │   ├── 15
    │   ├── 53
    │   └── 65
    └── 87
        ├── 76, 80
        └── 90


------------------------------

END - TEST 254


START - TEST 255
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(46);
generatedTree.insert2pass(86);
generatedTree.insert2pass(12);
generatedTree.insert2pass(92);
generatedTree.insert2pass(53);
generatedTree.insert2pass(68);
generatedTree.insert2pass(41);
generatedTree.insert2pass(34);
generatedTree.insert2pass(57);
generatedTree.insert2pass(70);
generatedTree.insert2pass(15);
generatedTree.insert2pass(19);
generatedTree.insert2pass(59);
generatedTree.insert2pass(24);
generatedTree.insert2pass(74);
generatedTree.insert2pass(17);
generatedTree.insert2pass(77);
generatedTree.insert2pass(79);
------------------------------

└── 46, 68
    ├── 15, 22
    │   ├── 12
    │   ├── 17, 19
    │   └── 24, 34, 41
    ├── 57
    │   ├── 53
    │   └── 59
    └── 74, 86
        ├── 70
        ├── 77, 79
        └── 92

------------------------------

generatedTree.delete(15)
generatedTree.delete(22)
generatedTree.delete(86)

------------------------------

└── 46, 68
    ├── 17, 24
    │   ├── 12
    │   ├── 19
    │   └── 34, 41
    ├── 57
    │   ├── 53
    │   └── 59
    └── 74, 79
        ├── 70
        ├── 77
        └── 92


------------------------------

END - TEST 255


START - TEST 256
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(93);
generatedTree.insert2pass(39);
generatedTree.insert2pass(32);
generatedTree.insert2pass(80);
generatedTree.insert2pass(90);
generatedTree.insert2pass(11);
generatedTree.insert2pass(79);
------------------------------

└── 40, 90
    ├── 11, 32, 39
    ├── 79, 80
    └── 93

------------------------------

generatedTree.delete(93)
generatedTree.delete(32)

------------------------------

└── 40, 80
    ├── 11, 39
    ├── 79
    └── 90


------------------------------

END - TEST 256


START - TEST 257
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(25);
generatedTree.insert2pass(99);
generatedTree.insert2pass(19);
generatedTree.insert2pass(66);
generatedTree.insert2pass(48);
generatedTree.insert2pass(62);
------------------------------

└── 25, 74
    ├── 19
    ├── 48, 62, 66
    └── 99

------------------------------

generatedTree.delete(25)
generatedTree.delete(19)
generatedTree.delete(66)

------------------------------

└── 74
    ├── 48, 62
    └── 99


------------------------------

END - TEST 257


START - TEST 258
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(59);
generatedTree.insert2pass(76);
generatedTree.insert2pass(40);
generatedTree.insert2pass(68);
generatedTree.insert2pass(54);
generatedTree.insert2pass(83);
generatedTree.insert2pass(50);
generatedTree.insert2pass(72);
generatedTree.insert2pass(63);
generatedTree.insert2pass(55);
generatedTree.insert2pass(85);
generatedTree.insert2pass(94);
generatedTree.insert2pass(82);
generatedTree.insert2pass(53);
------------------------------

└── 59
    ├── 40, 54
    │   ├── 24
    │   ├── 50, 53
    │   └── 55
    └── 76, 85
        ├── 63, 68, 72
        ├── 82, 83
        └── 94

------------------------------

generatedTree.delete(53)
generatedTree.delete(40)
generatedTree.delete(24)

------------------------------

└── 76
    ├── 54, 59
    │   ├── 50
    │   ├── 55
    │   └── 63, 68, 72
    └── 85
        ├── 82, 83
        └── 94


------------------------------

END - TEST 258


START - TEST 259
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(69);
generatedTree.insert2pass(12);
generatedTree.insert2pass(43);
generatedTree.insert2pass(93);
generatedTree.insert2pass(58);
generatedTree.insert2pass(48);
------------------------------

└── 20, 58, 74
    ├── 12
    ├── 43, 48
    ├── 69
    └── 84, 93

------------------------------

generatedTree.delete(20)
generatedTree.delete(48)

------------------------------

└── 58, 74
    ├── 12, 43
    ├── 69
    └── 84, 93


------------------------------

END - TEST 259


START - TEST 260
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(18);
generatedTree.insert2pass(53);
generatedTree.insert2pass(39);
generatedTree.insert2pass(64);
generatedTree.insert2pass(36);
generatedTree.insert2pass(87);
generatedTree.insert2pass(62);
generatedTree.insert2pass(85);
generatedTree.insert2pass(41);
generatedTree.insert2pass(45);
generatedTree.insert2pass(66);
generatedTree.insert2pass(20);
generatedTree.insert2pass(14);
generatedTree.insert2pass(81);
generatedTree.insert2pass(77);
------------------------------

└── 53
    ├── 18, 39
    │   ├── 14, 16
    │   ├── 20, 36
    │   └── 41, 45
    └── 64, 85
        ├── 62
        ├── 66, 77, 81
        └── 87

------------------------------

generatedTree.delete(36)

------------------------------

└── 53
    ├── 18, 39
    │   ├── 14, 16
    │   ├── 20
    │   └── 41, 45
    └── 64, 85
        ├── 62
        ├── 66, 77, 81
        └── 87


------------------------------

END - TEST 260


START - TEST 261
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(19);
generatedTree.insert2pass(58);
generatedTree.insert2pass(54);
generatedTree.insert2pass(69);
generatedTree.insert2pass(43);
generatedTree.insert2pass(15);
generatedTree.insert2pass(12);
generatedTree.insert2pass(59);
generatedTree.insert2pass(28);
generatedTree.insert2pass(24);
generatedTree.insert2pass(95);
generatedTree.insert2pass(83);
generatedTree.insert2pass(84);
generatedTree.insert2pass(91);
------------------------------

└── 51
    ├── 19
    │   ├── 12, 15
    │   └── 24, 28, 43
    └── 58, 69, 84
        ├── 54
        ├── 59
        ├── 83
        └── 91, 95

------------------------------

generatedTree.delete(69)
generatedTree.delete(28)

------------------------------

└── 58
    ├── 19, 51
    │   ├── 12, 15
    │   ├── 24, 43
    │   └── 54
    └── 84
        ├── 59, 83
        └── 91, 95


------------------------------

END - TEST 261


START - TEST 262
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(45);
generatedTree.insert2pass(43);
generatedTree.insert2pass(73);
generatedTree.insert2pass(60);
generatedTree.insert2pass(48);
generatedTree.insert2pass(32);
generatedTree.insert2pass(22);
generatedTree.insert2pass(11);
generatedTree.insert2pass(99);
generatedTree.insert2pass(66);
generatedTree.insert2pass(94);
generatedTree.insert2pass(72);
generatedTree.insert2pass(51);
generatedTree.insert2pass(25);
------------------------------

└── 43
    ├── 32
    │   ├── 11, 22, 25
    │   └── 40
    └── 60, 73
        ├── 45, 48, 51
        ├── 66, 72
        └── 94, 99

------------------------------

generatedTree.delete(73)
generatedTree.delete(94)

------------------------------

└── 43
    ├── 32
    │   ├── 11, 22, 25
    │   └── 40
    └── 60, 72
        ├── 45, 48, 51
        ├── 66
        └── 99


------------------------------

END - TEST 262


START - TEST 263
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(62);
generatedTree.insert2pass(36);
generatedTree.insert2pass(92);
generatedTree.insert2pass(51);
------------------------------

└── 36
    ├── 30
    └── 51, 62, 92

------------------------------

generatedTree.delete(62)

------------------------------

└── 36
    ├── 30
    └── 51, 92


------------------------------

END - TEST 263


START - TEST 264
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(23);
generatedTree.insert2pass(16);
generatedTree.insert2pass(69);
generatedTree.insert2pass(50);
generatedTree.insert2pass(32);
generatedTree.insert2pass(92);
generatedTree.insert2pass(61);
generatedTree.insert2pass(82);
generatedTree.insert2pass(44);
generatedTree.insert2pass(60);
------------------------------

└── 23, 50, 69
    ├── 16
    ├── 32, 44
    ├── 60, 61
    └── 82, 92, 95

------------------------------

generatedTree.delete(92)

------------------------------

└── 23, 50, 69
    ├── 16
    ├── 32, 44
    ├── 60, 61
    └── 82, 95


------------------------------

END - TEST 264


START - TEST 265
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(17);
generatedTree.insert2pass(77);
generatedTree.insert2pass(43);
generatedTree.insert2pass(35);
generatedTree.insert2pass(68);
generatedTree.insert2pass(38);
generatedTree.insert2pass(30);
generatedTree.insert2pass(90);
generatedTree.insert2pass(13);
generatedTree.insert2pass(24);
generatedTree.insert2pass(39);
generatedTree.insert2pass(36);
------------------------------

└── 35
    ├── 17
    │   ├── 13
    │   └── 24, 30
    └── 39, 65
        ├── 36, 38
        ├── 43
        └── 68, 77, 90

------------------------------

generatedTree.delete(38)
generatedTree.delete(36)

------------------------------

└── 35
    ├── 17
    │   ├── 13
    │   └── 24, 30
    └── 65
        ├── 39, 43
        └── 68, 77, 90


------------------------------

END - TEST 265


START - TEST 266
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(17);
generatedTree.insert2pass(46);
generatedTree.insert2pass(84);
generatedTree.insert2pass(75);
generatedTree.insert2pass(87);
------------------------------

└── 44, 75
    ├── 17
    ├── 46
    └── 84, 87

------------------------------

generatedTree.delete(84)
generatedTree.delete(44)
generatedTree.delete(75)

------------------------------

└── 46
    ├── 17
    └── 87


------------------------------

END - TEST 266


START - TEST 267
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(99);
generatedTree.insert2pass(13);
generatedTree.insert2pass(19);
generatedTree.insert2pass(94);
generatedTree.insert2pass(75);
generatedTree.insert2pass(79);
generatedTree.insert2pass(44);
generatedTree.insert2pass(35);
------------------------------

└── 19, 74, 94
    ├── 13
    ├── 20, 35, 44
    ├── 75, 79
    └── 99

------------------------------

generatedTree.delete(35)
generatedTree.delete(79)

------------------------------

└── 19, 74, 94
    ├── 13
    ├── 20, 44
    ├── 75
    └── 99


------------------------------

END - TEST 267


START - TEST 268
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(91);
generatedTree.insert2pass(81);
generatedTree.insert2pass(87);
generatedTree.insert2pass(38);
generatedTree.insert2pass(17);
generatedTree.insert2pass(54);
generatedTree.insert2pass(52);
generatedTree.insert2pass(63);
generatedTree.insert2pass(76);
generatedTree.insert2pass(94);
generatedTree.insert2pass(15);
generatedTree.insert2pass(92);
generatedTree.insert2pass(31);
generatedTree.insert2pass(28);
generatedTree.insert2pass(19);
generatedTree.insert2pass(33);
generatedTree.insert2pass(40);
generatedTree.insert2pass(90);
generatedTree.insert2pass(24);
generatedTree.insert2pass(70);
------------------------------

└── 54
    ├── 17, 28, 38
    │   ├── 15
    │   ├── 19, 24
    │   ├── 31, 33
    │   └── 40, 52
    └── 76, 87, 92
        ├── 63, 70
        ├── 81
        ├── 90, 91
        └── 94

------------------------------

generatedTree.delete(92)
generatedTree.delete(91)

------------------------------

└── 54
    ├── 17, 28, 38
    │   ├── 15
    │   ├── 19, 24
    │   ├── 31, 33
    │   └── 40, 52
    └── 76, 87
        ├── 63, 70
        ├── 81
        └── 90, 94


------------------------------

END - TEST 268


START - TEST 269
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(76);
generatedTree.insert2pass(38);
generatedTree.insert2pass(33);
generatedTree.insert2pass(36);
generatedTree.insert2pass(67);
generatedTree.insert2pass(37);
generatedTree.insert2pass(58);
------------------------------

└── 36, 61
    ├── 33
    ├── 37, 38, 58
    └── 67, 76

------------------------------

generatedTree.delete(36)

------------------------------

└── 37, 61
    ├── 33
    ├── 38, 58
    └── 67, 76


------------------------------

END - TEST 269


START - TEST 270
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(95);
generatedTree.insert2pass(50);
generatedTree.insert2pass(83);
generatedTree.insert2pass(82);
generatedTree.insert2pass(98);
generatedTree.insert2pass(96);
generatedTree.insert2pass(78);
generatedTree.insert2pass(38);
generatedTree.insert2pass(93);
generatedTree.insert2pass(40);
------------------------------

└── 50, 83, 96
    ├── 38, 40, 42
    ├── 78, 82
    ├── 93, 95
    └── 98

------------------------------

generatedTree.delete(95)
generatedTree.delete(78)
generatedTree.delete(82)

------------------------------

└── 42, 83, 96
    ├── 38, 40
    ├── 50
    ├── 93
    └── 98


------------------------------

END - TEST 270


START - TEST 271
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(71);
generatedTree.insert2pass(30);
generatedTree.insert2pass(93);
generatedTree.insert2pass(31);
generatedTree.insert2pass(80);
generatedTree.insert2pass(68);
generatedTree.insert2pass(78);
generatedTree.insert2pass(65);
generatedTree.insert2pass(60);
generatedTree.insert2pass(26);
generatedTree.insert2pass(98);
------------------------------

└── 71
    ├── 31, 61
    │   ├── 26, 30
    │   ├── 60
    │   └── 65, 68
    └── 80
        ├── 78
        └── 93, 98

------------------------------

generatedTree.delete(80)
generatedTree.delete(71)
generatedTree.delete(30)

------------------------------

└── 68
    ├── 31, 61
    │   ├── 26
    │   ├── 60
    │   └── 65
    └── 93
        ├── 78
        └── 98


------------------------------

END - TEST 271


START - TEST 272
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(42);
generatedTree.insert2pass(70);
generatedTree.insert2pass(72);
generatedTree.insert2pass(41);
generatedTree.insert2pass(39);
generatedTree.insert2pass(18);
generatedTree.insert2pass(90);
generatedTree.insert2pass(45);
generatedTree.insert2pass(85);
generatedTree.insert2pass(61);
generatedTree.insert2pass(21);
generatedTree.insert2pass(74);
generatedTree.insert2pass(76);
generatedTree.insert2pass(57);
generatedTree.insert2pass(48);
generatedTree.insert2pass(36);
generatedTree.insert2pass(51);
------------------------------

└── 49
    ├── 21, 41
    │   ├── 18
    │   ├── 36, 39
    │   └── 42, 45, 48
    └── 61, 72, 85
        ├── 51, 57
        ├── 70
        ├── 74, 76
        └── 90

------------------------------

generatedTree.delete(61)

------------------------------

└── 49
    ├── 21, 41
    │   ├── 18
    │   ├── 36, 39
    │   └── 42, 45, 48
    └── 57, 72, 85
        ├── 51
        ├── 70
        ├── 74, 76
        └── 90


------------------------------

END - TEST 272


START - TEST 273
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(28);
generatedTree.insert2pass(70);
generatedTree.insert2pass(46);
generatedTree.insert2pass(51);
generatedTree.insert2pass(76);
------------------------------

└── 28, 51
    ├── 26
    ├── 46
    └── 70, 76

------------------------------

generatedTree.delete(70)

------------------------------

└── 28, 51
    ├── 26
    ├── 46
    └── 76


------------------------------

END - TEST 273


START - TEST 274
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(45);
generatedTree.insert2pass(33);
generatedTree.insert2pass(95);
generatedTree.insert2pass(17);
generatedTree.insert2pass(94);
generatedTree.insert2pass(16);
generatedTree.insert2pass(39);
generatedTree.insert2pass(57);
------------------------------

└── 17, 44, 94
    ├── 16
    ├── 33, 39
    ├── 45, 57
    └── 95

------------------------------

generatedTree.delete(95)
generatedTree.delete(94)
generatedTree.delete(39)

------------------------------

└── 17, 44
    ├── 16
    ├── 33
    └── 45, 57


------------------------------

END - TEST 274


START - TEST 275
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(42);
generatedTree.insert2pass(39);
generatedTree.insert2pass(75);
generatedTree.insert2pass(86);
generatedTree.insert2pass(88);
generatedTree.insert2pass(71);
generatedTree.insert2pass(45);
generatedTree.insert2pass(12);
generatedTree.insert2pass(43);
generatedTree.insert2pass(47);
generatedTree.insert2pass(35);
generatedTree.insert2pass(49);
generatedTree.insert2pass(66);
generatedTree.insert2pass(36);
generatedTree.insert2pass(78);
generatedTree.insert2pass(96);
------------------------------

└── 71
    ├── 35, 42, 45
    │   ├── 12
    │   ├── 36, 39
    │   ├── 43
    │   └── 47, 49, 66
    └── 82
        ├── 75, 78
        └── 86, 88, 96

------------------------------

generatedTree.delete(88)
generatedTree.delete(86)
generatedTree.delete(45)

------------------------------

└── 43
    ├── 35, 39
    │   ├── 12
    │   ├── 36
    │   └── 42
    └── 71, 82
        ├── 47, 49, 66
        ├── 75, 78
        └── 96


------------------------------

END - TEST 275


START - TEST 276
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(92);
generatedTree.insert2pass(41);
generatedTree.insert2pass(30);
generatedTree.insert2pass(85);
generatedTree.insert2pass(60);
generatedTree.insert2pass(13);
generatedTree.insert2pass(73);
generatedTree.insert2pass(95);
generatedTree.insert2pass(66);
generatedTree.insert2pass(22);
generatedTree.insert2pass(28);
generatedTree.insert2pass(90);
generatedTree.insert2pass(55);
generatedTree.insert2pass(48);
generatedTree.insert2pass(61);
generatedTree.insert2pass(19);
generatedTree.insert2pass(80);
generatedTree.insert2pass(96);
------------------------------

└── 41, 66
    ├── 22, 30
    │   ├── 13, 19
    │   ├── 28
    │   └── 34
    ├── 55
    │   ├── 48
    │   └── 60, 61
    └── 85, 92
        ├── 73, 80
        ├── 90
        └── 95, 96

------------------------------

generatedTree.delete(19)
generatedTree.delete(95)

------------------------------

└── 41, 66
    ├── 22, 30
    │   ├── 13
    │   ├── 28
    │   └── 34
    ├── 55
    │   ├── 48
    │   └── 60, 61
    └── 85, 92
        ├── 73, 80
        ├── 90
        └── 96


------------------------------

END - TEST 276


START - TEST 277
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(41);
generatedTree.insert2pass(47);
generatedTree.insert2pass(81);
generatedTree.insert2pass(93);
generatedTree.insert2pass(40);
generatedTree.insert2pass(22);
generatedTree.insert2pass(61);
generatedTree.insert2pass(46);
generatedTree.insert2pass(67);
generatedTree.insert2pass(85);
generatedTree.insert2pass(36);
generatedTree.insert2pass(50);
generatedTree.insert2pass(66);
generatedTree.insert2pass(27);
generatedTree.insert2pass(15);
------------------------------

└── 47
    ├── 26, 41
    │   ├── 15, 22
    │   ├── 27, 36, 40
    │   └── 46
    └── 61, 81
        ├── 50
        ├── 66, 67
        └── 85, 93

------------------------------

generatedTree.delete(85)

------------------------------

└── 47
    ├── 26, 41
    │   ├── 15, 22
    │   ├── 27, 36, 40
    │   └── 46
    └── 61, 81
        ├── 50
        ├── 66, 67
        └── 93


------------------------------

END - TEST 277


START - TEST 278
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(25);
generatedTree.insert2pass(71);
generatedTree.insert2pass(56);
generatedTree.insert2pass(96);
generatedTree.insert2pass(95);
generatedTree.insert2pass(33);
generatedTree.insert2pass(16);
------------------------------

└── 25, 71
    ├── 16, 20
    ├── 33, 56
    └── 95, 96

------------------------------

generatedTree.delete(33)
generatedTree.delete(71)

------------------------------

└── 25, 95
    ├── 16, 20
    ├── 56
    └── 96


------------------------------

END - TEST 278


START - TEST 279
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(61);
generatedTree.insert2pass(63);
generatedTree.insert2pass(77);
generatedTree.insert2pass(96);
generatedTree.insert2pass(26);
generatedTree.insert2pass(74);
generatedTree.insert2pass(58);
generatedTree.insert2pass(87);
generatedTree.insert2pass(23);
generatedTree.insert2pass(54);
generatedTree.insert2pass(92);
generatedTree.insert2pass(16);
generatedTree.insert2pass(55);
generatedTree.insert2pass(75);
generatedTree.insert2pass(89);
generatedTree.insert2pass(41);
generatedTree.insert2pass(30);
------------------------------

└── 63
    ├── 26, 54, 58
    │   ├── 16, 23
    │   ├── 30, 41
    │   ├── 55
    │   └── 61
    └── 77, 93
        ├── 74, 75
        ├── 87, 89, 92
        └── 96

------------------------------

generatedTree.delete(75)
generatedTree.delete(55)
generatedTree.delete(74)

------------------------------

└── 63
    ├── 26, 41, 58
    │   ├── 16, 23
    │   ├── 30
    │   ├── 54
    │   └── 61
    └── 87, 93
        ├── 77
        ├── 89, 92
        └── 96


------------------------------

END - TEST 279


START - TEST 280
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(36);
generatedTree.insert2pass(64);
generatedTree.insert2pass(57);
generatedTree.insert2pass(47);
generatedTree.insert2pass(18);
------------------------------

└── 36
    ├── 18, 21
    └── 47, 57, 64

------------------------------

generatedTree.delete(64)

------------------------------

└── 36
    ├── 18, 21
    └── 47, 57


------------------------------

END - TEST 280


START - TEST 281
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(87);
generatedTree.insert2pass(30);
generatedTree.insert2pass(96);
generatedTree.insert2pass(49);
generatedTree.insert2pass(98);
generatedTree.insert2pass(84);
generatedTree.insert2pass(99);
generatedTree.insert2pass(76);
generatedTree.insert2pass(77);
generatedTree.insert2pass(17);
generatedTree.insert2pass(73);
generatedTree.insert2pass(29);
generatedTree.insert2pass(62);
generatedTree.insert2pass(59);
generatedTree.insert2pass(36);
------------------------------

└── 76
    ├── 30, 62
    │   ├── 17, 27, 29
    │   ├── 36, 49, 59
    │   └── 73
    └── 87
        ├── 77, 84
        └── 96, 98, 99

------------------------------

generatedTree.delete(73)

------------------------------

└── 76
    ├── 30, 59
    │   ├── 17, 27, 29
    │   ├── 36, 49
    │   └── 62
    └── 87
        ├── 77, 84
        └── 96, 98, 99


------------------------------

END - TEST 281


START - TEST 282
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(33);
generatedTree.insert2pass(93);
generatedTree.insert2pass(68);
generatedTree.insert2pass(57);
generatedTree.insert2pass(18);
generatedTree.insert2pass(92);
generatedTree.insert2pass(58);
generatedTree.insert2pass(49);
generatedTree.insert2pass(74);
generatedTree.insert2pass(23);
generatedTree.insert2pass(21);
generatedTree.insert2pass(20);
generatedTree.insert2pass(67);
------------------------------

└── 57
    ├── 21, 33
    │   ├── 18, 20
    │   ├── 23
    │   └── 49
    └── 68, 88
        ├── 58, 67
        ├── 74
        └── 92, 93

------------------------------

generatedTree.delete(18)

------------------------------

└── 57
    ├── 21, 33
    │   ├── 20
    │   ├── 23
    │   └── 49
    └── 68, 88
        ├── 58, 67
        ├── 74
        └── 92, 93


------------------------------

END - TEST 282


START - TEST 283
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(84);
generatedTree.insert2pass(55);
generatedTree.insert2pass(24);
------------------------------

└── 55
    ├── 24, 36
    └── 84

------------------------------

generatedTree.delete(36)

------------------------------

└── 55
    ├── 24
    └── 84


------------------------------

END - TEST 283


START - TEST 284
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(34);
generatedTree.insert2pass(55);
generatedTree.insert2pass(83);
generatedTree.insert2pass(68);
generatedTree.insert2pass(73);
generatedTree.insert2pass(25);
generatedTree.insert2pass(57);
generatedTree.insert2pass(69);
generatedTree.insert2pass(14);
generatedTree.insert2pass(18);
generatedTree.insert2pass(92);
generatedTree.insert2pass(36);
generatedTree.insert2pass(50);
------------------------------

└── 55
    ├── 25
    │   ├── 14, 18
    │   └── 34, 36, 50
    └── 68, 73
        ├── 57, 65
        ├── 69
        └── 83, 92

------------------------------

generatedTree.delete(83)
generatedTree.delete(14)
generatedTree.delete(73)

------------------------------

└── 55
    ├── 25
    │   ├── 18
    │   └── 34, 36, 50
    └── 68
        ├── 57, 65
        └── 69, 92


------------------------------

END - TEST 284


START - TEST 285
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(14);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
generatedTree.insert2pass(21);
generatedTree.insert2pass(24);
generatedTree.insert2pass(68);
generatedTree.insert2pass(60);
generatedTree.insert2pass(47);
generatedTree.insert2pass(39);
------------------------------

└── 15, 24, 63
    ├── 14
    ├── 21
    ├── 39, 47, 60
    └── 68, 86

------------------------------

generatedTree.delete(24)
generatedTree.delete(63)

------------------------------

└── 15, 39, 60
    ├── 14
    ├── 21
    ├── 47
    └── 68, 86


------------------------------

END - TEST 285


START - TEST 286
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(66);
generatedTree.insert2pass(53);
generatedTree.insert2pass(72);
generatedTree.insert2pass(57);
------------------------------

└── 53
    ├── 28
    └── 57, 66, 72

------------------------------

generatedTree.delete(28)
generatedTree.delete(57)

------------------------------

└── 66
    ├── 53
    └── 72


------------------------------

END - TEST 286


START - TEST 287
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(54);
generatedTree.insert2pass(95);
generatedTree.insert2pass(71);
generatedTree.insert2pass(53);
generatedTree.insert2pass(38);
------------------------------

└── 54, 75
    ├── 38, 53
    ├── 71
    └── 95

------------------------------

generatedTree.delete(75)
generatedTree.delete(54)

------------------------------

└── 53
    ├── 38
    └── 71, 95


------------------------------

END - TEST 287


START - TEST 288
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(56);
generatedTree.insert2pass(60);
generatedTree.insert2pass(50);
generatedTree.insert2pass(79);
generatedTree.insert2pass(38);
generatedTree.insert2pass(28);
generatedTree.insert2pass(93);
generatedTree.insert2pass(20);
generatedTree.insert2pass(94);
generatedTree.insert2pass(48);
------------------------------

└── 42, 56, 79
    ├── 20, 28, 38
    ├── 48, 50
    ├── 60
    └── 93, 94

------------------------------

generatedTree.delete(28)

------------------------------

└── 42, 56, 79
    ├── 20, 38
    ├── 48, 50
    ├── 60
    └── 93, 94


------------------------------

END - TEST 288


START - TEST 289
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(25);
generatedTree.insert2pass(26);
generatedTree.insert2pass(39);
generatedTree.insert2pass(73);
generatedTree.insert2pass(33);
generatedTree.insert2pass(19);
generatedTree.insert2pass(97);
------------------------------

└── 26, 73
    ├── 19, 25
    ├── 33, 39
    └── 87, 97

------------------------------

generatedTree.delete(73)

------------------------------

└── 26, 39
    ├── 19, 25
    ├── 33
    └── 87, 97


------------------------------

END - TEST 289


START - TEST 290
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(58);
generatedTree.insert2pass(65);
generatedTree.insert2pass(38);
generatedTree.insert2pass(13);
------------------------------

└── 65
    ├── 13, 38, 58
    └── 85

------------------------------

generatedTree.delete(38)
generatedTree.delete(58)
generatedTree.delete(65)

------------------------------

└── 13, 85


------------------------------

END - TEST 290


START - TEST 291
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(27);
generatedTree.insert2pass(44);
generatedTree.insert2pass(88);
generatedTree.insert2pass(22);
generatedTree.insert2pass(78);
generatedTree.insert2pass(32);
generatedTree.insert2pass(45);
generatedTree.insert2pass(29);
generatedTree.insert2pass(82);
------------------------------

└── 27, 44, 78
    ├── 22
    ├── 29, 32
    ├── 45, 68
    └── 82, 88

------------------------------

generatedTree.delete(82)
generatedTree.delete(22)
generatedTree.delete(78)

------------------------------

└── 29, 44, 68
    ├── 27
    ├── 32
    ├── 45
    └── 88


------------------------------

END - TEST 291


START - TEST 292
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(92);
generatedTree.insert2pass(79);
generatedTree.insert2pass(59);
generatedTree.insert2pass(49);
generatedTree.insert2pass(90);
generatedTree.insert2pass(65);
generatedTree.insert2pass(84);
generatedTree.insert2pass(52);
generatedTree.insert2pass(63);
generatedTree.insert2pass(54);
generatedTree.insert2pass(55);
generatedTree.insert2pass(76);
generatedTree.insert2pass(23);
generatedTree.insert2pass(32);
------------------------------

└── 58
    ├── 52
    │   ├── 23, 32, 49
    │   └── 54, 55
    └── 63, 79
        ├── 59
        ├── 65, 76
        └── 84, 90, 92

------------------------------

generatedTree.delete(32)
generatedTree.delete(84)

------------------------------

└── 58
    ├── 52
    │   ├── 23, 49
    │   └── 54, 55
    └── 63, 79
        ├── 59
        ├── 65, 76
        └── 90, 92


------------------------------

END - TEST 292


START - TEST 293
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(12);
generatedTree.insert2pass(27);
generatedTree.insert2pass(89);
generatedTree.insert2pass(63);
generatedTree.insert2pass(65);
generatedTree.insert2pass(35);
generatedTree.insert2pass(25);
generatedTree.insert2pass(19);
generatedTree.insert2pass(30);
generatedTree.insert2pass(26);
generatedTree.insert2pass(14);
generatedTree.insert2pass(32);
generatedTree.insert2pass(17);
generatedTree.insert2pass(56);
generatedTree.insert2pass(60);
generatedTree.insert2pass(37);
------------------------------

└── 27
    ├── 19
    │   ├── 12, 14, 17
    │   └── 25, 26
    └── 35, 56, 63
        ├── 30, 32
        ├── 37, 45
        ├── 60
        └── 65, 89

------------------------------

generatedTree.delete(26)

------------------------------

└── 35
    ├── 19, 27
    │   ├── 12, 14, 17
    │   ├── 25
    │   └── 30, 32
    └── 56, 63
        ├── 37, 45
        ├── 60
        └── 65, 89


------------------------------

END - TEST 293


START - TEST 294
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(41);
generatedTree.insert2pass(45);
generatedTree.insert2pass(50);
generatedTree.insert2pass(13);
generatedTree.insert2pass(31);
generatedTree.insert2pass(28);
generatedTree.insert2pass(60);
generatedTree.insert2pass(99);
generatedTree.insert2pass(87);
------------------------------

└── 31, 41, 50
    ├── 13, 28
    ├── 38
    ├── 45
    └── 60, 87, 99

------------------------------

generatedTree.delete(31)
generatedTree.delete(28)

------------------------------

└── 41, 50
    ├── 13, 38
    ├── 45
    └── 60, 87, 99


------------------------------

END - TEST 294


START - TEST 295
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(60);
generatedTree.insert2pass(11);
generatedTree.insert2pass(16);
generatedTree.insert2pass(82);
generatedTree.insert2pass(40);
generatedTree.insert2pass(28);
generatedTree.insert2pass(61);
generatedTree.insert2pass(39);
generatedTree.insert2pass(63);
generatedTree.insert2pass(32);
generatedTree.insert2pass(91);
------------------------------

└── 60
    ├── 16, 39
    │   ├── 11
    │   ├── 28, 32
    │   └── 40
    └── 64
        ├── 61, 63
        └── 82, 91

------------------------------

generatedTree.delete(61)
generatedTree.delete(11)

------------------------------

└── 60
    ├── 28, 39
    │   ├── 16
    │   ├── 32
    │   └── 40
    └── 64
        ├── 63
        └── 82, 91


------------------------------

END - TEST 295


START - TEST 296
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(43);
generatedTree.insert2pass(15);
generatedTree.insert2pass(70);
generatedTree.insert2pass(22);
generatedTree.insert2pass(83);
generatedTree.insert2pass(86);
generatedTree.insert2pass(21);
generatedTree.insert2pass(94);
generatedTree.insert2pass(23);
generatedTree.insert2pass(47);
generatedTree.insert2pass(95);
generatedTree.insert2pass(65);
generatedTree.insert2pass(45);
generatedTree.insert2pass(59);
generatedTree.insert2pass(75);
generatedTree.insert2pass(41);
generatedTree.insert2pass(87);
generatedTree.insert2pass(74);
generatedTree.insert2pass(60);
generatedTree.insert2pass(98);
------------------------------

└── 43, 76
    ├── 21
    │   ├── 15
    │   └── 22, 23, 41
    ├── 47, 65
    │   ├── 45
    │   ├── 59, 60
    │   └── 70, 74, 75
    └── 86, 94
        ├── 83
        ├── 87
        └── 95, 98

------------------------------

generatedTree.delete(83)

------------------------------

└── 43, 76
    ├── 21
    │   ├── 15
    │   └── 22, 23, 41
    ├── 47, 65
    │   ├── 45
    │   ├── 59, 60
    │   └── 70, 74, 75
    └── 94
        ├── 86, 87
        └── 95, 98


------------------------------

END - TEST 296


START - TEST 297
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(29);
generatedTree.insert2pass(36);
generatedTree.insert2pass(33);
generatedTree.insert2pass(68);
generatedTree.insert2pass(44);
generatedTree.insert2pass(42);
generatedTree.insert2pass(94);
generatedTree.insert2pass(39);
generatedTree.insert2pass(99);
generatedTree.insert2pass(26);
generatedTree.insert2pass(38);
generatedTree.insert2pass(64);
generatedTree.insert2pass(21);
generatedTree.insert2pass(89);
generatedTree.insert2pass(12);
generatedTree.insert2pass(59);
generatedTree.insert2pass(71);
------------------------------

└── 36
    ├── 25, 29
    │   ├── 12, 21
    │   ├── 26
    │   └── 33
    └── 44, 68, 94
        ├── 38, 39, 42
        ├── 59, 64
        ├── 71, 89
        └── 99

------------------------------

generatedTree.delete(59)

------------------------------

└── 36
    ├── 25, 29
    │   ├── 12, 21
    │   ├── 26
    │   └── 33
    └── 44, 68, 94
        ├── 38, 39, 42
        ├── 64
        ├── 71, 89
        └── 99


------------------------------

END - TEST 297


START - TEST 298
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(30);
generatedTree.insert2pass(88);
generatedTree.insert2pass(92);
------------------------------

└── 84
    ├── 30
    └── 88, 92

------------------------------

generatedTree.delete(88)

------------------------------

└── 84
    ├── 30
    └── 92


------------------------------

END - TEST 298


START - TEST 299
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(99);
generatedTree.insert2pass(36);
generatedTree.insert2pass(44);
generatedTree.insert2pass(14);
generatedTree.insert2pass(53);
generatedTree.insert2pass(87);
generatedTree.insert2pass(20);
generatedTree.insert2pass(48);
generatedTree.insert2pass(63);
generatedTree.insert2pass(56);
generatedTree.insert2pass(90);
generatedTree.insert2pass(88);
generatedTree.insert2pass(47);
generatedTree.insert2pass(77);
generatedTree.insert2pass(30);
generatedTree.insert2pass(50);
------------------------------

└── 53
    ├── 20, 44
    │   ├── 14
    │   ├── 30, 36
    │   └── 47, 48, 50
    └── 87
        ├── 56, 63, 77
        └── 88, 90, 99

------------------------------

generatedTree.delete(87)
generatedTree.delete(56)
generatedTree.delete(53)

------------------------------

└── 44
    ├── 20
    │   ├── 14
    │   └── 30, 36
    └── 50, 77
        ├── 47, 48
        ├── 63
        └── 88, 90, 99


------------------------------

END - TEST 299


START - TEST 300
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(77);
generatedTree.insert2pass(52);
generatedTree.insert2pass(18);
generatedTree.insert2pass(15);
generatedTree.insert2pass(21);
generatedTree.insert2pass(16);
generatedTree.insert2pass(14);
generatedTree.insert2pass(49);
generatedTree.insert2pass(48);
generatedTree.insert2pass(95);
generatedTree.insert2pass(83);
generatedTree.insert2pass(44);
generatedTree.insert2pass(38);
generatedTree.insert2pass(62);
generatedTree.insert2pass(69);
generatedTree.insert2pass(96);
------------------------------

└── 49
    ├── 18, 44
    │   ├── 14, 15, 16
    │   ├── 21, 38
    │   └── 48
    └── 77, 87
        ├── 52, 62, 69
        ├── 83
        └── 95, 96

------------------------------

generatedTree.delete(83)
generatedTree.delete(95)

------------------------------

└── 49
    ├── 18, 44
    │   ├── 14, 15, 16
    │   ├── 21, 38
    │   └── 48
    └── 69, 87
        ├── 52, 62
        ├── 77
        └── 96


------------------------------

END - TEST 300


START - TEST 301
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(93);
generatedTree.insert2pass(57);
generatedTree.insert2pass(82);
generatedTree.insert2pass(13);
generatedTree.insert2pass(32);
generatedTree.insert2pass(47);
generatedTree.insert2pass(20);
generatedTree.insert2pass(97);
------------------------------

└── 32, 59
    ├── 13, 20
    ├── 47, 57
    └── 82, 93, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(20)
generatedTree.delete(82)

------------------------------

└── 32, 59
    ├── 13
    ├── 47, 57
    └── 93


------------------------------

END - TEST 301


START - TEST 302
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(28);
generatedTree.insert2pass(32);
generatedTree.insert2pass(51);
generatedTree.insert2pass(61);
generatedTree.insert2pass(60);
generatedTree.insert2pass(93);
generatedTree.insert2pass(82);
generatedTree.insert2pass(40);
generatedTree.insert2pass(68);
generatedTree.insert2pass(35);
generatedTree.insert2pass(72);
generatedTree.insert2pass(75);
generatedTree.insert2pass(36);
generatedTree.insert2pass(55);
generatedTree.insert2pass(83);
generatedTree.insert2pass(62);
generatedTree.insert2pass(14);
generatedTree.insert2pass(98);
generatedTree.insert2pass(59);
generatedTree.insert2pass(53);
------------------------------

└── 51, 72
    ├── 28, 35
    │   ├── 12, 14
    │   ├── 32
    │   └── 36, 40
    ├── 59, 61
    │   ├── 53, 55
    │   ├── 60
    │   └── 62, 68
    └── 82
        ├── 75
        └── 83, 93, 98

------------------------------

generatedTree.delete(61)
generatedTree.delete(60)
generatedTree.delete(72)

------------------------------

└── 51, 68
    ├── 28, 35
    │   ├── 12, 14
    │   ├── 32
    │   └── 36, 40
    ├── 55
    │   ├── 53
    │   └── 59, 62
    └── 82
        ├── 75
        └── 83, 93, 98


------------------------------

END - TEST 302


START - TEST 303
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(40);
generatedTree.insert2pass(83);
generatedTree.insert2pass(29);
generatedTree.insert2pass(52);
generatedTree.insert2pass(11);
generatedTree.insert2pass(65);
generatedTree.insert2pass(47);
generatedTree.insert2pass(57);
generatedTree.insert2pass(99);
generatedTree.insert2pass(43);
generatedTree.insert2pass(18);
generatedTree.insert2pass(13);
generatedTree.insert2pass(79);
------------------------------

└── 52
    ├── 27, 40
    │   ├── 11, 13, 18
    │   ├── 29
    │   └── 43, 47
    └── 65
        ├── 57
        └── 79, 83, 99

------------------------------

generatedTree.delete(79)
generatedTree.delete(40)

------------------------------

└── 43
    ├── 27
    │   ├── 11, 13, 18
    │   └── 29
    └── 52, 65
        ├── 47
        ├── 57
        └── 83, 99


------------------------------

END - TEST 303


START - TEST 304
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(70);
generatedTree.insert2pass(46);
generatedTree.insert2pass(87);
generatedTree.insert2pass(78);
generatedTree.insert2pass(77);
------------------------------

└── 65, 78
    ├── 46
    ├── 70, 77
    └── 87

------------------------------

generatedTree.delete(78)
generatedTree.delete(65)
generatedTree.delete(46)

------------------------------

└── 77
    ├── 70
    └── 87


------------------------------

END - TEST 304


START - TEST 305
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(81);
generatedTree.insert2pass(28);
generatedTree.insert2pass(72);
generatedTree.insert2pass(19);
generatedTree.insert2pass(64);
------------------------------

└── 28, 81
    ├── 19
    ├── 64, 72
    └── 85

------------------------------

generatedTree.delete(72)
generatedTree.delete(64)
generatedTree.delete(85)

------------------------------

└── 28
    ├── 19
    └── 81


------------------------------

END - TEST 305


START - TEST 306
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(63);
generatedTree.insert2pass(31);
generatedTree.insert2pass(96);
generatedTree.insert2pass(76);
generatedTree.insert2pass(75);
generatedTree.insert2pass(71);
generatedTree.insert2pass(52);
generatedTree.insert2pass(90);
generatedTree.insert2pass(87);
generatedTree.insert2pass(38);
generatedTree.insert2pass(42);
generatedTree.insert2pass(69);
generatedTree.insert2pass(24);
generatedTree.insert2pass(72);
generatedTree.insert2pass(19);
generatedTree.insert2pass(20);
------------------------------

└── 71
    ├── 24, 38, 45
    │   ├── 19, 20
    │   ├── 31
    │   ├── 42
    │   └── 52, 63, 69
    └── 76
        ├── 72, 75
        └── 87, 90, 96

------------------------------

generatedTree.delete(90)
generatedTree.delete(71)

------------------------------

└── 45
    ├── 24, 38
    │   ├── 19, 20
    │   ├── 31
    │   └── 42
    └── 69, 76
        ├── 52, 63
        ├── 72, 75
        └── 87, 96


------------------------------

END - TEST 306


START - TEST 307
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(12);
generatedTree.insert2pass(22);
generatedTree.insert2pass(14);
generatedTree.insert2pass(60);
generatedTree.insert2pass(49);
generatedTree.insert2pass(40);
generatedTree.insert2pass(31);
generatedTree.insert2pass(63);
generatedTree.insert2pass(50);
generatedTree.insert2pass(33);
generatedTree.insert2pass(29);
generatedTree.insert2pass(97);
generatedTree.insert2pass(78);
------------------------------

└── 40
    ├── 22
    │   ├── 12, 14
    │   └── 29, 31, 33
    └── 60, 88
        ├── 49, 50
        ├── 63, 78
        └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(78)

------------------------------

└── 40
    ├── 22
    │   ├── 12, 14
    │   └── 29, 31, 33
    └── 60
        ├── 49, 50
        └── 63, 88


------------------------------

END - TEST 307


START - TEST 308
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(92);
generatedTree.insert2pass(48);
generatedTree.insert2pass(61);
generatedTree.insert2pass(13);
generatedTree.insert2pass(12);
generatedTree.insert2pass(78);
generatedTree.insert2pass(71);
generatedTree.insert2pass(88);
generatedTree.insert2pass(62);
generatedTree.insert2pass(30);
generatedTree.insert2pass(57);
generatedTree.insert2pass(25);
generatedTree.insert2pass(41);
generatedTree.insert2pass(55);
------------------------------

└── 48
    ├── 13, 25
    │   ├── 12
    │   ├── 16
    │   └── 30, 41
    └── 62, 78
        ├── 55, 57, 61
        ├── 71
        └── 88, 92

------------------------------

generatedTree.delete(41)

------------------------------

└── 48
    ├── 13, 25
    │   ├── 12
    │   ├── 16
    │   └── 30
    └── 62, 78
        ├── 55, 57, 61
        ├── 71
        └── 88, 92


------------------------------

END - TEST 308


START - TEST 309
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(80);
generatedTree.insert2pass(44);
generatedTree.insert2pass(51);
generatedTree.insert2pass(50);
generatedTree.insert2pass(64);
generatedTree.insert2pass(57);
generatedTree.insert2pass(98);
generatedTree.insert2pass(67);
generatedTree.insert2pass(73);
generatedTree.insert2pass(52);
generatedTree.insert2pass(18);
generatedTree.insert2pass(74);
------------------------------

└── 51
    ├── 44
    │   ├── 18, 20
    │   └── 50
    └── 64, 80
        ├── 52, 57
        ├── 67, 73, 74
        └── 98

------------------------------

generatedTree.delete(64)
generatedTree.delete(20)

------------------------------

└── 57
    ├── 44, 51
    │   ├── 18
    │   ├── 50
    │   └── 52
    └── 80
        ├── 67, 73, 74
        └── 98


------------------------------

END - TEST 309


START - TEST 310
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(35);
generatedTree.insert2pass(29);
generatedTree.insert2pass(41);
generatedTree.insert2pass(34);
generatedTree.insert2pass(99);
generatedTree.insert2pass(50);
generatedTree.insert2pass(28);
generatedTree.insert2pass(40);
generatedTree.insert2pass(15);
generatedTree.insert2pass(76);
generatedTree.insert2pass(33);
generatedTree.insert2pass(26);
generatedTree.insert2pass(65);
generatedTree.insert2pass(93);
generatedTree.insert2pass(79);
generatedTree.insert2pass(51);
------------------------------

└── 35
    ├── 29
    │   ├── 15, 26, 28
    │   └── 33, 34
    └── 41, 66, 93
        ├── 40
        ├── 50, 51, 65
        ├── 76, 79
        └── 99

------------------------------

generatedTree.delete(41)
generatedTree.delete(79)
generatedTree.delete(15)

------------------------------

└── 50
    ├── 29, 35
    │   ├── 26, 28
    │   ├── 33, 34
    │   └── 40
    └── 66, 93
        ├── 51, 65
        ├── 76
        └── 99


------------------------------

END - TEST 310


START - TEST 311
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(24);
generatedTree.insert2pass(89);
generatedTree.insert2pass(57);
generatedTree.insert2pass(42);
generatedTree.insert2pass(60);
generatedTree.insert2pass(37);
generatedTree.insert2pass(43);
generatedTree.insert2pass(80);
generatedTree.insert2pass(22);
generatedTree.insert2pass(77);
generatedTree.insert2pass(85);
generatedTree.insert2pass(68);
------------------------------

└── 24, 57, 80
    ├── 11, 22
    ├── 37, 42, 43
    ├── 60, 68, 77
    └── 85, 89

------------------------------

generatedTree.delete(37)

------------------------------

└── 24, 57, 80
    ├── 11, 22
    ├── 42, 43
    ├── 60, 68, 77
    └── 85, 89


------------------------------

END - TEST 311


START - TEST 312
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(36);
generatedTree.insert2pass(37);
generatedTree.insert2pass(54);
generatedTree.insert2pass(32);
generatedTree.insert2pass(67);
generatedTree.insert2pass(80);
generatedTree.insert2pass(68);
generatedTree.insert2pass(86);
generatedTree.insert2pass(34);
generatedTree.insert2pass(41);
generatedTree.insert2pass(48);
generatedTree.insert2pass(61);
generatedTree.insert2pass(33);
generatedTree.insert2pass(59);
generatedTree.insert2pass(84);
generatedTree.insert2pass(13);
generatedTree.insert2pass(76);
------------------------------

└── 54
    ├── 32, 36
    │   ├── 13, 31
    │   ├── 33, 34
    │   └── 37, 41, 48
    └── 68, 84
        ├── 59, 61, 67
        ├── 76, 80
        └── 86

------------------------------

generatedTree.delete(54)
generatedTree.delete(67)
generatedTree.delete(41)

------------------------------

└── 48
    ├── 32, 36
    │   ├── 13, 31
    │   ├── 33, 34
    │   └── 37
    └── 68, 84
        ├── 59, 61
        ├── 76, 80
        └── 86


------------------------------

END - TEST 312


START - TEST 313
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(63);
generatedTree.insert2pass(33);
generatedTree.insert2pass(78);
generatedTree.insert2pass(85);
generatedTree.insert2pass(41);
generatedTree.insert2pass(98);
generatedTree.insert2pass(46);
generatedTree.insert2pass(42);
generatedTree.insert2pass(17);
generatedTree.insert2pass(50);
generatedTree.insert2pass(88);
generatedTree.insert2pass(23);
generatedTree.insert2pass(40);
------------------------------

└── 63
    ├── 23, 41
    │   ├── 17
    │   ├── 33, 40
    │   └── 42, 46, 50
    └── 78
        ├── 74
        └── 85, 88, 98

------------------------------

generatedTree.delete(78)
generatedTree.delete(50)
generatedTree.delete(23)

------------------------------

└── 63
    ├── 33, 41
    │   ├── 17
    │   ├── 40
    │   └── 42, 46
    └── 85
        ├── 74
        └── 88, 98


------------------------------

END - TEST 313


START - TEST 314
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(69);
generatedTree.insert2pass(92);
generatedTree.insert2pass(36);
generatedTree.insert2pass(37);
generatedTree.insert2pass(68);
generatedTree.insert2pass(82);
generatedTree.insert2pass(59);
generatedTree.insert2pass(18);
generatedTree.insert2pass(11);
generatedTree.insert2pass(90);
generatedTree.insert2pass(17);
generatedTree.insert2pass(54);
generatedTree.insert2pass(57);
generatedTree.insert2pass(72);
------------------------------

└── 37
    ├── 18
    │   ├── 11, 17
    │   └── 36
    └── 59, 69, 90
        ├── 51, 54, 57
        ├── 68
        ├── 72, 82
        └── 92

------------------------------

generatedTree.delete(57)
generatedTree.delete(17)
generatedTree.delete(59)

------------------------------

└── 54
    ├── 18, 37
    │   ├── 11
    │   ├── 36
    │   └── 51
    └── 69, 90
        ├── 68
        ├── 72, 82
        └── 92


------------------------------

END - TEST 314


START - TEST 315
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(95);
generatedTree.insert2pass(35);
generatedTree.insert2pass(38);
generatedTree.insert2pass(89);
generatedTree.insert2pass(41);
generatedTree.insert2pass(91);
generatedTree.insert2pass(44);
generatedTree.insert2pass(64);
generatedTree.insert2pass(27);
generatedTree.insert2pass(28);
generatedTree.insert2pass(36);
generatedTree.insert2pass(40);
generatedTree.insert2pass(30);
generatedTree.insert2pass(50);
generatedTree.insert2pass(85);
generatedTree.insert2pass(63);
generatedTree.insert2pass(26);
------------------------------

└── 47
    ├── 28, 38
    │   ├── 26, 27
    │   ├── 30, 35, 36
    │   └── 40, 41, 44
    └── 64, 91
        ├── 50, 63
        ├── 85, 89
        └── 95

------------------------------

generatedTree.delete(64)
generatedTree.delete(44)

------------------------------

└── 47
    ├── 28, 38
    │   ├── 26, 27
    │   ├── 30, 35, 36
    │   └── 40, 41
    └── 63, 91
        ├── 50
        ├── 85, 89
        └── 95


------------------------------

END - TEST 315


START - TEST 316
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(48);
generatedTree.insert2pass(87);
generatedTree.insert2pass(62);
generatedTree.insert2pass(56);
generatedTree.insert2pass(80);
generatedTree.insert2pass(69);
generatedTree.insert2pass(68);
generatedTree.insert2pass(47);
generatedTree.insert2pass(50);
generatedTree.insert2pass(81);
generatedTree.insert2pass(64);
generatedTree.insert2pass(78);
generatedTree.insert2pass(35);
------------------------------

└── 62
    ├── 48
    │   ├── 35, 47
    │   └── 50, 56
    └── 68, 80
        ├── 64
        ├── 69, 78
        └── 81, 87

------------------------------

generatedTree.delete(35)

------------------------------

└── 68
    ├── 48, 62
    │   ├── 47
    │   ├── 50, 56
    │   └── 64
    └── 80
        ├── 69, 78
        └── 81, 87


------------------------------

END - TEST 316


START - TEST 317
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(96);
generatedTree.insert2pass(22);
generatedTree.insert2pass(92);
generatedTree.insert2pass(12);
generatedTree.insert2pass(39);
generatedTree.insert2pass(79);
generatedTree.insert2pass(19);
generatedTree.insert2pass(48);
------------------------------

└── 22, 62
    ├── 12, 19
    ├── 39, 48
    └── 79, 92, 96

------------------------------

generatedTree.delete(62)
generatedTree.delete(96)
generatedTree.delete(92)

------------------------------

└── 22, 48
    ├── 12, 19
    ├── 39
    └── 79


------------------------------

END - TEST 317


START - TEST 318
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(94);
generatedTree.insert2pass(67);
generatedTree.insert2pass(46);
generatedTree.insert2pass(89);
generatedTree.insert2pass(84);
generatedTree.insert2pass(59);
------------------------------

└── 67, 88
    ├── 46, 59
    ├── 84
    └── 89, 94

------------------------------

generatedTree.delete(88)

------------------------------

└── 67, 89
    ├── 46, 59
    ├── 84
    └── 94


------------------------------

END - TEST 318


START - TEST 319
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(74);
generatedTree.insert2pass(39);
generatedTree.insert2pass(98);
generatedTree.insert2pass(40);
generatedTree.insert2pass(29);
------------------------------

└── 74
    ├── 29, 39, 40
    └── 84, 98

------------------------------

generatedTree.delete(98)
generatedTree.delete(29)
generatedTree.delete(40)

------------------------------

└── 74
    ├── 39
    └── 84


------------------------------

END - TEST 319


START - TEST 320
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(19);
generatedTree.insert2pass(78);
generatedTree.insert2pass(84);
generatedTree.insert2pass(96);
generatedTree.insert2pass(95);
------------------------------

└── 34, 84
    ├── 19
    ├── 78
    └── 95, 96

------------------------------

generatedTree.delete(78)

------------------------------

└── 34, 95
    ├── 19
    ├── 84
    └── 96


------------------------------

END - TEST 320


START - TEST 321
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(11);
generatedTree.insert2pass(56);
generatedTree.insert2pass(14);
generatedTree.insert2pass(68);
------------------------------

└── 46
    ├── 11, 14
    └── 56, 68

------------------------------

generatedTree.delete(11)
generatedTree.delete(46)

------------------------------

└── 56
    ├── 14
    └── 68


------------------------------

END - TEST 321


START - TEST 322
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(26);
generatedTree.insert2pass(75);
generatedTree.insert2pass(48);
generatedTree.insert2pass(64);
generatedTree.insert2pass(82);
generatedTree.insert2pass(38);
generatedTree.insert2pass(57);
generatedTree.insert2pass(41);
------------------------------

└── 48, 74
    ├── 26, 38, 41
    ├── 57, 64
    └── 75, 82

------------------------------

generatedTree.delete(74)
generatedTree.delete(64)
generatedTree.delete(38)

------------------------------

└── 48, 75
    ├── 26, 41
    ├── 57
    └── 82


------------------------------

END - TEST 322


START - TEST 323
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(20);
generatedTree.insert2pass(49);
generatedTree.insert2pass(23);
generatedTree.insert2pass(57);
generatedTree.insert2pass(88);
generatedTree.insert2pass(59);
generatedTree.insert2pass(19);
generatedTree.insert2pass(32);
generatedTree.insert2pass(52);
generatedTree.insert2pass(13);
generatedTree.insert2pass(62);
generatedTree.insert2pass(93);
------------------------------

└── 35
    ├── 20
    │   ├── 13, 19
    │   └── 23, 32
    └── 57, 62
        ├── 49, 52
        ├── 59
        └── 88, 93

------------------------------

generatedTree.delete(57)

------------------------------

└── 35
    ├── 20
    │   ├── 13, 19
    │   └── 23, 32
    └── 52, 62
        ├── 49
        ├── 59
        └── 88, 93


------------------------------

END - TEST 323


START - TEST 324
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(55);
generatedTree.insert2pass(90);
generatedTree.insert2pass(53);
generatedTree.insert2pass(67);
generatedTree.insert2pass(62);
generatedTree.insert2pass(83);
generatedTree.insert2pass(36);
generatedTree.insert2pass(98);
generatedTree.insert2pass(79);
generatedTree.insert2pass(95);
generatedTree.insert2pass(13);
generatedTree.insert2pass(72);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(24);
generatedTree.insert2pass(57);
generatedTree.insert2pass(64);
generatedTree.insert2pass(74);
------------------------------

└── 67
    ├── 36, 55
    │   ├── 13, 24, 33
    │   ├── 37, 46, 53
    │   └── 57, 62, 64
    └── 79, 90
        ├── 72, 74
        ├── 83
        └── 95, 98

------------------------------

generatedTree.delete(33)
generatedTree.delete(53)
generatedTree.delete(67)

------------------------------

└── 64
    ├── 36, 55
    │   ├── 13, 24
    │   ├── 37, 46
    │   └── 57, 62
    └── 79, 90
        ├── 72, 74
        ├── 83
        └── 95, 98


------------------------------

END - TEST 324


START - TEST 325
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(41);
generatedTree.insert2pass(28);
generatedTree.insert2pass(19);
generatedTree.insert2pass(68);
generatedTree.insert2pass(57);
generatedTree.insert2pass(34);
generatedTree.insert2pass(84);
generatedTree.insert2pass(64);
generatedTree.insert2pass(35);
generatedTree.insert2pass(87);
generatedTree.insert2pass(74);
generatedTree.insert2pass(91);
generatedTree.insert2pass(37);
generatedTree.insert2pass(98);
generatedTree.insert2pass(59);
generatedTree.insert2pass(92);
generatedTree.insert2pass(95);
generatedTree.insert2pass(36);
------------------------------

└── 41
    ├── 28, 35
    │   ├── 19
    │   ├── 34
    │   └── 36, 37
    └── 68, 85, 91
        ├── 57, 59, 64
        ├── 74, 84
        ├── 87
        └── 92, 95, 98

------------------------------

generatedTree.delete(95)

------------------------------

└── 41
    ├── 28, 35
    │   ├── 19
    │   ├── 34
    │   └── 36, 37
    └── 68, 85, 91
        ├── 57, 59, 64
        ├── 74, 84
        ├── 87
        └── 92, 98


------------------------------

END - TEST 325


START - TEST 326
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(20);
generatedTree.insert2pass(63);
generatedTree.insert2pass(27);
generatedTree.insert2pass(62);
generatedTree.insert2pass(87);
generatedTree.insert2pass(67);
------------------------------

└── 63
    ├── 20, 27, 62
    └── 67, 71, 87

------------------------------

generatedTree.delete(87)
generatedTree.delete(20)
generatedTree.delete(63)

------------------------------

└── 62
    ├── 27
    └── 67, 71


------------------------------

END - TEST 326


START - TEST 327
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(19);
generatedTree.insert2pass(52);
generatedTree.insert2pass(51);
generatedTree.insert2pass(99);
generatedTree.insert2pass(50);
------------------------------

└── 49, 52
    ├── 19
    ├── 50, 51
    └── 99

------------------------------

generatedTree.delete(19)

------------------------------

└── 50, 52
    ├── 49
    ├── 51
    └── 99


------------------------------

END - TEST 327


START - TEST 328
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(11);
generatedTree.insert2pass(67);
generatedTree.insert2pass(21);
generatedTree.insert2pass(20);
generatedTree.insert2pass(47);
generatedTree.insert2pass(56);
generatedTree.insert2pass(89);
generatedTree.insert2pass(33);
generatedTree.insert2pass(35);
generatedTree.insert2pass(74);
generatedTree.insert2pass(30);
generatedTree.insert2pass(44);
generatedTree.insert2pass(91);
------------------------------

└── 47
    ├── 20, 33
    │   ├── 11
    │   ├── 21, 30
    │   └── 35, 44
    └── 67, 87
        ├── 56
        ├── 74
        └── 89, 91

------------------------------

generatedTree.delete(21)

------------------------------

└── 47
    ├── 20, 33
    │   ├── 11
    │   ├── 30
    │   └── 35, 44
    └── 67, 87
        ├── 56
        ├── 74
        └── 89, 91


------------------------------

END - TEST 328


START - TEST 329
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(37);
generatedTree.insert2pass(68);
generatedTree.insert2pass(85);
generatedTree.insert2pass(27);
generatedTree.insert2pass(28);
generatedTree.insert2pass(53);
generatedTree.insert2pass(95);
generatedTree.insert2pass(84);
------------------------------

└── 28, 68, 95
    ├── 27
    ├── 37, 53
    ├── 84, 85
    └── 98

------------------------------

generatedTree.delete(28)

------------------------------

└── 37, 68, 95
    ├── 27
    ├── 53
    ├── 84, 85
    └── 98


------------------------------

END - TEST 329


START - TEST 330
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(22);
generatedTree.insert2pass(11);
generatedTree.insert2pass(77);
generatedTree.insert2pass(76);
generatedTree.insert2pass(92);
generatedTree.insert2pass(30);
generatedTree.insert2pass(53);
generatedTree.insert2pass(95);
generatedTree.insert2pass(47);
generatedTree.insert2pass(83);
generatedTree.insert2pass(97);
generatedTree.insert2pass(35);
------------------------------

└── 33
    ├── 22
    │   ├── 11
    │   └── 30
    └── 76, 92
        ├── 35, 47, 53
        ├── 77, 83
        └── 95, 97

------------------------------

generatedTree.delete(11)
generatedTree.delete(83)
generatedTree.delete(53)

------------------------------

└── 33, 76, 92
    ├── 22, 30
    ├── 35, 47
    ├── 77
    └── 95, 97


------------------------------

END - TEST 330


START - TEST 331
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(90);
generatedTree.insert2pass(52);
generatedTree.insert2pass(50);
generatedTree.insert2pass(21);
generatedTree.insert2pass(20);
generatedTree.insert2pass(44);
generatedTree.insert2pass(85);
generatedTree.insert2pass(79);
generatedTree.insert2pass(32);
generatedTree.insert2pass(94);
generatedTree.insert2pass(40);
generatedTree.insert2pass(55);
generatedTree.insert2pass(39);
generatedTree.insert2pass(80);
generatedTree.insert2pass(93);
------------------------------

└── 50
    ├── 21, 40
    │   ├── 20
    │   ├── 32, 39
    │   └── 44
    └── 65, 85
        ├── 52, 55
        ├── 79, 80
        └── 90, 93, 94

------------------------------

generatedTree.delete(39)

------------------------------

└── 50
    ├── 21, 40
    │   ├── 20
    │   ├── 32
    │   └── 44
    └── 65, 85
        ├── 52, 55
        ├── 79, 80
        └── 90, 93, 94


------------------------------

END - TEST 331


START - TEST 332
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(37);
generatedTree.insert2pass(14);
generatedTree.insert2pass(52);
generatedTree.insert2pass(48);
generatedTree.insert2pass(22);
generatedTree.insert2pass(49);
generatedTree.insert2pass(13);
generatedTree.insert2pass(89);
------------------------------

└── 37, 52
    ├── 13, 14, 22
    ├── 48, 49
    └── 69, 89

------------------------------

generatedTree.delete(52)

------------------------------

└── 37, 49
    ├── 13, 14, 22
    ├── 48
    └── 69, 89


------------------------------

END - TEST 332


START - TEST 333
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(17);
generatedTree.insert2pass(86);
generatedTree.insert2pass(87);
generatedTree.insert2pass(74);
generatedTree.insert2pass(94);
generatedTree.insert2pass(29);
generatedTree.insert2pass(72);
generatedTree.insert2pass(89);
generatedTree.insert2pass(55);
generatedTree.insert2pass(47);
generatedTree.insert2pass(43);
generatedTree.insert2pass(16);
generatedTree.insert2pass(99);
------------------------------

└── 86
    ├── 29, 72
    │   ├── 16, 17
    │   ├── 43, 47, 55
    │   └── 74
    └── 90
        ├── 87, 89
        └── 94, 99

------------------------------

generatedTree.delete(16)
generatedTree.delete(72)
generatedTree.delete(86)

------------------------------

└── 74
    ├── 29, 47
    │   ├── 17
    │   ├── 43
    │   └── 55
    └── 90
        ├── 87, 89
        └── 94, 99


------------------------------

END - TEST 333


START - TEST 334
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(25);
generatedTree.insert2pass(43);
generatedTree.insert2pass(44);
generatedTree.insert2pass(26);
generatedTree.insert2pass(76);
generatedTree.insert2pass(11);
generatedTree.insert2pass(83);
generatedTree.insert2pass(77);
generatedTree.insert2pass(92);
------------------------------

└── 27, 44, 77
    ├── 11, 25, 26
    ├── 43
    ├── 76
    └── 83, 92

------------------------------

generatedTree.delete(26)
generatedTree.delete(92)

------------------------------

└── 27, 44, 77
    ├── 11, 25
    ├── 43
    ├── 76
    └── 83


------------------------------

END - TEST 334


START - TEST 335
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(38);
generatedTree.insert2pass(86);
generatedTree.insert2pass(99);
generatedTree.insert2pass(92);
generatedTree.insert2pass(39);
generatedTree.insert2pass(76);
generatedTree.insert2pass(12);
generatedTree.insert2pass(85);
------------------------------

└── 38, 76, 92
    ├── 12, 17
    ├── 39
    ├── 85, 86
    └── 99

------------------------------

generatedTree.delete(39)

------------------------------

└── 17, 76, 92
    ├── 12
    ├── 38
    ├── 85, 86
    └── 99


------------------------------

END - TEST 335


START - TEST 336
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(43);
generatedTree.insert2pass(42);
generatedTree.insert2pass(62);
generatedTree.insert2pass(32);
generatedTree.insert2pass(20);
generatedTree.insert2pass(73);
generatedTree.insert2pass(61);
generatedTree.insert2pass(98);
generatedTree.insert2pass(53);
generatedTree.insert2pass(68);
generatedTree.insert2pass(57);
generatedTree.insert2pass(39);
------------------------------

└── 53
    ├── 29, 42
    │   ├── 20
    │   ├── 32, 39
    │   └── 43
    └── 62
        ├── 57, 61
        └── 68, 73, 98

------------------------------

generatedTree.delete(53)
generatedTree.delete(57)

------------------------------

└── 39
    ├── 29
    │   ├── 20
    │   └── 32
    └── 43, 62
        ├── 42
        ├── 61
        └── 68, 73, 98


------------------------------

END - TEST 336


START - TEST 337
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(85);
generatedTree.insert2pass(65);
generatedTree.insert2pass(52);
generatedTree.insert2pass(54);
generatedTree.insert2pass(63);
generatedTree.insert2pass(94);
generatedTree.insert2pass(40);
generatedTree.insert2pass(92);
generatedTree.insert2pass(18);
generatedTree.insert2pass(19);
generatedTree.insert2pass(79);
generatedTree.insert2pass(27);
------------------------------

└── 40, 54, 85
    ├── 18, 19, 27
    ├── 52
    ├── 63, 65, 79
    └── 90, 92, 94

------------------------------

generatedTree.delete(92)

------------------------------

└── 40, 54, 85
    ├── 18, 19, 27
    ├── 52
    ├── 63, 65, 79
    └── 90, 94


------------------------------

END - TEST 337


START - TEST 338
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(66);
generatedTree.insert2pass(35);
generatedTree.insert2pass(89);
generatedTree.insert2pass(18);
generatedTree.insert2pass(98);
generatedTree.insert2pass(91);
generatedTree.insert2pass(75);
generatedTree.insert2pass(59);
------------------------------

└── 40, 89
    ├── 18, 35
    ├── 59, 66, 75
    └── 91, 98

------------------------------

generatedTree.delete(40)

------------------------------

└── 35, 89
    ├── 18
    ├── 59, 66, 75
    └── 91, 98


------------------------------

END - TEST 338


START - TEST 339
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(67);
generatedTree.insert2pass(95);
generatedTree.insert2pass(34);
generatedTree.insert2pass(97);
generatedTree.insert2pass(16);
generatedTree.insert2pass(48);
generatedTree.insert2pass(57);
generatedTree.insert2pass(42);
generatedTree.insert2pass(27);
generatedTree.insert2pass(25);
generatedTree.insert2pass(70);
generatedTree.insert2pass(84);
generatedTree.insert2pass(22);
generatedTree.insert2pass(33);
------------------------------

└── 67
    ├── 25, 34
    │   ├── 16, 22
    │   ├── 27, 33
    │   └── 42, 48, 57
    └── 95
        ├── 70, 84
        └── 97

------------------------------

generatedTree.delete(27)

------------------------------

└── 67
    ├── 25, 34
    │   ├── 16, 22
    │   ├── 33
    │   └── 42, 48, 57
    └── 95
        ├── 70, 84
        └── 97


------------------------------

END - TEST 339


START - TEST 340
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(96);
generatedTree.insert2pass(87);
generatedTree.insert2pass(24);
generatedTree.insert2pass(46);
generatedTree.insert2pass(18);
generatedTree.insert2pass(68);
generatedTree.insert2pass(60);
generatedTree.insert2pass(15);
generatedTree.insert2pass(88);
generatedTree.insert2pass(16);
generatedTree.insert2pass(48);
generatedTree.insert2pass(80);
generatedTree.insert2pass(40);
generatedTree.insert2pass(55);
generatedTree.insert2pass(59);
generatedTree.insert2pass(69);
------------------------------

└── 36
    ├── 18
    │   ├── 15, 16
    │   └── 24
    └── 46, 60, 87
        ├── 40
        ├── 48, 55, 59
        ├── 68, 69, 80
        └── 88, 96

------------------------------

generatedTree.delete(48)
generatedTree.delete(80)
generatedTree.delete(15)

------------------------------

└── 46
    ├── 18, 36
    │   ├── 16
    │   ├── 24
    │   └── 40
    └── 60, 87
        ├── 55, 59
        ├── 68, 69
        └── 88, 96


------------------------------

END - TEST 340


START - TEST 341
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(54);
generatedTree.insert2pass(32);
generatedTree.insert2pass(33);
generatedTree.insert2pass(72);
generatedTree.insert2pass(37);
generatedTree.insert2pass(91);
------------------------------

└── 32, 54
    ├── 24
    ├── 33, 37
    └── 72, 91

------------------------------

generatedTree.delete(32)
generatedTree.delete(24)
generatedTree.delete(91)

------------------------------

└── 54
    ├── 33, 37
    └── 72


------------------------------

END - TEST 341


START - TEST 342
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(63);
generatedTree.insert2pass(59);
generatedTree.insert2pass(54);
generatedTree.insert2pass(55);
generatedTree.insert2pass(41);
generatedTree.insert2pass(46);
generatedTree.insert2pass(79);
generatedTree.insert2pass(35);
generatedTree.insert2pass(16);
generatedTree.insert2pass(32);
generatedTree.insert2pass(48);
generatedTree.insert2pass(25);
generatedTree.insert2pass(62);
generatedTree.insert2pass(42);
generatedTree.insert2pass(45);
generatedTree.insert2pass(17);
generatedTree.insert2pass(15);
------------------------------

└── 55
    ├── 25, 35, 46
    │   ├── 15, 16, 17
    │   ├── 32
    │   ├── 41, 42, 45
    │   └── 48, 54
    └── 63
        ├── 59, 62
        └── 76, 79

------------------------------

generatedTree.delete(76)
generatedTree.delete(59)

------------------------------

└── 46
    ├── 25, 35
    │   ├── 15, 16, 17
    │   ├── 32
    │   └── 41, 42, 45
    └── 55, 63
        ├── 48, 54
        ├── 62
        └── 79


------------------------------

END - TEST 342


START - TEST 343
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(48);
generatedTree.insert2pass(85);
generatedTree.insert2pass(82);
generatedTree.insert2pass(29);
generatedTree.insert2pass(27);
generatedTree.insert2pass(59);
generatedTree.insert2pass(69);
generatedTree.insert2pass(62);
generatedTree.insert2pass(60);
generatedTree.insert2pass(66);
generatedTree.insert2pass(96);
generatedTree.insert2pass(72);
generatedTree.insert2pass(84);
generatedTree.insert2pass(38);
generatedTree.insert2pass(67);
generatedTree.insert2pass(50);
------------------------------

└── 62
    ├── 27, 48
    │   ├── 12
    │   ├── 29, 38
    │   └── 50, 59, 60
    └── 69, 82
        ├── 66, 67
        ├── 72
        └── 84, 85, 96

------------------------------

generatedTree.delete(27)
generatedTree.delete(38)

------------------------------

└── 62
    ├── 29, 50
    │   ├── 12
    │   ├── 48
    │   └── 59, 60
    └── 69, 82
        ├── 66, 67
        ├── 72
        └── 84, 85, 96


------------------------------

END - TEST 343


START - TEST 344
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(40);
generatedTree.insert2pass(70);
generatedTree.insert2pass(62);
generatedTree.insert2pass(97);
generatedTree.insert2pass(19);
generatedTree.insert2pass(92);
generatedTree.insert2pass(89);
generatedTree.insert2pass(64);
generatedTree.insert2pass(49);
generatedTree.insert2pass(24);
------------------------------

└── 40, 70, 92
    ├── 19, 24
    ├── 49, 62, 64
    ├── 76, 89
    └── 97

------------------------------

generatedTree.delete(19)
generatedTree.delete(76)
generatedTree.delete(62)

------------------------------

└── 40, 70, 92
    ├── 24
    ├── 49, 64
    ├── 89
    └── 97


------------------------------

END - TEST 344


START - TEST 345
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(81);
generatedTree.insert2pass(35);
generatedTree.insert2pass(20);
generatedTree.insert2pass(95);
generatedTree.insert2pass(21);
generatedTree.insert2pass(43);
generatedTree.insert2pass(30);
generatedTree.insert2pass(84);
generatedTree.insert2pass(75);
generatedTree.insert2pass(51);
generatedTree.insert2pass(38);
generatedTree.insert2pass(65);
generatedTree.insert2pass(80);
generatedTree.insert2pass(61);
generatedTree.insert2pass(36);
generatedTree.insert2pass(55);
generatedTree.insert2pass(42);
generatedTree.insert2pass(34);
generatedTree.insert2pass(96);
------------------------------

└── 35, 68
    ├── 21
    │   ├── 20
    │   └── 30, 34
    ├── 43, 61
    │   ├── 36, 38, 42
    │   ├── 51, 55
    │   └── 65
    └── 84
        ├── 75, 80, 81
        └── 95, 96

------------------------------

generatedTree.delete(81)

------------------------------

└── 35, 61
    ├── 21
    │   ├── 20
    │   └── 30, 34
    ├── 43
    │   ├── 36, 38, 42
    │   └── 51, 55
    └── 68, 84
        ├── 65
        ├── 75, 80
        └── 95, 96


------------------------------

END - TEST 345


START - TEST 346
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(91);
generatedTree.insert2pass(56);
generatedTree.insert2pass(47);
generatedTree.insert2pass(55);
generatedTree.insert2pass(29);
generatedTree.insert2pass(96);
generatedTree.insert2pass(64);
generatedTree.insert2pass(16);
generatedTree.insert2pass(42);
generatedTree.insert2pass(49);
generatedTree.insert2pass(11);
generatedTree.insert2pass(48);
generatedTree.insert2pass(66);
generatedTree.insert2pass(92);
generatedTree.insert2pass(38);
generatedTree.insert2pass(52);
generatedTree.insert2pass(28);
generatedTree.insert2pass(67);
generatedTree.insert2pass(50);
generatedTree.insert2pass(62);
------------------------------

└── 47, 56
    ├── 29
    │   ├── 11, 16, 28
    │   └── 38, 42
    ├── 49
    │   ├── 48
    │   └── 50, 52, 55
    └── 66, 91
        ├── 62, 64
        ├── 67
        └── 92, 96

------------------------------

generatedTree.delete(67)
generatedTree.delete(66)

------------------------------

└── 47, 56
    ├── 29
    │   ├── 11, 16, 28
    │   └── 38, 42
    ├── 49
    │   ├── 48
    │   └── 50, 52, 55
    └── 64, 92
        ├── 62
        ├── 91
        └── 96


------------------------------

END - TEST 346


START - TEST 347
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(77);
generatedTree.insert2pass(66);
generatedTree.insert2pass(80);
generatedTree.insert2pass(70);
generatedTree.insert2pass(18);
generatedTree.insert2pass(31);
------------------------------

└── 66
    ├── 18, 31, 59
    └── 70, 77, 80

------------------------------

generatedTree.delete(18)
generatedTree.delete(31)
generatedTree.delete(59)

------------------------------

└── 70
    ├── 66
    └── 77, 80


------------------------------

END - TEST 347


START - TEST 348
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(83);
generatedTree.insert2pass(84);
generatedTree.insert2pass(61);
generatedTree.insert2pass(41);
generatedTree.insert2pass(22);
generatedTree.insert2pass(67);
------------------------------

└── 41, 83
    ├── 16, 22
    ├── 61, 67
    └── 84

------------------------------

generatedTree.delete(67)
generatedTree.delete(22)
generatedTree.delete(84)

------------------------------

└── 41
    ├── 16
    └── 61, 83


------------------------------

END - TEST 348


START - TEST 349
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(12);
generatedTree.insert2pass(79);
generatedTree.insert2pass(94);
generatedTree.insert2pass(50);
generatedTree.insert2pass(78);
generatedTree.insert2pass(18);
------------------------------

└── 30, 79
    ├── 12, 18
    ├── 50, 78
    └── 94

------------------------------

generatedTree.delete(78)
generatedTree.delete(79)
generatedTree.delete(50)

------------------------------

└── 30
    ├── 12, 18
    └── 94


------------------------------

END - TEST 349


START - TEST 350
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(33);
generatedTree.insert2pass(74);
generatedTree.insert2pass(81);
generatedTree.insert2pass(38);
generatedTree.insert2pass(24);
generatedTree.insert2pass(94);
generatedTree.insert2pass(17);
generatedTree.insert2pass(36);
generatedTree.insert2pass(64);
generatedTree.insert2pass(28);
generatedTree.insert2pass(93);
generatedTree.insert2pass(61);
generatedTree.insert2pass(82);
------------------------------

└── 33
    ├── 17
    │   ├── 15
    │   └── 24, 28
    └── 38, 74, 93
        ├── 36
        ├── 61, 64
        ├── 81, 82
        └── 94

------------------------------

generatedTree.delete(38)

------------------------------

└── 33
    ├── 17
    │   ├── 15
    │   └── 24, 28
    └── 61, 74, 93
        ├── 36
        ├── 64
        ├── 81, 82
        └── 94


------------------------------

END - TEST 350


START - TEST 351
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(80);
generatedTree.insert2pass(88);
generatedTree.insert2pass(87);
generatedTree.insert2pass(50);
generatedTree.insert2pass(16);
generatedTree.insert2pass(85);
generatedTree.insert2pass(52);
generatedTree.insert2pass(82);
generatedTree.insert2pass(56);
generatedTree.insert2pass(27);
generatedTree.insert2pass(38);
generatedTree.insert2pass(30);
------------------------------

└── 80
    ├── 27, 50
    │   ├── 16
    │   ├── 30, 38
    │   └── 52, 56, 78
    └── 87
        ├── 82, 85
        └── 88

------------------------------

generatedTree.delete(80)
generatedTree.delete(82)
generatedTree.delete(30)

------------------------------

└── 78
    ├── 27, 50
    │   ├── 16
    │   ├── 38
    │   └── 52, 56
    └── 87
        ├── 85
        └── 88


------------------------------

END - TEST 351


START - TEST 352
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(76);
generatedTree.insert2pass(36);
generatedTree.insert2pass(15);
generatedTree.insert2pass(88);
generatedTree.insert2pass(42);
generatedTree.insert2pass(12);
generatedTree.insert2pass(17);
generatedTree.insert2pass(34);
generatedTree.insert2pass(91);
generatedTree.insert2pass(28);
generatedTree.insert2pass(31);
generatedTree.insert2pass(48);
generatedTree.insert2pass(85);
generatedTree.insert2pass(67);
generatedTree.insert2pass(30);
generatedTree.insert2pass(64);
------------------------------

└── 36
    ├── 15, 28
    │   ├── 12
    │   ├── 17
    │   └── 30, 31, 34
    └── 63, 76, 88
        ├── 42, 48
        ├── 64, 67
        ├── 85
        └── 91

------------------------------

generatedTree.delete(67)
generatedTree.delete(85)

------------------------------

└── 36
    ├── 15, 28
    │   ├── 12
    │   ├── 17
    │   └── 30, 31, 34
    └── 63, 88
        ├── 42, 48
        ├── 64, 76
        └── 91


------------------------------

END - TEST 352


START - TEST 353
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(84);
generatedTree.insert2pass(71);
generatedTree.insert2pass(93);
generatedTree.insert2pass(33);
------------------------------

└── 84
    ├── 33, 71
    └── 92, 93

------------------------------

generatedTree.delete(33)
generatedTree.delete(71)

------------------------------

└── 92
    ├── 84
    └── 93


------------------------------

END - TEST 353


START - TEST 354
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(63);
generatedTree.insert2pass(66);
generatedTree.insert2pass(84);
generatedTree.insert2pass(14);
generatedTree.insert2pass(16);
generatedTree.insert2pass(95);
generatedTree.insert2pass(24);
generatedTree.insert2pass(78);
generatedTree.insert2pass(74);
generatedTree.insert2pass(54);
generatedTree.insert2pass(88);
generatedTree.insert2pass(76);
generatedTree.insert2pass(15);
generatedTree.insert2pass(26);
generatedTree.insert2pass(27);
generatedTree.insert2pass(62);
------------------------------

└── 63
    ├── 16, 38
    │   ├── 14, 15
    │   ├── 24, 26, 27
    │   └── 54, 62
    └── 74, 84
        ├── 66
        ├── 76, 78
        └── 88, 95

------------------------------

generatedTree.delete(66)
generatedTree.delete(16)
generatedTree.delete(78)

------------------------------

└── 63
    ├── 15, 38
    │   ├── 14
    │   ├── 24, 26, 27
    │   └── 54, 62
    └── 76, 88
        ├── 74
        ├── 84
        └── 95


------------------------------

END - TEST 354


START - TEST 355
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(84);
generatedTree.insert2pass(72);
generatedTree.insert2pass(64);
generatedTree.insert2pass(20);
generatedTree.insert2pass(48);
generatedTree.insert2pass(41);
generatedTree.insert2pass(14);
------------------------------

└── 21, 72
    ├── 14, 20
    ├── 41, 48, 64
    └── 84

------------------------------

generatedTree.delete(41)

------------------------------

└── 21, 72
    ├── 14, 20
    ├── 48, 64
    └── 84


------------------------------

END - TEST 355


START - TEST 356
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(66);
generatedTree.insert2pass(92);
generatedTree.insert2pass(49);
generatedTree.insert2pass(72);
generatedTree.insert2pass(96);
generatedTree.insert2pass(55);
generatedTree.insert2pass(76);
generatedTree.insert2pass(54);
generatedTree.insert2pass(32);
------------------------------

└── 55, 66, 92
    ├── 32, 49, 54
    ├── 56
    ├── 72, 76
    └── 96

------------------------------

generatedTree.delete(96)
generatedTree.delete(72)

------------------------------

└── 55, 76
    ├── 32, 49, 54
    ├── 56, 66
    └── 92


------------------------------

END - TEST 356


START - TEST 357
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(34);
generatedTree.insert2pass(18);
generatedTree.insert2pass(30);
generatedTree.insert2pass(51);
generatedTree.insert2pass(65);
generatedTree.insert2pass(73);
generatedTree.insert2pass(77);
generatedTree.insert2pass(43);
generatedTree.insert2pass(66);
------------------------------

└── 20, 34, 65
    ├── 18
    ├── 30
    ├── 43, 51
    └── 66, 73, 77

------------------------------

generatedTree.delete(65)

------------------------------

└── 20, 34, 51
    ├── 18
    ├── 30
    ├── 43
    └── 66, 73, 77


------------------------------

END - TEST 357


START - TEST 358
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(33);
generatedTree.insert2pass(79);
generatedTree.insert2pass(34);
generatedTree.insert2pass(42);
generatedTree.insert2pass(87);
generatedTree.insert2pass(39);
generatedTree.insert2pass(36);
generatedTree.insert2pass(45);
generatedTree.insert2pass(12);
------------------------------

└── 34, 39, 71
    ├── 12, 33
    ├── 36
    ├── 42, 45
    └── 79, 87

------------------------------

generatedTree.delete(45)
generatedTree.delete(33)

------------------------------

└── 34, 39, 71
    ├── 12
    ├── 36
    ├── 42
    └── 79, 87


------------------------------

END - TEST 358


START - TEST 359
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(49);
generatedTree.insert2pass(94);
generatedTree.insert2pass(84);
generatedTree.insert2pass(51);
generatedTree.insert2pass(31);
generatedTree.insert2pass(92);
generatedTree.insert2pass(29);
generatedTree.insert2pass(66);
generatedTree.insert2pass(14);
generatedTree.insert2pass(83);
generatedTree.insert2pass(20);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(40);
generatedTree.insert2pass(22);
------------------------------

└── 58
    ├── 29, 37, 49
    │   ├── 14, 20, 22
    │   ├── 31
    │   ├── 40, 46
    │   └── 51
    └── 92
        ├── 66, 83, 84
        └── 94

------------------------------

generatedTree.delete(94)

------------------------------

└── 49
    ├── 29, 37
    │   ├── 14, 20, 22
    │   ├── 31
    │   └── 40, 46
    └── 58, 84
        ├── 51
        ├── 66, 83
        └── 92


------------------------------

END - TEST 359


START - TEST 360
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(87);
generatedTree.insert2pass(93);
generatedTree.insert2pass(25);
generatedTree.insert2pass(32);
generatedTree.insert2pass(23);
generatedTree.insert2pass(43);
generatedTree.insert2pass(44);
generatedTree.insert2pass(98);
generatedTree.insert2pass(76);
generatedTree.insert2pass(63);
generatedTree.insert2pass(19);
generatedTree.insert2pass(92);
generatedTree.insert2pass(61);
generatedTree.insert2pass(18);
------------------------------

└── 44
    ├── 23, 32
    │   ├── 18, 19
    │   ├── 25
    │   └── 43
    └── 76, 90
        ├── 61, 63
        ├── 87
        └── 92, 93, 98

------------------------------

generatedTree.delete(87)
generatedTree.delete(61)
generatedTree.delete(19)

------------------------------

└── 44
    ├── 23, 32
    │   ├── 18
    │   ├── 25
    │   └── 43
    └── 90
        ├── 63, 76
        └── 92, 93, 98


------------------------------

END - TEST 360


START - TEST 361
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(29);
generatedTree.insert2pass(35);
generatedTree.insert2pass(18);
generatedTree.insert2pass(83);
generatedTree.insert2pass(41);
generatedTree.insert2pass(52);
generatedTree.insert2pass(33);
generatedTree.insert2pass(51);
generatedTree.insert2pass(54);
generatedTree.insert2pass(53);
generatedTree.insert2pass(95);
generatedTree.insert2pass(14);
generatedTree.insert2pass(37);
------------------------------

└── 51
    ├── 29, 35
    │   ├── 14, 18
    │   ├── 33
    │   └── 37, 41
    └── 83
        ├── 52, 53, 54
        └── 92, 95

------------------------------

generatedTree.delete(29)
generatedTree.delete(92)
generatedTree.delete(33)

------------------------------

└── 51
    ├── 18, 37
    │   ├── 14
    │   ├── 35
    │   └── 41
    └── 83
        ├── 52, 53, 54
        └── 95


------------------------------

END - TEST 361


START - TEST 362
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(15);
generatedTree.insert2pass(50);
generatedTree.insert2pass(74);
generatedTree.insert2pass(71);
generatedTree.insert2pass(98);
generatedTree.insert2pass(20);
generatedTree.insert2pass(33);
generatedTree.insert2pass(58);
generatedTree.insert2pass(43);
generatedTree.insert2pass(87);
generatedTree.insert2pass(22);
generatedTree.insert2pass(94);
generatedTree.insert2pass(29);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
generatedTree.insert2pass(66);
generatedTree.insert2pass(18);
------------------------------

└── 50
    ├── 20, 33
    │   ├── 15, 18
    │   ├── 22, 29, 32
    │   └── 43
    └── 58, 71, 87
        ├── 54
        ├── 60, 66
        ├── 74
        └── 94, 98

------------------------------

generatedTree.delete(32)

------------------------------

└── 50
    ├── 20, 33
    │   ├── 15, 18
    │   ├── 22, 29
    │   └── 43
    └── 58, 71, 87
        ├── 54
        ├── 60, 66
        ├── 74
        └── 94, 98


------------------------------

END - TEST 362


START - TEST 363
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(82);
generatedTree.insert2pass(74);
generatedTree.insert2pass(22);
generatedTree.insert2pass(36);
generatedTree.insert2pass(33);
generatedTree.insert2pass(57);
generatedTree.insert2pass(32);
generatedTree.insert2pass(18);
generatedTree.insert2pass(20);
generatedTree.insert2pass(93);
generatedTree.insert2pass(84);
generatedTree.insert2pass(54);
generatedTree.insert2pass(92);
generatedTree.insert2pass(16);
------------------------------

└── 36
    ├── 20, 32
    │   ├── 16, 18
    │   ├── 22
    │   └── 33
    └── 74, 84
        ├── 44, 54, 57
        ├── 82
        └── 92, 93

------------------------------

generatedTree.delete(36)
generatedTree.delete(82)

------------------------------

└── 33
    ├── 20
    │   ├── 16, 18
    │   └── 22, 32
    └── 57, 84
        ├── 44, 54
        ├── 74
        └── 92, 93


------------------------------

END - TEST 363


START - TEST 364
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(23);
generatedTree.insert2pass(27);
generatedTree.insert2pass(13);
generatedTree.insert2pass(70);
generatedTree.insert2pass(73);
generatedTree.insert2pass(29);
generatedTree.insert2pass(76);
generatedTree.insert2pass(92);
generatedTree.insert2pass(81);
generatedTree.insert2pass(26);
generatedTree.insert2pass(97);
------------------------------

└── 27, 73, 76
    ├── 13, 23, 26
    ├── 29, 70
    ├── 74
    └── 81, 92, 97

------------------------------

generatedTree.delete(23)
generatedTree.delete(81)

------------------------------

└── 27, 73, 76
    ├── 13, 26
    ├── 29, 70
    ├── 74
    └── 92, 97


------------------------------

END - TEST 364


START - TEST 365
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(48);
generatedTree.insert2pass(72);
generatedTree.insert2pass(61);
generatedTree.insert2pass(20);
generatedTree.insert2pass(81);
generatedTree.insert2pass(88);
generatedTree.insert2pass(34);
generatedTree.insert2pass(65);
generatedTree.insert2pass(23);
generatedTree.insert2pass(73);
generatedTree.insert2pass(92);
generatedTree.insert2pass(11);
generatedTree.insert2pass(33);
------------------------------

└── 72
    ├── 23, 48
    │   ├── 11, 20
    │   ├── 33, 34
    │   └── 61, 65
    └── 83
        ├── 73, 81
        └── 88, 92

------------------------------

generatedTree.delete(33)

------------------------------

└── 72
    ├── 23, 48
    │   ├── 11, 20
    │   ├── 34
    │   └── 61, 65
    └── 83
        ├── 73, 81
        └── 88, 92


------------------------------

END - TEST 365


START - TEST 366
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(93);
generatedTree.insert2pass(32);
generatedTree.insert2pass(85);
generatedTree.insert2pass(36);
generatedTree.insert2pass(25);
generatedTree.insert2pass(29);
generatedTree.insert2pass(55);
generatedTree.insert2pass(58);
generatedTree.insert2pass(38);
generatedTree.insert2pass(88);
generatedTree.insert2pass(79);
generatedTree.insert2pass(33);
generatedTree.insert2pass(76);
generatedTree.insert2pass(97);
generatedTree.insert2pass(20);
------------------------------

└── 55
    ├── 32
    │   ├── 20, 25, 29
    │   └── 33, 36, 38
    └── 68, 88
        ├── 58
        ├── 76, 79, 85
        └── 93, 97

------------------------------

generatedTree.delete(79)
generatedTree.delete(85)

------------------------------

└── 55
    ├── 32
    │   ├── 20, 25, 29
    │   └── 33, 36, 38
    └── 68, 88
        ├── 58
        ├── 76
        └── 93, 97


------------------------------

END - TEST 366


START - TEST 367
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(79);
generatedTree.insert2pass(86);
generatedTree.insert2pass(19);
generatedTree.insert2pass(23);
generatedTree.insert2pass(11);
generatedTree.insert2pass(32);
generatedTree.insert2pass(43);
generatedTree.insert2pass(59);
generatedTree.insert2pass(50);
generatedTree.insert2pass(58);
------------------------------

└── 43
    ├── 23
    │   ├── 11, 19
    │   └── 32
    └── 59, 85
        ├── 50, 58
        ├── 79
        └── 86

------------------------------

generatedTree.delete(19)

------------------------------

└── 59
    ├── 23, 43
    │   ├── 11
    │   ├── 32
    │   └── 50, 58
    └── 85
        ├── 79
        └── 86


------------------------------

END - TEST 367


START - TEST 368
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(12);
generatedTree.insert2pass(11);
generatedTree.insert2pass(29);
generatedTree.insert2pass(19);
generatedTree.insert2pass(37);
generatedTree.insert2pass(53);
generatedTree.insert2pass(90);
------------------------------

└── 12, 29, 45
    ├── 11
    ├── 19
    ├── 37
    └── 53, 90

------------------------------

generatedTree.delete(29)
generatedTree.delete(90)

------------------------------

└── 12, 45
    ├── 11
    ├── 19, 37
    └── 53


------------------------------

END - TEST 368


START - TEST 369
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(93);
generatedTree.insert2pass(95);
generatedTree.insert2pass(31);
generatedTree.insert2pass(83);
generatedTree.insert2pass(46);
generatedTree.insert2pass(45);
generatedTree.insert2pass(66);
generatedTree.insert2pass(64);
generatedTree.insert2pass(96);
generatedTree.insert2pass(75);
generatedTree.insert2pass(85);
generatedTree.insert2pass(13);
generatedTree.insert2pass(69);
generatedTree.insert2pass(17);
generatedTree.insert2pass(23);
generatedTree.insert2pass(97);
------------------------------

└── 83
    ├── 17, 45, 64
    │   ├── 13
    │   ├── 23, 31
    │   ├── 46
    │   └── 66, 69, 75
    └── 93
        ├── 85, 90
        └── 95, 96, 97

------------------------------

generatedTree.delete(66)
generatedTree.delete(45)
generatedTree.delete(96)

------------------------------

└── 64
    ├── 17, 31
    │   ├── 13
    │   ├── 23
    │   └── 46
    └── 83, 93
        ├── 69, 75
        ├── 85, 90
        └── 95, 97


------------------------------

END - TEST 369


START - TEST 370
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(27);
generatedTree.insert2pass(23);
generatedTree.insert2pass(99);
generatedTree.insert2pass(76);
generatedTree.insert2pass(25);
generatedTree.insert2pass(39);
generatedTree.insert2pass(92);
generatedTree.insert2pass(89);
generatedTree.insert2pass(96);
generatedTree.insert2pass(73);
generatedTree.insert2pass(72);
generatedTree.insert2pass(70);
generatedTree.insert2pass(83);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
------------------------------

└── 76
    ├── 27, 51, 72
    │   ├── 23, 25
    │   ├── 32, 39
    │   ├── 60, 70
    │   └── 73
    └── 92
        ├── 83, 89
        └── 96, 99

------------------------------

generatedTree.delete(39)
generatedTree.delete(99)
generatedTree.delete(72)

------------------------------

└── 70
    ├── 27, 51
    │   ├── 23, 25
    │   ├── 32
    │   └── 60
    └── 76, 92
        ├── 73
        ├── 83, 89
        └── 96


------------------------------

END - TEST 370


START - TEST 371
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(72);
generatedTree.insert2pass(26);
generatedTree.insert2pass(97);
generatedTree.insert2pass(14);
generatedTree.insert2pass(40);
generatedTree.insert2pass(13);
generatedTree.insert2pass(75);
generatedTree.insert2pass(48);
generatedTree.insert2pass(17);
generatedTree.insert2pass(18);
generatedTree.insert2pass(73);
generatedTree.insert2pass(52);
generatedTree.insert2pass(71);
------------------------------

└── 26
    ├── 14
    │   ├── 13
    │   └── 17, 18
    └── 48, 72
        ├── 40
        ├── 52, 71
        └── 73, 75, 97

------------------------------

generatedTree.delete(75)
generatedTree.delete(18)

------------------------------

└── 48
    ├── 14, 26
    │   ├── 13
    │   ├── 17
    │   └── 40
    └── 72
        ├── 52, 71
        └── 73, 97


------------------------------

END - TEST 371


START - TEST 372
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(67);
generatedTree.insert2pass(84);
generatedTree.insert2pass(27);
generatedTree.insert2pass(49);
generatedTree.insert2pass(53);
generatedTree.insert2pass(96);
generatedTree.insert2pass(16);
generatedTree.insert2pass(98);
generatedTree.insert2pass(92);
generatedTree.insert2pass(87);
generatedTree.insert2pass(56);
generatedTree.insert2pass(47);
generatedTree.insert2pass(69);
generatedTree.insert2pass(93);
generatedTree.insert2pass(38);
generatedTree.insert2pass(64);
generatedTree.insert2pass(24);
generatedTree.insert2pass(62);
------------------------------

└── 67
    ├── 27, 49, 56
    │   ├── 16, 24
    │   ├── 38, 47
    │   ├── 53
    │   └── 62, 64
    └── 87, 96
        ├── 69, 84
        ├── 92, 93
        └── 98

------------------------------

generatedTree.delete(98)
generatedTree.delete(27)

------------------------------

└── 67
    ├── 24, 49, 56
    │   ├── 16
    │   ├── 38, 47
    │   ├── 53
    │   └── 62, 64
    └── 87, 93
        ├── 69, 84
        ├── 92
        └── 96


------------------------------

END - TEST 372


START - TEST 373
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(64);
generatedTree.insert2pass(38);
generatedTree.insert2pass(98);
generatedTree.insert2pass(57);
generatedTree.insert2pass(23);
generatedTree.insert2pass(49);
generatedTree.insert2pass(76);
generatedTree.insert2pass(40);
generatedTree.insert2pass(16);
generatedTree.insert2pass(26);
generatedTree.insert2pass(85);
generatedTree.insert2pass(82);
generatedTree.insert2pass(20);
generatedTree.insert2pass(94);
generatedTree.insert2pass(39);
generatedTree.insert2pass(97);
generatedTree.insert2pass(68);
------------------------------

└── 46
    ├── 23, 38
    │   ├── 16, 20
    │   ├── 26
    │   └── 39, 40
    └── 64, 85
        ├── 49, 57
        ├── 68, 76, 82
        └── 94, 97, 98

------------------------------

generatedTree.delete(98)

------------------------------

└── 46
    ├── 23, 38
    │   ├── 16, 20
    │   ├── 26
    │   └── 39, 40
    └── 64, 85
        ├── 49, 57
        ├── 68, 76, 82
        └── 94, 97


------------------------------

END - TEST 373


START - TEST 374
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(50);
generatedTree.insert2pass(64);
generatedTree.insert2pass(69);
generatedTree.insert2pass(80);
generatedTree.insert2pass(24);
generatedTree.insert2pass(89);
------------------------------

└── 50, 69
    ├── 24, 36
    ├── 64
    └── 80, 89

------------------------------

generatedTree.delete(64)

------------------------------

└── 36, 69
    ├── 24
    ├── 50
    └── 80, 89


------------------------------

END - TEST 374


START - TEST 375
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(81);
generatedTree.insert2pass(80);
generatedTree.insert2pass(97);
generatedTree.insert2pass(73);
generatedTree.insert2pass(28);
generatedTree.insert2pass(46);
generatedTree.insert2pass(95);
generatedTree.insert2pass(17);
generatedTree.insert2pass(79);
generatedTree.insert2pass(32);
generatedTree.insert2pass(83);
generatedTree.insert2pass(78);
generatedTree.insert2pass(13);
generatedTree.insert2pass(75);
generatedTree.insert2pass(48);
generatedTree.insert2pass(90);
generatedTree.insert2pass(51);
generatedTree.insert2pass(25);
generatedTree.insert2pass(54);
generatedTree.insert2pass(23);
------------------------------

└── 73
    ├── 17, 28, 46
    │   ├── 13
    │   ├── 23, 25
    │   ├── 32
    │   └── 48, 51, 54
    └── 79, 81, 95
        ├── 75, 78
        ├── 80
        ├── 83, 90
        └── 97

------------------------------

generatedTree.delete(13)

------------------------------

└── 73
    ├── 23, 28, 46
    │   ├── 17
    │   ├── 25
    │   ├── 32
    │   └── 48, 51, 54
    └── 79, 81, 95
        ├── 75, 78
        ├── 80
        ├── 83, 90
        └── 97


------------------------------

END - TEST 375


START - TEST 376
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(12);
generatedTree.insert2pass(91);
generatedTree.insert2pass(78);
generatedTree.insert2pass(80);
------------------------------

└── 50
    ├── 12
    └── 78, 80, 91

------------------------------

generatedTree.delete(91)
generatedTree.delete(50)

------------------------------

└── 78
    ├── 12
    └── 80


------------------------------

END - TEST 376


START - TEST 377
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(67);
generatedTree.insert2pass(73);
generatedTree.insert2pass(18);
generatedTree.insert2pass(53);
generatedTree.insert2pass(46);
generatedTree.insert2pass(92);
generatedTree.insert2pass(95);
generatedTree.insert2pass(51);
generatedTree.insert2pass(99);
generatedTree.insert2pass(25);
generatedTree.insert2pass(39);
generatedTree.insert2pass(27);
generatedTree.insert2pass(62);
generatedTree.insert2pass(86);
generatedTree.insert2pass(12);
generatedTree.insert2pass(66);
generatedTree.insert2pass(71);
------------------------------

└── 46, 73
    ├── 25
    │   ├── 12, 18
    │   └── 27, 39
    ├── 53, 66
    │   ├── 51
    │   ├── 62
    │   └── 67, 71
    └── 92
        ├── 78, 86
        └── 95, 99

------------------------------

generatedTree.delete(78)
generatedTree.delete(18)

------------------------------

└── 66
    ├── 25, 46, 53
    │   ├── 12
    │   ├── 27, 39
    │   ├── 51
    │   └── 62
    └── 73, 92
        ├── 67, 71
        ├── 86
        └── 95, 99


------------------------------

END - TEST 377


START - TEST 378
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(32);
generatedTree.insert2pass(47);
generatedTree.insert2pass(70);
generatedTree.insert2pass(49);
generatedTree.insert2pass(68);
generatedTree.insert2pass(99);
generatedTree.insert2pass(82);
generatedTree.insert2pass(62);
generatedTree.insert2pass(90);
generatedTree.insert2pass(58);
generatedTree.insert2pass(98);
generatedTree.insert2pass(19);
generatedTree.insert2pass(12);
generatedTree.insert2pass(75);
generatedTree.insert2pass(48);
generatedTree.insert2pass(81);
generatedTree.insert2pass(52);
------------------------------

└── 49
    ├── 32
    │   ├── 12, 16, 19
    │   └── 47, 48
    └── 62, 70, 90
        ├── 52, 58
        ├── 68
        ├── 75, 81, 82
        └── 98, 99

------------------------------

generatedTree.delete(99)
generatedTree.delete(81)

------------------------------

└── 49
    ├── 32
    │   ├── 12, 16, 19
    │   └── 47, 48
    └── 62, 70, 90
        ├── 52, 58
        ├── 68
        ├── 75, 82
        └── 98


------------------------------

END - TEST 378


START - TEST 379
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(50);
generatedTree.insert2pass(92);
generatedTree.insert2pass(77);
generatedTree.insert2pass(32);
generatedTree.insert2pass(79);
generatedTree.insert2pass(28);
generatedTree.insert2pass(24);
generatedTree.insert2pass(15);
generatedTree.insert2pass(31);
generatedTree.insert2pass(59);
generatedTree.insert2pass(25);
generatedTree.insert2pass(83);
generatedTree.insert2pass(99);
generatedTree.insert2pass(21);
------------------------------

└── 32
    ├── 24
    │   ├── 15, 21
    │   └── 25, 28, 31
    └── 50, 79
        ├── 35
        ├── 59, 77
        └── 83, 92, 99

------------------------------

generatedTree.delete(83)
generatedTree.delete(77)
generatedTree.delete(24)

------------------------------

└── 50
    ├── 21, 32
    │   ├── 15
    │   ├── 25, 28, 31
    │   └── 35
    └── 79
        ├── 59
        └── 92, 99


------------------------------

END - TEST 379


START - TEST 380
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(91);
generatedTree.insert2pass(32);
generatedTree.insert2pass(98);
generatedTree.insert2pass(36);
generatedTree.insert2pass(72);
generatedTree.insert2pass(85);
generatedTree.insert2pass(25);
generatedTree.insert2pass(12);
------------------------------

└── 36, 91
    ├── 12, 25, 32
    ├── 72, 85
    └── 98

------------------------------

generatedTree.delete(72)
generatedTree.delete(91)

------------------------------

└── 36
    ├── 12, 25, 32
    └── 85, 98


------------------------------

END - TEST 380


START - TEST 381
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(32);
generatedTree.insert2pass(45);
generatedTree.insert2pass(84);
generatedTree.insert2pass(70);
generatedTree.insert2pass(71);
generatedTree.insert2pass(12);
generatedTree.insert2pass(44);
generatedTree.insert2pass(90);
generatedTree.insert2pass(96);
generatedTree.insert2pass(64);
generatedTree.insert2pass(23);
generatedTree.insert2pass(35);
generatedTree.insert2pass(97);
generatedTree.insert2pass(27);
generatedTree.insert2pass(74);
generatedTree.insert2pass(67);
generatedTree.insert2pass(28);
------------------------------

└── 70
    ├── 23, 32, 45
    │   ├── 12
    │   ├── 26, 27, 28
    │   ├── 35, 44
    │   └── 64, 67
    └── 84
        ├── 71, 74
        └── 90, 96, 97

------------------------------

generatedTree.delete(32)

------------------------------

└── 70
    ├── 23, 28, 45
    │   ├── 12
    │   ├── 26, 27
    │   ├── 35, 44
    │   └── 64, 67
    └── 84
        ├── 71, 74
        └── 90, 96, 97


------------------------------

END - TEST 381


START - TEST 382
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(63);
generatedTree.insert2pass(67);
generatedTree.insert2pass(95);
generatedTree.insert2pass(82);
generatedTree.insert2pass(27);
------------------------------

└── 63
    ├── 27, 31
    └── 67, 82, 95

------------------------------

generatedTree.delete(67)
generatedTree.delete(63)

------------------------------

└── 31
    ├── 27
    └── 82, 95


------------------------------

END - TEST 382


START - TEST 383
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(85);
generatedTree.insert2pass(16);
generatedTree.insert2pass(75);
generatedTree.insert2pass(19);
------------------------------

└── 70
    ├── 16, 19
    └── 75, 85

------------------------------

generatedTree.delete(19)

------------------------------

└── 70
    ├── 16
    └── 75, 85


------------------------------

END - TEST 383


START - TEST 384
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(97);
generatedTree.insert2pass(16);
generatedTree.insert2pass(42);
generatedTree.insert2pass(19);
generatedTree.insert2pass(14);
generatedTree.insert2pass(22);
generatedTree.insert2pass(54);
------------------------------

└── 19, 68
    ├── 14, 16
    ├── 22, 42, 54
    └── 97

------------------------------

generatedTree.delete(19)
generatedTree.delete(14)
generatedTree.delete(97)

------------------------------

└── 22, 54
    ├── 16
    ├── 42
    └── 68


------------------------------

END - TEST 384


START - TEST 385
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(37);
generatedTree.insert2pass(14);
generatedTree.insert2pass(95);
generatedTree.insert2pass(35);
generatedTree.insert2pass(39);
generatedTree.insert2pass(57);
generatedTree.insert2pass(73);
generatedTree.insert2pass(46);
generatedTree.insert2pass(45);
generatedTree.insert2pass(53);
generatedTree.insert2pass(20);
generatedTree.insert2pass(89);
generatedTree.insert2pass(69);
generatedTree.insert2pass(64);
generatedTree.insert2pass(19);
generatedTree.insert2pass(38);
------------------------------

└── 57
    ├── 20, 37, 45
    │   ├── 14, 19
    │   ├── 35
    │   ├── 38, 39
    │   └── 46, 53
    └── 73, 92
        ├── 64, 69
        ├── 89
        └── 95

------------------------------

generatedTree.delete(35)

------------------------------

└── 57
    ├── 19, 37, 45
    │   ├── 14
    │   ├── 20
    │   ├── 38, 39
    │   └── 46, 53
    └── 73, 92
        ├── 64, 69
        ├── 89
        └── 95


------------------------------

END - TEST 385


START - TEST 386
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(22);
generatedTree.insert2pass(48);
generatedTree.insert2pass(89);
generatedTree.insert2pass(68);
generatedTree.insert2pass(47);
generatedTree.insert2pass(14);
generatedTree.insert2pass(15);
generatedTree.insert2pass(27);
generatedTree.insert2pass(58);
generatedTree.insert2pass(12);
generatedTree.insert2pass(41);
------------------------------

└── 22, 48, 73
    ├── 12, 14, 15
    ├── 27, 41, 47
    ├── 58, 68
    └── 89

------------------------------

generatedTree.delete(48)
generatedTree.delete(14)
generatedTree.delete(68)

------------------------------

└── 22, 47, 73
    ├── 12, 15
    ├── 27, 41
    ├── 58
    └── 89


------------------------------

END - TEST 386


START - TEST 387
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(47);
generatedTree.insert2pass(34);
generatedTree.insert2pass(53);
generatedTree.insert2pass(93);
generatedTree.insert2pass(11);
generatedTree.insert2pass(17);
generatedTree.insert2pass(19);
generatedTree.insert2pass(77);
generatedTree.insert2pass(96);
generatedTree.insert2pass(78);
generatedTree.insert2pass(51);
generatedTree.insert2pass(46);
generatedTree.insert2pass(14);
generatedTree.insert2pass(84);
generatedTree.insert2pass(12);
generatedTree.insert2pass(43);
generatedTree.insert2pass(70);
generatedTree.insert2pass(28);
------------------------------

└── 47
    ├── 17, 34
    │   ├── 11, 12, 14
    │   ├── 19, 28
    │   └── 43, 46
    └── 53, 78, 93
        ├── 49, 51
        ├── 70, 77
        ├── 84
        └── 96

------------------------------

generatedTree.delete(47)

------------------------------

└── 46
    ├── 17, 34
    │   ├── 11, 12, 14
    │   ├── 19, 28
    │   └── 43
    └── 53, 78, 93
        ├── 49, 51
        ├── 70, 77
        ├── 84
        └── 96


------------------------------

END - TEST 387


START - TEST 388
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(31);
generatedTree.insert2pass(85);
generatedTree.insert2pass(60);
generatedTree.insert2pass(81);
generatedTree.insert2pass(20);
generatedTree.insert2pass(37);
generatedTree.insert2pass(52);
generatedTree.insert2pass(11);
generatedTree.insert2pass(43);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(99);
generatedTree.insert2pass(75);
generatedTree.insert2pass(77);
generatedTree.insert2pass(63);
------------------------------

└── 60
    ├── 31, 43
    │   ├── 11, 20, 27
    │   ├── 32, 37
    │   └── 52
    └── 77, 85
        ├── 63, 75
        ├── 81
        └── 87, 99

------------------------------

generatedTree.delete(27)
generatedTree.delete(81)

------------------------------

└── 60
    ├── 31, 43
    │   ├── 11, 20
    │   ├── 32, 37
    │   └── 52
    └── 75, 85
        ├── 63
        ├── 77
        └── 87, 99


------------------------------

END - TEST 388


START - TEST 389
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(83);
generatedTree.insert2pass(45);
generatedTree.insert2pass(78);
generatedTree.insert2pass(49);
generatedTree.insert2pass(95);
generatedTree.insert2pass(30);
generatedTree.insert2pass(37);
generatedTree.insert2pass(50);
------------------------------

└── 49, 83
    ├── 30, 37, 45
    ├── 50, 78
    └── 90, 95

------------------------------

generatedTree.delete(90)
generatedTree.delete(49)
generatedTree.delete(95)

------------------------------

└── 45, 78
    ├── 30, 37
    ├── 50
    └── 83


------------------------------

END - TEST 389


START - TEST 390
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(90);
generatedTree.insert2pass(69);
generatedTree.insert2pass(53);
generatedTree.insert2pass(28);
generatedTree.insert2pass(94);
generatedTree.insert2pass(11);
generatedTree.insert2pass(75);
generatedTree.insert2pass(95);
generatedTree.insert2pass(83);
generatedTree.insert2pass(93);
generatedTree.insert2pass(67);
generatedTree.insert2pass(15);
generatedTree.insert2pass(47);
generatedTree.insert2pass(65);
------------------------------

└── 82
    ├── 15, 53, 69
    │   ├── 11
    │   ├── 28, 47
    │   ├── 65, 67
    │   └── 75
    └── 94
        ├── 83, 90, 93
        └── 95

------------------------------

generatedTree.delete(69)
generatedTree.delete(94)

------------------------------

└── 67
    ├── 15, 53
    │   ├── 11
    │   ├── 28, 47
    │   └── 65
    └── 82, 93
        ├── 75
        ├── 83, 90
        └── 95


------------------------------

END - TEST 390


START - TEST 391
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(23);
generatedTree.insert2pass(96);
generatedTree.insert2pass(56);
generatedTree.insert2pass(21);
generatedTree.insert2pass(74);
generatedTree.insert2pass(35);
generatedTree.insert2pass(11);
generatedTree.insert2pass(77);
generatedTree.insert2pass(86);
generatedTree.insert2pass(54);
generatedTree.insert2pass(94);
generatedTree.insert2pass(72);
generatedTree.insert2pass(68);
generatedTree.insert2pass(22);
generatedTree.insert2pass(26);
generatedTree.insert2pass(28);
generatedTree.insert2pass(27);
generatedTree.insert2pass(15);
generatedTree.insert2pass(66);
------------------------------

└── 28, 62
    ├── 21, 23
    │   ├── 11, 15
    │   ├── 22
    │   └── 26, 27
    ├── 54
    │   ├── 35
    │   └── 56
    └── 72, 77
        ├── 66, 68
        ├── 74
        └── 86, 94, 96

------------------------------

generatedTree.delete(15)
generatedTree.delete(77)

------------------------------

└── 28, 62
    ├── 21, 23
    │   ├── 11
    │   ├── 22
    │   └── 26, 27
    ├── 54
    │   ├── 35
    │   └── 56
    └── 72, 86
        ├── 66, 68
        ├── 74
        └── 94, 96


------------------------------

END - TEST 391


START - TEST 392
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(40);
generatedTree.insert2pass(15);
generatedTree.insert2pass(13);
------------------------------

└── 27
    ├── 13, 15
    └── 40

------------------------------

generatedTree.delete(13)
generatedTree.delete(40)

------------------------------

└── 15, 27


------------------------------

END - TEST 392


START - TEST 393
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(54);
generatedTree.insert2pass(77);
generatedTree.insert2pass(26);
generatedTree.insert2pass(23);
generatedTree.insert2pass(65);
generatedTree.insert2pass(20);
generatedTree.insert2pass(96);
generatedTree.insert2pass(50);
generatedTree.insert2pass(19);
generatedTree.insert2pass(76);
generatedTree.insert2pass(42);
generatedTree.insert2pass(98);
------------------------------

└── 26, 54, 77
    ├── 19, 20, 23
    ├── 42, 50
    ├── 65, 76
    └── 84, 96, 98

------------------------------

generatedTree.delete(77)
generatedTree.delete(98)
generatedTree.delete(76)

------------------------------

└── 26, 54, 84
    ├── 19, 20, 23
    ├── 42, 50
    ├── 65
    └── 96


------------------------------

END - TEST 393


START - TEST 394
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(26);
generatedTree.insert2pass(69);
generatedTree.insert2pass(88);
generatedTree.insert2pass(54);
generatedTree.insert2pass(86);
generatedTree.insert2pass(97);
generatedTree.insert2pass(93);
generatedTree.insert2pass(77);
generatedTree.insert2pass(53);
generatedTree.insert2pass(25);
generatedTree.insert2pass(65);
generatedTree.insert2pass(42);
generatedTree.insert2pass(51);
generatedTree.insert2pass(64);
generatedTree.insert2pass(48);
generatedTree.insert2pass(23);
generatedTree.insert2pass(30);
generatedTree.insert2pass(84);
------------------------------

└── 66
    ├── 26, 48, 53
    │   ├── 23, 25
    │   ├── 30, 42
    │   ├── 51
    │   └── 54, 64, 65
    └── 86
        ├── 69, 77, 84
        └── 88, 93, 97

------------------------------

generatedTree.delete(53)

------------------------------

└── 66
    ├── 26, 48, 54
    │   ├── 23, 25
    │   ├── 30, 42
    │   ├── 51
    │   └── 64, 65
    └── 86
        ├── 69, 77, 84
        └── 88, 93, 97


------------------------------

END - TEST 394


START - TEST 395
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(22);
generatedTree.insert2pass(45);
generatedTree.insert2pass(92);
generatedTree.insert2pass(57);
generatedTree.insert2pass(59);
generatedTree.insert2pass(12);
generatedTree.insert2pass(29);
generatedTree.insert2pass(35);
generatedTree.insert2pass(47);
generatedTree.insert2pass(11);
------------------------------

└── 22, 45, 58
    ├── 11, 12
    ├── 29, 35
    ├── 47, 57
    └── 59, 92

------------------------------

generatedTree.delete(45)
generatedTree.delete(35)
generatedTree.delete(59)

------------------------------

└── 22, 47, 58
    ├── 11, 12
    ├── 29
    ├── 57
    └── 92


------------------------------

END - TEST 395


START - TEST 396
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(34);
generatedTree.insert2pass(63);
generatedTree.insert2pass(83);
generatedTree.insert2pass(25);
generatedTree.insert2pass(76);
generatedTree.insert2pass(79);
generatedTree.insert2pass(70);
generatedTree.insert2pass(91);
generatedTree.insert2pass(68);
generatedTree.insert2pass(84);
generatedTree.insert2pass(87);
generatedTree.insert2pass(56);
generatedTree.insert2pass(30);
generatedTree.insert2pass(47);
generatedTree.insert2pass(43);
generatedTree.insert2pass(71);
generatedTree.insert2pass(59);
------------------------------

└── 76
    ├── 34, 47, 63
    │   ├── 25, 30
    │   ├── 43
    │   ├── 56, 59
    │   └── 68, 70, 71
    └── 83, 91
        ├── 79
        ├── 84, 87
        └── 98

------------------------------

generatedTree.delete(47)
generatedTree.delete(79)

------------------------------

└── 76
    ├── 34, 56, 63
    │   ├── 25, 30
    │   ├── 43
    │   ├── 59
    │   └── 68, 70, 71
    └── 84, 91
        ├── 83
        ├── 87
        └── 98


------------------------------

END - TEST 396


START - TEST 397
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(92);
generatedTree.insert2pass(33);
generatedTree.insert2pass(68);
generatedTree.insert2pass(14);
generatedTree.insert2pass(61);
generatedTree.insert2pass(59);
generatedTree.insert2pass(29);
generatedTree.insert2pass(58);
generatedTree.insert2pass(89);
generatedTree.insert2pass(26);
generatedTree.insert2pass(48);
------------------------------

└── 33
    ├── 29
    │   ├── 14, 26
    │   └── 31
    └── 59, 68
        ├── 48, 58
        ├── 61
        └── 89, 92

------------------------------

generatedTree.delete(61)
generatedTree.delete(29)
generatedTree.delete(92)

------------------------------

└── 33
    ├── 26
    │   ├── 14
    │   └── 31
    └── 58, 68
        ├── 48
        ├── 59
        └── 89


------------------------------

END - TEST 397


START - TEST 398
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(22);
generatedTree.insert2pass(11);
generatedTree.insert2pass(18);
generatedTree.insert2pass(78);
generatedTree.insert2pass(30);
generatedTree.insert2pass(54);
generatedTree.insert2pass(85);
generatedTree.insert2pass(76);
generatedTree.insert2pass(45);
generatedTree.insert2pass(49);
generatedTree.insert2pass(48);
generatedTree.insert2pass(56);
generatedTree.insert2pass(26);
generatedTree.insert2pass(62);
generatedTree.insert2pass(63);
generatedTree.insert2pass(37);
------------------------------

└── 38
    ├── 22
    │   ├── 11, 18
    │   └── 26, 30, 37
    └── 54, 62, 78
        ├── 45, 48, 49
        ├── 56
        ├── 63, 76
        └── 85

------------------------------

generatedTree.delete(48)

------------------------------

└── 38
    ├── 22
    │   ├── 11, 18
    │   └── 26, 30, 37
    └── 54, 62, 78
        ├── 45, 49
        ├── 56
        ├── 63, 76
        └── 85


------------------------------

END - TEST 398


START - TEST 399
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(21);
generatedTree.insert2pass(18);
generatedTree.insert2pass(90);
generatedTree.insert2pass(86);
generatedTree.insert2pass(79);
generatedTree.insert2pass(68);
generatedTree.insert2pass(74);
generatedTree.insert2pass(17);
generatedTree.insert2pass(73);
generatedTree.insert2pass(55);
generatedTree.insert2pass(89);
------------------------------

└── 21, 68, 86
    ├── 17, 18
    ├── 43, 55
    ├── 73, 74, 79
    └── 89, 90

------------------------------

generatedTree.delete(79)
generatedTree.delete(90)
generatedTree.delete(86)

------------------------------

└── 21, 68, 74
    ├── 17, 18
    ├── 43, 55
    ├── 73
    └── 89


------------------------------

END - TEST 399


START - TEST 400
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(68);
generatedTree.insert2pass(73);
generatedTree.insert2pass(93);
generatedTree.insert2pass(86);
generatedTree.insert2pass(80);
generatedTree.insert2pass(85);
generatedTree.insert2pass(99);
generatedTree.insert2pass(22);
generatedTree.insert2pass(67);
------------------------------

└── 68, 86
    ├── 22, 26, 67
    ├── 73, 80, 85
    └── 93, 99

------------------------------

generatedTree.delete(85)
generatedTree.delete(80)

------------------------------

└── 68, 86
    ├── 22, 26, 67
    ├── 73
    └── 93, 99


------------------------------

END - TEST 400


START - TEST 401
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(56);
generatedTree.insert2pass(65);
generatedTree.insert2pass(39);
generatedTree.insert2pass(31);
generatedTree.insert2pass(88);
generatedTree.insert2pass(35);
generatedTree.insert2pass(77);
generatedTree.insert2pass(95);
generatedTree.insert2pass(20);
generatedTree.insert2pass(99);
generatedTree.insert2pass(58);
generatedTree.insert2pass(79);
generatedTree.insert2pass(26);
generatedTree.insert2pass(47);
generatedTree.insert2pass(15);
generatedTree.insert2pass(81);
generatedTree.insert2pass(63);
------------------------------

└── 56
    ├── 24, 31
    │   ├── 15, 20
    │   ├── 26
    │   └── 35, 39, 47
    └── 77, 95
        ├── 58, 63, 65
        ├── 79, 81, 88
        └── 99

------------------------------

generatedTree.delete(79)
generatedTree.delete(99)

------------------------------

└── 56
    ├── 24, 31
    │   ├── 15, 20
    │   ├── 26
    │   └── 35, 39, 47
    └── 77, 88
        ├── 58, 63, 65
        ├── 81
        └── 95


------------------------------

END - TEST 401


START - TEST 402
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(24);
generatedTree.insert2pass(89);
generatedTree.insert2pass(82);
generatedTree.insert2pass(12);
generatedTree.insert2pass(53);
generatedTree.insert2pass(16);
generatedTree.insert2pass(34);
generatedTree.insert2pass(19);
generatedTree.insert2pass(86);
generatedTree.insert2pass(54);
generatedTree.insert2pass(31);
generatedTree.insert2pass(96);
generatedTree.insert2pass(51);
generatedTree.insert2pass(78);
generatedTree.insert2pass(35);
generatedTree.insert2pass(38);
generatedTree.insert2pass(50);
generatedTree.insert2pass(21);
------------------------------

└── 30, 53
    ├── 16
    │   ├── 12
    │   └── 19, 21, 24
    ├── 34, 38
    │   ├── 31
    │   ├── 35
    │   └── 50, 51
    └── 82
        ├── 54, 78
        └── 86, 89, 96

------------------------------

generatedTree.delete(89)

------------------------------

└── 30, 38
    ├── 16
    │   ├── 12
    │   └── 19, 21, 24
    ├── 34
    │   ├── 31
    │   └── 35
    └── 53, 82
        ├── 50, 51
        ├── 54, 78
        └── 86, 96


------------------------------

END - TEST 402


START - TEST 403
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(64);
generatedTree.insert2pass(93);
generatedTree.insert2pass(85);
generatedTree.insert2pass(31);
generatedTree.insert2pass(25);
generatedTree.insert2pass(28);
generatedTree.insert2pass(12);
generatedTree.insert2pass(82);
generatedTree.insert2pass(27);
------------------------------

└── 25, 31, 64
    ├── 12
    ├── 27, 28
    ├── 54
    └── 82, 85, 93

------------------------------

generatedTree.delete(27)
generatedTree.delete(93)

------------------------------

└── 25, 31, 64
    ├── 12
    ├── 28
    ├── 54
    └── 82, 85


------------------------------

END - TEST 403


START - TEST 404
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(26);
generatedTree.insert2pass(67);
generatedTree.insert2pass(35);
generatedTree.insert2pass(46);
generatedTree.insert2pass(61);
generatedTree.insert2pass(11);
generatedTree.insert2pass(12);
generatedTree.insert2pass(96);
generatedTree.insert2pass(56);
generatedTree.insert2pass(69);
generatedTree.insert2pass(72);
generatedTree.insert2pass(66);
generatedTree.insert2pass(60);
------------------------------

└── 67
    ├── 35, 56
    │   ├── 11, 12, 26
    │   ├── 46
    │   └── 60, 61, 66
    └── 96
        ├── 69, 72
        └── 98

------------------------------

generatedTree.delete(61)

------------------------------

└── 67
    ├── 35, 56
    │   ├── 11, 12, 26
    │   ├── 46
    │   └── 60, 66
    └── 96
        ├── 69, 72
        └── 98


------------------------------

END - TEST 404


START - TEST 405
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(60);
generatedTree.insert2pass(46);
generatedTree.insert2pass(47);
generatedTree.insert2pass(62);
generatedTree.insert2pass(64);
generatedTree.insert2pass(32);
generatedTree.insert2pass(14);
generatedTree.insert2pass(23);
generatedTree.insert2pass(52);
generatedTree.insert2pass(85);
------------------------------

└── 46, 57, 62
    ├── 14, 23, 32
    ├── 47, 52
    ├── 60
    └── 64, 85

------------------------------

generatedTree.delete(62)
generatedTree.delete(47)
generatedTree.delete(32)

------------------------------

└── 46, 57, 64
    ├── 14, 23
    ├── 52
    ├── 60
    └── 85


------------------------------

END - TEST 405


START - TEST 406
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(48);
generatedTree.insert2pass(49);
generatedTree.insert2pass(81);
generatedTree.insert2pass(70);
generatedTree.insert2pass(86);
generatedTree.insert2pass(80);
generatedTree.insert2pass(65);
generatedTree.insert2pass(50);
generatedTree.insert2pass(78);
generatedTree.insert2pass(75);
generatedTree.insert2pass(73);
generatedTree.insert2pass(59);
generatedTree.insert2pass(58);
generatedTree.insert2pass(60);
------------------------------

└── 70
    ├── 49, 59
    │   ├── 48
    │   ├── 50, 58
    │   └── 60, 65
    └── 78, 81
        ├── 73, 75
        ├── 80
        └── 86

------------------------------

generatedTree.delete(86)
generatedTree.delete(78)

------------------------------

└── 59
    ├── 49
    │   ├── 48
    │   └── 50, 58
    └── 70, 75
        ├── 60, 65
        ├── 73
        └── 80, 81


------------------------------

END - TEST 406


START - TEST 407
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(66);
generatedTree.insert2pass(24);
generatedTree.insert2pass(20);
generatedTree.insert2pass(90);
generatedTree.insert2pass(81);
generatedTree.insert2pass(12);
generatedTree.insert2pass(15);
generatedTree.insert2pass(29);
generatedTree.insert2pass(17);
generatedTree.insert2pass(13);
generatedTree.insert2pass(42);
------------------------------

└── 15, 20, 47
    ├── 12, 13
    ├── 17
    ├── 24, 29, 42
    └── 66, 81, 90

------------------------------

generatedTree.delete(15)
generatedTree.delete(12)

------------------------------

└── 20, 47
    ├── 13, 17
    ├── 24, 29, 42
    └── 66, 81, 90


------------------------------

END - TEST 407


START - TEST 408
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(43);
generatedTree.insert2pass(59);
generatedTree.insert2pass(26);
generatedTree.insert2pass(32);
generatedTree.insert2pass(98);
generatedTree.insert2pass(80);
generatedTree.insert2pass(53);
generatedTree.insert2pass(38);
generatedTree.insert2pass(72);
generatedTree.insert2pass(24);
generatedTree.insert2pass(54);
generatedTree.insert2pass(12);
------------------------------

└── 43
    ├── 32
    │   ├── 12, 24, 26
    │   └── 38, 42
    └── 59, 80
        ├── 53, 54
        ├── 72
        └── 98

------------------------------

generatedTree.delete(26)
generatedTree.delete(80)
generatedTree.delete(72)

------------------------------

└── 32, 43, 59
    ├── 12, 24
    ├── 38, 42
    ├── 53, 54
    └── 98


------------------------------

END - TEST 408


START - TEST 409
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(30);
generatedTree.insert2pass(62);
generatedTree.insert2pass(98);
generatedTree.insert2pass(22);
generatedTree.insert2pass(71);
generatedTree.insert2pass(58);
generatedTree.insert2pass(80);
generatedTree.insert2pass(34);
generatedTree.insert2pass(48);
generatedTree.insert2pass(74);
generatedTree.insert2pass(44);
generatedTree.insert2pass(23);
------------------------------

└── 30, 47, 71
    ├── 22, 23
    ├── 34, 44
    ├── 48, 58, 62
    └── 74, 80, 98

------------------------------

generatedTree.delete(80)
generatedTree.delete(98)

------------------------------

└── 30, 47, 71
    ├── 22, 23
    ├── 34, 44
    ├── 48, 58, 62
    └── 74


------------------------------

END - TEST 409


START - TEST 410
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(99);
generatedTree.insert2pass(46);
generatedTree.insert2pass(24);
generatedTree.insert2pass(71);
generatedTree.insert2pass(29);
generatedTree.insert2pass(75);
------------------------------

└── 46
    ├── 21, 24, 29
    └── 71, 75, 99

------------------------------

generatedTree.delete(46)
generatedTree.delete(99)

------------------------------

└── 29
    ├── 21, 24
    └── 71, 75


------------------------------

END - TEST 410


START - TEST 411
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(82);
generatedTree.insert2pass(66);
generatedTree.insert2pass(97);
generatedTree.insert2pass(33);
generatedTree.insert2pass(85);
generatedTree.insert2pass(18);
generatedTree.insert2pass(65);
generatedTree.insert2pass(93);
generatedTree.insert2pass(45);
generatedTree.insert2pass(77);
generatedTree.insert2pass(19);
generatedTree.insert2pass(59);
------------------------------

└── 74
    ├── 33, 65
    │   ├── 18, 19
    │   ├── 45, 59
    │   └── 66
    └── 85
        ├── 77, 82
        └── 93, 97

------------------------------

generatedTree.delete(65)
generatedTree.delete(18)

------------------------------

└── 74
    ├── 33, 59
    │   ├── 19
    │   ├── 45
    │   └── 66
    └── 85
        ├── 77, 82
        └── 93, 97


------------------------------

END - TEST 411


START - TEST 412
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(92);
generatedTree.insert2pass(27);
generatedTree.insert2pass(35);
generatedTree.insert2pass(61);
generatedTree.insert2pass(49);
generatedTree.insert2pass(29);
generatedTree.insert2pass(55);
generatedTree.insert2pass(83);
generatedTree.insert2pass(91);
generatedTree.insert2pass(74);
generatedTree.insert2pass(72);
generatedTree.insert2pass(32);
generatedTree.insert2pass(16);
generatedTree.insert2pass(37);
generatedTree.insert2pass(86);
generatedTree.insert2pass(11);
generatedTree.insert2pass(48);
generatedTree.insert2pass(41);
generatedTree.insert2pass(79);
------------------------------

└── 55
    ├── 29, 35, 48
    │   ├── 11, 16, 27
    │   ├── 32
    │   ├── 37, 41
    │   └── 49
    └── 72, 83, 92
        ├── 61
        ├── 74, 79
        ├── 86, 91
        └── 94

------------------------------

generatedTree.delete(55)
generatedTree.delete(79)

------------------------------

└── 49
    ├── 29, 35, 41
    │   ├── 11, 16, 27
    │   ├── 32
    │   ├── 37
    │   └── 48
    └── 72, 83, 92
        ├── 61
        ├── 74
        ├── 86, 91
        └── 94


------------------------------

END - TEST 412


START - TEST 413
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(52);
generatedTree.insert2pass(37);
generatedTree.insert2pass(76);
generatedTree.insert2pass(78);
generatedTree.insert2pass(49);
------------------------------

└── 37, 76
    ├── 13
    ├── 49, 52
    └── 78

------------------------------

generatedTree.delete(52)
generatedTree.delete(76)
generatedTree.delete(37)

------------------------------

└── 49
    ├── 13
    └── 78


------------------------------

END - TEST 413


START - TEST 414
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(88);
generatedTree.insert2pass(92);
generatedTree.insert2pass(17);
generatedTree.insert2pass(44);
generatedTree.insert2pass(37);
generatedTree.insert2pass(85);
generatedTree.insert2pass(43);
generatedTree.insert2pass(53);
------------------------------

└── 27, 44, 88
    ├── 17
    ├── 37, 43
    ├── 53, 85
    └── 92

------------------------------

generatedTree.delete(17)

------------------------------

└── 37, 44, 88
    ├── 27
    ├── 43
    ├── 53, 85
    └── 92


------------------------------

END - TEST 414


START - TEST 415
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(15);
generatedTree.insert2pass(18);
generatedTree.insert2pass(59);
generatedTree.insert2pass(27);
generatedTree.insert2pass(77);
generatedTree.insert2pass(71);
generatedTree.insert2pass(61);
generatedTree.insert2pass(87);
generatedTree.insert2pass(79);
------------------------------

└── 18, 59, 75
    ├── 15
    ├── 27
    ├── 61, 71
    └── 77, 79, 87

------------------------------

generatedTree.delete(77)
generatedTree.delete(75)

------------------------------

└── 18, 59, 71
    ├── 15
    ├── 27
    ├── 61
    └── 79, 87


------------------------------

END - TEST 415


START - TEST 416
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(80);
generatedTree.insert2pass(89);
generatedTree.insert2pass(48);
generatedTree.insert2pass(90);
generatedTree.insert2pass(88);
generatedTree.insert2pass(47);
generatedTree.insert2pass(14);
generatedTree.insert2pass(97);
generatedTree.insert2pass(66);
generatedTree.insert2pass(87);
generatedTree.insert2pass(92);
generatedTree.insert2pass(31);
generatedTree.insert2pass(37);
------------------------------

└── 47, 80, 89
    ├── 14, 31, 37
    ├── 48, 66
    ├── 87, 88
    └── 90, 92, 97

------------------------------

generatedTree.delete(14)

------------------------------

└── 47, 80, 89
    ├── 31, 37
    ├── 48, 66
    ├── 87, 88
    └── 90, 92, 97


------------------------------

END - TEST 416


START - TEST 417
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(97);
generatedTree.insert2pass(35);
generatedTree.insert2pass(62);
generatedTree.insert2pass(22);
generatedTree.insert2pass(57);
generatedTree.insert2pass(23);
generatedTree.insert2pass(25);
generatedTree.insert2pass(60);
generatedTree.insert2pass(86);
generatedTree.insert2pass(27);
generatedTree.insert2pass(37);
generatedTree.insert2pass(89);
generatedTree.insert2pass(42);
generatedTree.insert2pass(48);
generatedTree.insert2pass(68);
generatedTree.insert2pass(77);
generatedTree.insert2pass(69);
------------------------------

└── 35, 62
    ├── 23
    │   ├── 22
    │   └── 25, 27, 33
    ├── 57
    │   ├── 37, 42, 48
    │   └── 60
    └── 77, 89
        ├── 68, 69
        ├── 86
        └── 97

------------------------------

generatedTree.delete(37)
generatedTree.delete(86)
generatedTree.delete(68)

------------------------------

└── 35, 62
    ├── 23
    │   ├── 22
    │   └── 25, 27, 33
    ├── 57
    │   ├── 42, 48
    │   └── 60
    └── 89
        ├── 69, 77
        └── 97


------------------------------

END - TEST 417


START - TEST 418
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(44);
generatedTree.insert2pass(22);
generatedTree.insert2pass(94);
generatedTree.insert2pass(20);
generatedTree.insert2pass(18);
generatedTree.insert2pass(70);
generatedTree.insert2pass(69);
generatedTree.insert2pass(42);
generatedTree.insert2pass(38);
generatedTree.insert2pass(60);
generatedTree.insert2pass(63);
generatedTree.insert2pass(97);
generatedTree.insert2pass(74);
generatedTree.insert2pass(34);
------------------------------

└── 44
    ├── 20, 38
    │   ├── 18
    │   ├── 22, 34
    │   └── 42
    └── 60, 70
        ├── 59
        ├── 63, 69
        └── 74, 94, 97

------------------------------

generatedTree.delete(69)
generatedTree.delete(97)
generatedTree.delete(59)

------------------------------

└── 44
    ├── 20, 38
    │   ├── 18
    │   ├── 22, 34
    │   └── 42
    └── 70
        ├── 60, 63
        └── 74, 94


------------------------------

END - TEST 418


START - TEST 419
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(78);
generatedTree.insert2pass(46);
generatedTree.insert2pass(63);
generatedTree.insert2pass(97);
generatedTree.insert2pass(45);
generatedTree.insert2pass(12);
------------------------------

└── 62
    ├── 12, 45, 46
    └── 63, 78, 97

------------------------------

generatedTree.delete(78)

------------------------------

└── 62
    ├── 12, 45, 46
    └── 63, 97


------------------------------

END - TEST 419


START - TEST 420
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(38);
generatedTree.insert2pass(34);
generatedTree.insert2pass(67);
generatedTree.insert2pass(28);
generatedTree.insert2pass(94);
------------------------------

└── 38
    ├── 28, 34
    └── 40, 67, 94

------------------------------

generatedTree.delete(28)
generatedTree.delete(34)
generatedTree.delete(94)

------------------------------

└── 40
    ├── 38
    └── 67


------------------------------

END - TEST 420


START - TEST 421
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(54);
generatedTree.insert2pass(18);
generatedTree.insert2pass(76);
generatedTree.insert2pass(71);
generatedTree.insert2pass(86);
generatedTree.insert2pass(15);
generatedTree.insert2pass(26);
generatedTree.insert2pass(44);
generatedTree.insert2pass(89);
generatedTree.insert2pass(19);
generatedTree.insert2pass(74);
generatedTree.insert2pass(84);
generatedTree.insert2pass(88);
generatedTree.insert2pass(61);
generatedTree.insert2pass(21);
generatedTree.insert2pass(31);
------------------------------

└── 29
    ├── 18
    │   ├── 15
    │   └── 19, 21, 26
    └── 54, 71, 86
        ├── 31, 44
        ├── 61
        ├── 74, 76, 84
        └── 88, 89

------------------------------

generatedTree.delete(89)
generatedTree.delete(61)

------------------------------

└── 29
    ├── 18
    │   ├── 15
    │   └── 19, 21, 26
    └── 44, 71, 86
        ├── 31
        ├── 54
        ├── 74, 76, 84
        └── 88


------------------------------

END - TEST 421


START - TEST 422
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(84);
generatedTree.insert2pass(31);
generatedTree.insert2pass(55);
generatedTree.insert2pass(25);
generatedTree.insert2pass(12);
generatedTree.insert2pass(19);
generatedTree.insert2pass(21);
generatedTree.insert2pass(82);
generatedTree.insert2pass(76);
generatedTree.insert2pass(91);
generatedTree.insert2pass(73);
generatedTree.insert2pass(75);
generatedTree.insert2pass(49);
generatedTree.insert2pass(77);
generatedTree.insert2pass(37);
generatedTree.insert2pass(18);
------------------------------

└── 52
    ├── 19, 25
    │   ├── 12, 18
    │   ├── 21
    │   └── 31, 37, 49
    └── 73, 82
        ├── 55
        ├── 75, 76, 77
        └── 84, 91

------------------------------

generatedTree.delete(21)
generatedTree.delete(18)
generatedTree.delete(75)

------------------------------

└── 52
    ├── 25
    │   ├── 12, 19
    │   └── 31, 37, 49
    └── 73, 82
        ├── 55
        ├── 76, 77
        └── 84, 91


------------------------------

END - TEST 422


START - TEST 423
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(12);
generatedTree.insert2pass(67);
generatedTree.insert2pass(71);
generatedTree.insert2pass(19);
generatedTree.insert2pass(34);
generatedTree.insert2pass(86);
generatedTree.insert2pass(16);
generatedTree.insert2pass(54);
generatedTree.insert2pass(11);
generatedTree.insert2pass(15);
------------------------------

└── 52
    ├── 12, 19
    │   ├── 11
    │   ├── 15, 16
    │   └── 34
    └── 71
        ├── 54, 67
        └── 86

------------------------------

generatedTree.delete(19)

------------------------------

└── 52
    ├── 12, 16
    │   ├── 11
    │   ├── 15
    │   └── 34
    └── 71
        ├── 54, 67
        └── 86


------------------------------

END - TEST 423


START - TEST 424
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(42);
generatedTree.insert2pass(62);
generatedTree.insert2pass(75);
generatedTree.insert2pass(35);
generatedTree.insert2pass(36);
generatedTree.insert2pass(85);
generatedTree.insert2pass(99);
generatedTree.insert2pass(15);
generatedTree.insert2pass(31);
generatedTree.insert2pass(64);
generatedTree.insert2pass(20);
generatedTree.insert2pass(29);
generatedTree.insert2pass(47);
------------------------------

└── 62
    ├── 31, 36
    │   ├── 15, 20, 29
    │   ├── 35
    │   └── 42, 47
    └── 79
        ├── 64, 75
        └── 85, 99

------------------------------

generatedTree.delete(35)
generatedTree.delete(85)

------------------------------

└── 36
    ├── 29
    │   ├── 15, 20
    │   └── 31
    └── 62, 79
        ├── 42, 47
        ├── 64, 75
        └── 99


------------------------------

END - TEST 424


START - TEST 425
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(78);
generatedTree.insert2pass(52);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(32);
generatedTree.insert2pass(77);
generatedTree.insert2pass(56);
generatedTree.insert2pass(72);
generatedTree.insert2pass(29);
generatedTree.insert2pass(65);
generatedTree.insert2pass(12);
generatedTree.insert2pass(74);
generatedTree.insert2pass(40);
generatedTree.insert2pass(33);
generatedTree.insert2pass(27);
generatedTree.insert2pass(71);
generatedTree.insert2pass(47);
generatedTree.insert2pass(43);
generatedTree.insert2pass(24);
------------------------------

└── 40, 70
    ├── 27, 32
    │   ├── 12, 24
    │   ├── 29
    │   └── 33
    ├── 52
    │   ├── 42, 43, 47
    │   └── 56, 65
    └── 74, 78
        ├── 71, 72
        ├── 77
        └── 89

------------------------------

generatedTree.delete(77)
generatedTree.delete(89)
generatedTree.delete(32)

------------------------------

└── 40, 70
    ├── 27
    │   ├── 12, 24
    │   └── 29, 33
    ├── 52
    │   ├── 42, 43, 47
    │   └── 56, 65
    └── 72
        ├── 71
        └── 74, 78


------------------------------

END - TEST 425


START - TEST 426
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(36);
generatedTree.insert2pass(75);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
generatedTree.insert2pass(39);
generatedTree.insert2pass(89);
generatedTree.insert2pass(61);
generatedTree.insert2pass(30);
generatedTree.insert2pass(13);
generatedTree.insert2pass(85);
generatedTree.insert2pass(98);
generatedTree.insert2pass(84);
generatedTree.insert2pass(38);
generatedTree.insert2pass(24);
------------------------------

└── 36
    ├── 30
    │   ├── 13, 24, 26
    │   └── 32
    └── 60, 75, 89
        ├── 38, 39
        ├── 61
        ├── 84, 85
        └── 98

------------------------------

generatedTree.delete(75)
generatedTree.delete(61)
generatedTree.delete(36)

------------------------------

└── 38
    ├── 30
    │   ├── 13, 24, 26
    │   └── 32
    └── 84, 89
        ├── 39, 60
        ├── 85
        └── 98


------------------------------

END - TEST 426


START - TEST 427
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(72);
generatedTree.insert2pass(36);
generatedTree.insert2pass(24);
generatedTree.insert2pass(78);
generatedTree.insert2pass(47);
generatedTree.insert2pass(58);
generatedTree.insert2pass(74);
generatedTree.insert2pass(42);
generatedTree.insert2pass(87);
------------------------------

└── 36, 72
    ├── 24
    ├── 42, 47, 58
    └── 74, 78, 87

------------------------------

generatedTree.delete(36)
generatedTree.delete(72)

------------------------------

└── 42, 58
    ├── 24
    ├── 47
    └── 74, 78, 87


------------------------------

END - TEST 427


START - TEST 428
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(73);
generatedTree.insert2pass(81);
generatedTree.insert2pass(34);
generatedTree.insert2pass(18);
generatedTree.insert2pass(61);
generatedTree.insert2pass(15);
generatedTree.insert2pass(52);
generatedTree.insert2pass(11);
generatedTree.insert2pass(68);
generatedTree.insert2pass(97);
generatedTree.insert2pass(95);
------------------------------

└── 34, 52, 73
    ├── 11, 15, 18
    ├── 49
    ├── 61, 68
    └── 81, 95, 97

------------------------------

generatedTree.delete(52)

------------------------------

└── 34, 61, 73
    ├── 11, 15, 18
    ├── 49
    ├── 68
    └── 81, 95, 97


------------------------------

END - TEST 428


START - TEST 429
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(70);
generatedTree.insert2pass(16);
generatedTree.insert2pass(64);
generatedTree.insert2pass(13);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(94);
generatedTree.insert2pass(30);
generatedTree.insert2pass(81);
------------------------------

└── 16, 36, 70
    ├── 13
    ├── 27, 30, 32
    ├── 64
    └── 81, 94

------------------------------

generatedTree.delete(32)
generatedTree.delete(81)

------------------------------

└── 16, 36, 70
    ├── 13
    ├── 27, 30
    ├── 64
    └── 94


------------------------------

END - TEST 429


START - TEST 430
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(99);
generatedTree.insert2pass(73);
generatedTree.insert2pass(51);
generatedTree.insert2pass(61);
generatedTree.insert2pass(39);
generatedTree.insert2pass(83);
generatedTree.insert2pass(93);
generatedTree.insert2pass(86);
generatedTree.insert2pass(54);
generatedTree.insert2pass(21);
generatedTree.insert2pass(44);
generatedTree.insert2pass(82);
generatedTree.insert2pass(27);
generatedTree.insert2pass(72);
generatedTree.insert2pass(16);
generatedTree.insert2pass(35);
generatedTree.insert2pass(96);
generatedTree.insert2pass(50);
generatedTree.insert2pass(41);
------------------------------

└── 73
    ├── 34, 39, 51
    │   ├── 16, 21, 27
    │   ├── 35
    │   ├── 41, 44, 50
    │   └── 54, 61, 72
    └── 93
        ├── 82, 83, 86
        └── 96, 99

------------------------------

generatedTree.delete(54)

------------------------------

└── 73
    ├── 34, 39, 51
    │   ├── 16, 21, 27
    │   ├── 35
    │   ├── 41, 44, 50
    │   └── 61, 72
    └── 93
        ├── 82, 83, 86
        └── 96, 99


------------------------------

END - TEST 430


START - TEST 431
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(12);
generatedTree.insert2pass(36);
generatedTree.insert2pass(79);
generatedTree.insert2pass(42);
generatedTree.insert2pass(22);
generatedTree.insert2pass(85);
generatedTree.insert2pass(78);
generatedTree.insert2pass(92);
generatedTree.insert2pass(59);
generatedTree.insert2pass(55);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
generatedTree.insert2pass(46);
generatedTree.insert2pass(13);
------------------------------

└── 57
    ├── 22, 36
    │   ├── 12, 13
    │   ├── 30
    │   └── 42, 46, 55
    └── 79
        ├── 59, 61, 78
        └── 85, 92

------------------------------

generatedTree.delete(42)
generatedTree.delete(55)

------------------------------

└── 57
    ├── 22, 36
    │   ├── 12, 13
    │   ├── 30
    │   └── 46
    └── 79
        ├── 59, 61, 78
        └── 85, 92


------------------------------

END - TEST 431


START - TEST 432
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(56);
generatedTree.insert2pass(44);
generatedTree.insert2pass(26);
generatedTree.insert2pass(90);
generatedTree.insert2pass(58);
generatedTree.insert2pass(55);
generatedTree.insert2pass(92);
generatedTree.insert2pass(73);
generatedTree.insert2pass(79);
generatedTree.insert2pass(68);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
------------------------------

└── 73
    ├── 44, 56
    │   ├── 26, 30
    │   ├── 55
    │   └── 58, 61, 68
    └── 90
        ├── 79
        └── 92, 93

------------------------------

generatedTree.delete(90)
generatedTree.delete(58)
generatedTree.delete(44)

------------------------------

└── 73
    ├── 30, 56
    │   ├── 26
    │   ├── 55
    │   └── 61, 68
    └── 92
        ├── 79
        └── 93


------------------------------

END - TEST 432


START - TEST 433
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(55);
generatedTree.insert2pass(74);
generatedTree.insert2pass(40);
generatedTree.insert2pass(11);
generatedTree.insert2pass(73);
generatedTree.insert2pass(94);
generatedTree.insert2pass(62);
generatedTree.insert2pass(78);
generatedTree.insert2pass(26);
generatedTree.insert2pass(98);
generatedTree.insert2pass(13);
generatedTree.insert2pass(38);
generatedTree.insert2pass(51);
------------------------------

└── 55
    ├── 17, 38
    │   ├── 11, 13
    │   ├── 26
    │   └── 40, 51
    └── 74
        ├── 62, 73
        └── 78, 94, 98

------------------------------

generatedTree.delete(74)
generatedTree.delete(51)

------------------------------

└── 38
    ├── 17
    │   ├── 11, 13
    │   └── 26
    └── 55, 73
        ├── 40
        ├── 62
        └── 78, 94, 98


------------------------------

END - TEST 433


START - TEST 434
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(14);
generatedTree.insert2pass(78);
generatedTree.insert2pass(46);
generatedTree.insert2pass(19);
generatedTree.insert2pass(94);
------------------------------

└── 66
    ├── 14, 19, 46
    └── 78, 94

------------------------------

generatedTree.delete(14)
generatedTree.delete(19)

------------------------------

└── 66
    ├── 46
    └── 78, 94


------------------------------

END - TEST 434


START - TEST 435
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(73);
generatedTree.insert2pass(55);
generatedTree.insert2pass(42);
generatedTree.insert2pass(50);
generatedTree.insert2pass(63);
generatedTree.insert2pass(97);
generatedTree.insert2pass(91);
generatedTree.insert2pass(78);
generatedTree.insert2pass(20);
generatedTree.insert2pass(86);
generatedTree.insert2pass(71);
generatedTree.insert2pass(45);
generatedTree.insert2pass(72);
generatedTree.insert2pass(67);
generatedTree.insert2pass(64);
generatedTree.insert2pass(56);
generatedTree.insert2pass(19);
generatedTree.insert2pass(80);
generatedTree.insert2pass(70);
generatedTree.insert2pass(30);
------------------------------

└── 55, 73
    ├── 20, 42
    │   ├── 19
    │   ├── 30, 37
    │   └── 45, 50
    ├── 64, 71
    │   ├── 56, 63
    │   ├── 67, 70
    │   └── 72
    └── 91
        ├── 78, 80, 86
        └── 97

------------------------------

generatedTree.delete(30)
generatedTree.delete(67)
generatedTree.delete(78)

------------------------------

└── 55, 71
    ├── 20, 42
    │   ├── 19
    │   ├── 37
    │   └── 45, 50
    ├── 64
    │   ├── 56, 63
    │   └── 70
    └── 73, 91
        ├── 72
        ├── 80, 86
        └── 97


------------------------------

END - TEST 435


START - TEST 436
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(44);
generatedTree.insert2pass(27);
generatedTree.insert2pass(17);
generatedTree.insert2pass(88);
generatedTree.insert2pass(75);
generatedTree.insert2pass(86);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(68);
generatedTree.insert2pass(13);
generatedTree.insert2pass(25);
------------------------------

└── 27, 44, 75
    ├── 13, 17, 25
    ├── 36
    ├── 61, 66, 68
    └── 86, 88

------------------------------

generatedTree.delete(44)
generatedTree.delete(61)
generatedTree.delete(17)

------------------------------

└── 27, 66, 75
    ├── 13, 25
    ├── 36
    ├── 68
    └── 86, 88


------------------------------

END - TEST 436


START - TEST 437
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(64);
generatedTree.insert2pass(70);
generatedTree.insert2pass(31);
generatedTree.insert2pass(91);
generatedTree.insert2pass(78);
generatedTree.insert2pass(17);
generatedTree.insert2pass(11);
generatedTree.insert2pass(22);
------------------------------

└── 31, 64
    ├── 11, 17, 22
    ├── 36
    └── 70, 78, 91

------------------------------

generatedTree.delete(70)
generatedTree.delete(31)
generatedTree.delete(11)

------------------------------

└── 22, 64
    ├── 17
    ├── 36
    └── 78, 91


------------------------------

END - TEST 437


START - TEST 438
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(14);
generatedTree.insert2pass(54);
generatedTree.insert2pass(68);
generatedTree.insert2pass(42);
generatedTree.insert2pass(57);
generatedTree.insert2pass(38);
generatedTree.insert2pass(69);
generatedTree.insert2pass(66);
generatedTree.insert2pass(74);
generatedTree.insert2pass(84);
generatedTree.insert2pass(49);
generatedTree.insert2pass(34);
generatedTree.insert2pass(51);
generatedTree.insert2pass(99);
------------------------------

└── 54
    ├── 22, 42
    │   ├── 14
    │   ├── 34, 38
    │   └── 49, 51
    └── 68, 74
        ├── 57, 66
        ├── 69
        └── 84, 99

------------------------------

generatedTree.delete(49)

------------------------------

└── 54
    ├── 22, 42
    │   ├── 14
    │   ├── 34, 38
    │   └── 51
    └── 68, 74
        ├── 57, 66
        ├── 69
        └── 84, 99


------------------------------

END - TEST 438


START - TEST 439
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(25);
generatedTree.insert2pass(80);
generatedTree.insert2pass(46);
generatedTree.insert2pass(70);
generatedTree.insert2pass(41);
generatedTree.insert2pass(77);
generatedTree.insert2pass(45);
generatedTree.insert2pass(42);
generatedTree.insert2pass(55);
generatedTree.insert2pass(33);
generatedTree.insert2pass(54);
generatedTree.insert2pass(50);
generatedTree.insert2pass(71);
generatedTree.insert2pass(28);
generatedTree.insert2pass(63);
generatedTree.insert2pass(65);
generatedTree.insert2pass(93);
generatedTree.insert2pass(82);
------------------------------

└── 45
    ├── 41
    │   ├── 25, 28, 33
    │   └── 42
    └── 54, 69, 77
        ├── 46, 50
        ├── 55, 63, 65
        ├── 70, 71
        └── 80, 82, 93

------------------------------

generatedTree.delete(46)
generatedTree.delete(25)

------------------------------

└── 54
    ├── 41, 45
    │   ├── 28, 33
    │   ├── 42
    │   └── 50
    └── 69, 77
        ├── 55, 63, 65
        ├── 70, 71
        └── 80, 82, 93


------------------------------

END - TEST 439


START - TEST 440
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(98);
generatedTree.insert2pass(30);
generatedTree.insert2pass(94);
generatedTree.insert2pass(19);
generatedTree.insert2pass(33);
generatedTree.insert2pass(83);
generatedTree.insert2pass(80);
generatedTree.insert2pass(43);
generatedTree.insert2pass(64);
------------------------------

└── 30, 54, 94
    ├── 19
    ├── 33, 43
    ├── 64, 80, 83
    └── 98

------------------------------

generatedTree.delete(54)

------------------------------

└── 30, 43, 94
    ├── 19
    ├── 33
    ├── 64, 80, 83
    └── 98


------------------------------

END - TEST 440


START - TEST 441
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(72);
generatedTree.insert2pass(82);
generatedTree.insert2pass(24);
generatedTree.insert2pass(43);
generatedTree.insert2pass(22);
generatedTree.insert2pass(58);
generatedTree.insert2pass(14);
generatedTree.insert2pass(63);
generatedTree.insert2pass(46);
generatedTree.insert2pass(66);
generatedTree.insert2pass(32);
generatedTree.insert2pass(92);
generatedTree.insert2pass(71);
------------------------------

└── 24, 58, 72
    ├── 14, 22
    ├── 32, 43, 46
    ├── 63, 66, 71
    └── 82, 92

------------------------------

generatedTree.delete(43)
generatedTree.delete(24)
generatedTree.delete(32)

------------------------------

└── 22, 58, 72
    ├── 14
    ├── 46
    ├── 63, 66, 71
    └── 82, 92


------------------------------

END - TEST 441


START - TEST 442
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(79);
generatedTree.insert2pass(42);
generatedTree.insert2pass(89);
generatedTree.insert2pass(54);
generatedTree.insert2pass(52);
generatedTree.insert2pass(35);
generatedTree.insert2pass(84);
generatedTree.insert2pass(96);
generatedTree.insert2pass(81);
generatedTree.insert2pass(44);
generatedTree.insert2pass(50);
generatedTree.insert2pass(66);
generatedTree.insert2pass(21);
generatedTree.insert2pass(49);
generatedTree.insert2pass(77);
generatedTree.insert2pass(82);
generatedTree.insert2pass(31);
------------------------------

└── 79
    ├── 35, 42, 52
    │   ├── 21, 31
    │   ├── 38
    │   ├── 44, 49, 50
    │   └── 54, 66, 77
    └── 89
        ├── 81, 82, 84
        └── 96

------------------------------

generatedTree.delete(21)
generatedTree.delete(52)
generatedTree.delete(54)

------------------------------

└── 79
    ├── 35, 42, 50
    │   ├── 31
    │   ├── 38
    │   ├── 44, 49
    │   └── 66, 77
    └── 89
        ├── 81, 82, 84
        └── 96


------------------------------

END - TEST 442


START - TEST 443
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(76);
generatedTree.insert2pass(53);
generatedTree.insert2pass(72);
generatedTree.insert2pass(91);
generatedTree.insert2pass(77);
generatedTree.insert2pass(57);
generatedTree.insert2pass(59);
generatedTree.insert2pass(88);
generatedTree.insert2pass(70);
generatedTree.insert2pass(33);
generatedTree.insert2pass(99);
generatedTree.insert2pass(71);
generatedTree.insert2pass(43);
generatedTree.insert2pass(29);
generatedTree.insert2pass(56);
generatedTree.insert2pass(67);
generatedTree.insert2pass(16);
generatedTree.insert2pass(83);
------------------------------

└── 76
    ├── 43, 57, 70
    │   ├── 16, 29, 33
    │   ├── 53, 56
    │   ├── 59, 67
    │   └── 71, 72
    └── 90
        ├── 77, 83, 88
        └── 91, 99

------------------------------

generatedTree.delete(99)
generatedTree.delete(77)
generatedTree.delete(88)

------------------------------

└── 70
    ├── 43, 57
    │   ├── 16, 29, 33
    │   ├── 53, 56
    │   └── 59, 67
    └── 76, 90
        ├── 71, 72
        ├── 83
        └── 91


------------------------------

END - TEST 443


START - TEST 444
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(79);
generatedTree.insert2pass(87);
generatedTree.insert2pass(35);
generatedTree.insert2pass(49);
generatedTree.insert2pass(78);
generatedTree.insert2pass(15);
generatedTree.insert2pass(59);
generatedTree.insert2pass(11);
generatedTree.insert2pass(25);
generatedTree.insert2pass(91);
------------------------------

└── 15, 35, 79
    ├── 11
    ├── 25, 34
    ├── 49, 59, 78
    └── 87, 91

------------------------------

generatedTree.delete(11)
generatedTree.delete(49)
generatedTree.delete(91)

------------------------------

└── 25, 35, 79
    ├── 15
    ├── 34
    ├── 59, 78
    └── 87


------------------------------

END - TEST 444


START - TEST 445
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(99);
generatedTree.insert2pass(17);
generatedTree.insert2pass(45);
generatedTree.insert2pass(44);
generatedTree.insert2pass(74);
------------------------------

└── 45
    ├── 17, 44
    └── 74, 99

------------------------------

generatedTree.delete(45)
generatedTree.delete(74)
generatedTree.delete(44)

------------------------------

└── 17, 99


------------------------------

END - TEST 445


START - TEST 446
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(12);
generatedTree.insert2pass(43);
generatedTree.insert2pass(84);
generatedTree.insert2pass(42);
generatedTree.insert2pass(31);
generatedTree.insert2pass(58);
generatedTree.insert2pass(85);
generatedTree.insert2pass(99);
generatedTree.insert2pass(23);
generatedTree.insert2pass(41);
------------------------------

└── 31, 43, 84
    ├── 12, 23
    ├── 41, 42
    ├── 58
    └── 85, 90, 99

------------------------------

generatedTree.delete(58)
generatedTree.delete(23)
generatedTree.delete(84)

------------------------------

└── 31, 42, 85
    ├── 12
    ├── 41
    ├── 43
    └── 90, 99


------------------------------

END - TEST 446


START - TEST 447
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(20);
generatedTree.insert2pass(31);
generatedTree.insert2pass(91);
generatedTree.insert2pass(46);
generatedTree.insert2pass(42);
generatedTree.insert2pass(96);
generatedTree.insert2pass(88);
generatedTree.insert2pass(18);
generatedTree.insert2pass(59);
generatedTree.insert2pass(45);
generatedTree.insert2pass(32);
generatedTree.insert2pass(84);
------------------------------

└── 46
    ├── 31
    │   ├── 18, 20
    │   └── 32, 42, 45
    └── 73, 91
        ├── 59
        ├── 84, 88
        └── 96

------------------------------

generatedTree.delete(32)
generatedTree.delete(18)
generatedTree.delete(31)

------------------------------

└── 73
    ├── 42, 46
    │   ├── 20
    │   ├── 45
    │   └── 59
    └── 91
        ├── 84, 88
        └── 96


------------------------------

END - TEST 447


START - TEST 448
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(41);
generatedTree.insert2pass(11);
generatedTree.insert2pass(42);
generatedTree.insert2pass(69);
generatedTree.insert2pass(79);
generatedTree.insert2pass(55);
generatedTree.insert2pass(34);
generatedTree.insert2pass(89);
generatedTree.insert2pass(12);
generatedTree.insert2pass(43);
generatedTree.insert2pass(82);
generatedTree.insert2pass(63);
generatedTree.insert2pass(68);
generatedTree.insert2pass(54);
------------------------------

└── 43
    ├── 41
    │   ├── 11, 12, 34
    │   └── 42
    └── 63, 69
        ├── 54, 55
        ├── 68
        └── 79, 82, 89

------------------------------

generatedTree.delete(41)
generatedTree.delete(43)

------------------------------

└── 63
    ├── 34, 54
    │   ├── 11, 12
    │   ├── 42
    │   └── 55
    └── 69
        ├── 68
        └── 79, 82, 89


------------------------------

END - TEST 448


START - TEST 449
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(58);
generatedTree.insert2pass(11);
generatedTree.insert2pass(47);
generatedTree.insert2pass(40);
generatedTree.insert2pass(35);
generatedTree.insert2pass(97);
generatedTree.insert2pass(55);
generatedTree.insert2pass(13);
generatedTree.insert2pass(27);
generatedTree.insert2pass(62);
generatedTree.insert2pass(60);
generatedTree.insert2pass(42);
generatedTree.insert2pass(23);
generatedTree.insert2pass(19);
generatedTree.insert2pass(53);
------------------------------

└── 40
    ├── 13, 27
    │   ├── 11
    │   ├── 19, 23
    │   └── 35
    └── 47, 58, 70
        ├── 42
        ├── 53, 55
        ├── 60, 62
        └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(47)
generatedTree.delete(23)

------------------------------

└── 40
    ├── 13, 27
    │   ├── 11
    │   ├── 19
    │   └── 35
    └── 53, 58, 62
        ├── 42
        ├── 55
        ├── 60
        └── 70


------------------------------

END - TEST 449


START - TEST 450
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(51);
generatedTree.insert2pass(58);
generatedTree.insert2pass(48);
generatedTree.insert2pass(75);
generatedTree.insert2pass(37);
generatedTree.insert2pass(44);
generatedTree.insert2pass(18);
generatedTree.insert2pass(65);
generatedTree.insert2pass(60);
generatedTree.insert2pass(24);
generatedTree.insert2pass(59);
generatedTree.insert2pass(76);
generatedTree.insert2pass(40);
generatedTree.insert2pass(11);
generatedTree.insert2pass(79);
generatedTree.insert2pass(34);
generatedTree.insert2pass(25);
generatedTree.insert2pass(14);
------------------------------

└── 58
    ├── 18, 37, 48
    │   ├── 11, 14
    │   ├── 24, 25, 34
    │   ├── 40, 44
    │   └── 51
    └── 75
        ├── 59, 60, 65
        └── 76, 79, 94

------------------------------

generatedTree.delete(25)
generatedTree.delete(40)

------------------------------

└── 58
    ├── 18, 37, 48
    │   ├── 11, 14
    │   ├── 24, 34
    │   ├── 44
    │   └── 51
    └── 75
        ├── 59, 60, 65
        └── 76, 79, 94


------------------------------

END - TEST 450


START - TEST 451
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(20);
generatedTree.insert2pass(31);
generatedTree.insert2pass(97);
generatedTree.insert2pass(60);
generatedTree.insert2pass(55);
generatedTree.insert2pass(62);
generatedTree.insert2pass(32);
generatedTree.insert2pass(41);
generatedTree.insert2pass(21);
generatedTree.insert2pass(18);
generatedTree.insert2pass(99);
------------------------------

└── 22, 32, 60
    ├── 18, 20, 21
    ├── 31
    ├── 41, 55
    └── 62, 97, 99

------------------------------

generatedTree.delete(97)

------------------------------

└── 22, 32, 60
    ├── 18, 20, 21
    ├── 31
    ├── 41, 55
    └── 62, 99


------------------------------

END - TEST 451


START - TEST 452
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(83);
generatedTree.insert2pass(82);
generatedTree.insert2pass(25);
generatedTree.insert2pass(36);
generatedTree.insert2pass(47);
------------------------------

└── 36, 83
    ├── 25
    ├── 47, 82
    └── 96

------------------------------

generatedTree.delete(96)
generatedTree.delete(83)
generatedTree.delete(36)

------------------------------

└── 47
    ├── 25
    └── 82


------------------------------

END - TEST 452


START - TEST 453
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(78);
generatedTree.insert2pass(35);
generatedTree.insert2pass(48);
generatedTree.insert2pass(39);
generatedTree.insert2pass(68);
generatedTree.insert2pass(61);
generatedTree.insert2pass(75);
generatedTree.insert2pass(50);
generatedTree.insert2pass(70);
generatedTree.insert2pass(74);
generatedTree.insert2pass(60);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(67);
generatedTree.insert2pass(20);
generatedTree.insert2pass(46);
generatedTree.insert2pass(52);
------------------------------

└── 40, 68
    ├── 35
    │   ├── 20, 29
    │   └── 39
    ├── 50, 61
    │   ├── 46, 48
    │   ├── 52, 60
    │   └── 67
    └── 75
        ├── 70, 74
        └── 78, 98

------------------------------

generatedTree.delete(20)
generatedTree.delete(46)

------------------------------

└── 50, 68
    ├── 35, 40
    │   ├── 29
    │   ├── 39
    │   └── 48
    ├── 61
    │   ├── 52, 60
    │   └── 67
    └── 75
        ├── 70, 74
        └── 78, 98


------------------------------

END - TEST 453


START - TEST 454
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(68);
generatedTree.insert2pass(90);
generatedTree.insert2pass(97);
generatedTree.insert2pass(22);
generatedTree.insert2pass(25);
generatedTree.insert2pass(99);
generatedTree.insert2pass(72);
generatedTree.insert2pass(69);
generatedTree.insert2pass(44);
generatedTree.insert2pass(96);
generatedTree.insert2pass(70);
generatedTree.insert2pass(93);
generatedTree.insert2pass(35);
generatedTree.insert2pass(20);
generatedTree.insert2pass(46);
------------------------------

└── 68
    ├── 22, 35
    │   ├── 17, 20
    │   ├── 25
    │   └── 44, 46
    └── 72, 97
        ├── 69, 70
        ├── 90, 93, 96
        └── 99

------------------------------

generatedTree.delete(25)
generatedTree.delete(99)
generatedTree.delete(44)

------------------------------

└── 68
    ├── 20, 35
    │   ├── 17
    │   ├── 22
    │   └── 46
    └── 72, 96
        ├── 69, 70
        ├── 90, 93
        └── 97


------------------------------

END - TEST 454


START - TEST 455
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(76);
generatedTree.insert2pass(71);
generatedTree.insert2pass(81);
generatedTree.insert2pass(36);
generatedTree.insert2pass(77);
generatedTree.insert2pass(91);
generatedTree.insert2pass(85);
generatedTree.insert2pass(24);
------------------------------

└── 71, 77
    ├── 12, 24, 36
    ├── 76
    └── 81, 85, 91

------------------------------

generatedTree.delete(85)
generatedTree.delete(81)
generatedTree.delete(71)

------------------------------

└── 36, 77
    ├── 12, 24
    ├── 76
    └── 91


------------------------------

END - TEST 455


START - TEST 456
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(28);
generatedTree.insert2pass(34);
generatedTree.insert2pass(84);
generatedTree.insert2pass(80);
generatedTree.insert2pass(58);
generatedTree.insert2pass(95);
generatedTree.insert2pass(29);
generatedTree.insert2pass(85);
------------------------------

└── 34, 80
    ├── 28, 29
    ├── 58, 73
    └── 84, 85, 95

------------------------------

generatedTree.delete(58)
generatedTree.delete(95)
generatedTree.delete(34)

------------------------------

└── 29, 80
    ├── 28
    ├── 73
    └── 84, 85


------------------------------

END - TEST 456


START - TEST 457
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(87);
generatedTree.insert2pass(50);
generatedTree.insert2pass(21);
generatedTree.insert2pass(89);
generatedTree.insert2pass(37);
generatedTree.insert2pass(64);
generatedTree.insert2pass(93);
generatedTree.insert2pass(63);
generatedTree.insert2pass(76);
generatedTree.insert2pass(94);
generatedTree.insert2pass(27);
generatedTree.insert2pass(39);
generatedTree.insert2pass(98);
generatedTree.insert2pass(44);
generatedTree.insert2pass(38);
generatedTree.insert2pass(29);
------------------------------

└── 50
    ├── 21, 37
    │   ├── 17
    │   ├── 27, 29
    │   └── 38, 39, 44
    └── 87, 93
        ├── 63, 64, 76
        ├── 89
        └── 94, 98

------------------------------

generatedTree.delete(21)
generatedTree.delete(38)

------------------------------

└── 50
    ├── 27, 37
    │   ├── 17
    │   ├── 29
    │   └── 39, 44
    └── 87, 93
        ├── 63, 64, 76
        ├── 89
        └── 94, 98


------------------------------

END - TEST 457


START - TEST 458
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(61);
generatedTree.insert2pass(91);
generatedTree.insert2pass(70);
generatedTree.insert2pass(56);
generatedTree.insert2pass(99);
generatedTree.insert2pass(30);
generatedTree.insert2pass(98);
generatedTree.insert2pass(24);
generatedTree.insert2pass(25);
generatedTree.insert2pass(86);
generatedTree.insert2pass(54);
generatedTree.insert2pass(69);
generatedTree.insert2pass(87);
generatedTree.insert2pass(43);
generatedTree.insert2pass(80);
------------------------------

└── 61
    ├── 30
    │   ├── 24, 25
    │   └── 43, 54, 56
    └── 70, 91
        ├── 69
        ├── 80, 86, 87
        └── 92, 98, 99

------------------------------

generatedTree.delete(30)
generatedTree.delete(43)
generatedTree.delete(91)

------------------------------

└── 61
    ├── 25
    │   ├── 24
    │   └── 54, 56
    └── 70, 87
        ├── 69
        ├── 80, 86
        └── 92, 98, 99


------------------------------

END - TEST 458


START - TEST 459
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(30);
generatedTree.insert2pass(84);
generatedTree.insert2pass(48);
generatedTree.insert2pass(98);
generatedTree.insert2pass(55);
generatedTree.insert2pass(57);
generatedTree.insert2pass(12);
------------------------------

└── 48, 61
    ├── 12, 30
    ├── 55, 57
    └── 84, 98

------------------------------

generatedTree.delete(84)
generatedTree.delete(61)
generatedTree.delete(48)

------------------------------

└── 30, 57
    ├── 12
    ├── 55
    └── 98


------------------------------

END - TEST 459


START - TEST 460
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(32);
generatedTree.insert2pass(20);
generatedTree.insert2pass(63);
generatedTree.insert2pass(73);
generatedTree.insert2pass(67);
generatedTree.insert2pass(95);
generatedTree.insert2pass(23);
generatedTree.insert2pass(88);
generatedTree.insert2pass(36);
generatedTree.insert2pass(56);
generatedTree.insert2pass(93);
generatedTree.insert2pass(58);
generatedTree.insert2pass(90);
generatedTree.insert2pass(85);
generatedTree.insert2pass(31);
generatedTree.insert2pass(61);
generatedTree.insert2pass(62);
generatedTree.insert2pass(22);
generatedTree.insert2pass(30);
------------------------------

└── 63
    ├── 24, 36, 58
    │   ├── 20, 22, 23
    │   ├── 30, 31, 32
    │   ├── 56
    │   └── 61, 62
    └── 73, 93
        ├── 67
        ├── 85, 88, 90
        └── 95

------------------------------

generatedTree.delete(63)
generatedTree.delete(31)

------------------------------

└── 62
    ├── 24, 36, 58
    │   ├── 20, 22, 23
    │   ├── 30, 32
    │   ├── 56
    │   └── 61
    └── 73, 93
        ├── 67
        ├── 85, 88, 90
        └── 95


------------------------------

END - TEST 460


START - TEST 461
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(55);
generatedTree.insert2pass(60);
generatedTree.insert2pass(22);
generatedTree.insert2pass(34);
generatedTree.insert2pass(27);
generatedTree.insert2pass(14);
generatedTree.insert2pass(66);
generatedTree.insert2pass(28);
------------------------------

└── 22, 34, 59
    ├── 14
    ├── 27, 28
    ├── 55
    └── 60, 66

------------------------------

generatedTree.delete(66)

------------------------------

└── 22, 34, 59
    ├── 14
    ├── 27, 28
    ├── 55
    └── 60


------------------------------

END - TEST 461


START - TEST 462
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(64);
generatedTree.insert2pass(26);
generatedTree.insert2pass(97);
generatedTree.insert2pass(48);
generatedTree.insert2pass(43);
generatedTree.insert2pass(60);
generatedTree.insert2pass(87);
generatedTree.insert2pass(42);
generatedTree.insert2pass(56);
generatedTree.insert2pass(16);
generatedTree.insert2pass(68);
------------------------------

└── 43, 52, 64
    ├── 16, 26, 42
    ├── 48
    ├── 56, 60
    └── 68, 87, 97

------------------------------

generatedTree.delete(48)
generatedTree.delete(43)

------------------------------

└── 26, 52, 64
    ├── 16
    ├── 42
    ├── 56, 60
    └── 68, 87, 97


------------------------------

END - TEST 462


START - TEST 463
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(77);
generatedTree.insert2pass(34);
generatedTree.insert2pass(23);
generatedTree.insert2pass(39);
generatedTree.insert2pass(86);
generatedTree.insert2pass(63);
generatedTree.insert2pass(96);
generatedTree.insert2pass(47);
generatedTree.insert2pass(43);
generatedTree.insert2pass(90);
generatedTree.insert2pass(66);
generatedTree.insert2pass(57);
generatedTree.insert2pass(37);
generatedTree.insert2pass(40);
generatedTree.insert2pass(69);
generatedTree.insert2pass(94);
------------------------------

└── 47
    ├── 34, 39
    │   ├── 13, 23
    │   ├── 37
    │   └── 40, 43
    └── 63, 77, 90
        ├── 57
        ├── 66, 69
        ├── 86
        └── 94, 96

------------------------------

generatedTree.delete(39)
generatedTree.delete(37)
generatedTree.delete(13)

------------------------------

└── 47
    ├── 40
    │   ├── 23, 34
    │   └── 43
    └── 63, 77, 90
        ├── 57
        ├── 66, 69
        ├── 86
        └── 94, 96


------------------------------

END - TEST 463


START - TEST 464
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(11);
generatedTree.insert2pass(33);
generatedTree.insert2pass(89);
generatedTree.insert2pass(25);
generatedTree.insert2pass(76);
generatedTree.insert2pass(12);
generatedTree.insert2pass(18);
------------------------------

└── 12, 33
    ├── 11
    ├── 18, 25
    └── 76, 77, 89

------------------------------

generatedTree.delete(11)

------------------------------

└── 18, 33
    ├── 12
    ├── 25
    └── 76, 77, 89


------------------------------

END - TEST 464


START - TEST 465
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(67);
generatedTree.insert2pass(89);
generatedTree.insert2pass(47);
generatedTree.insert2pass(34);
generatedTree.insert2pass(64);
generatedTree.insert2pass(35);
generatedTree.insert2pass(79);
generatedTree.insert2pass(96);
generatedTree.insert2pass(91);
generatedTree.insert2pass(36);
generatedTree.insert2pass(52);
generatedTree.insert2pass(87);
generatedTree.insert2pass(59);
generatedTree.insert2pass(20);
------------------------------

└── 67
    ├── 34, 47
    │   ├── 15, 20
    │   ├── 35, 36
    │   └── 52, 59, 64
    └── 89
        ├── 79, 87
        └── 91, 96

------------------------------

generatedTree.delete(34)

------------------------------

└── 67
    ├── 20, 47
    │   ├── 15
    │   ├── 35, 36
    │   └── 52, 59, 64
    └── 89
        ├── 79, 87
        └── 91, 96


------------------------------

END - TEST 465


START - TEST 466
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(73);
generatedTree.insert2pass(34);
generatedTree.insert2pass(94);
generatedTree.insert2pass(84);
generatedTree.insert2pass(31);
generatedTree.insert2pass(96);
generatedTree.insert2pass(58);
generatedTree.insert2pass(70);
generatedTree.insert2pass(92);
generatedTree.insert2pass(45);
generatedTree.insert2pass(97);
generatedTree.insert2pass(19);
generatedTree.insert2pass(77);
generatedTree.insert2pass(83);
generatedTree.insert2pass(43);
generatedTree.insert2pass(78);
generatedTree.insert2pass(81);
generatedTree.insert2pass(24);
------------------------------

└── 70
    ├── 30, 34
    │   ├── 19, 24
    │   ├── 31
    │   └── 43, 45, 58
    └── 77, 84, 94
        ├── 73
        ├── 78, 81, 83
        ├── 92
        └── 96, 97

------------------------------

generatedTree.delete(84)

------------------------------

└── 70
    ├── 30, 34
    │   ├── 19, 24
    │   ├── 31
    │   └── 43, 45, 58
    └── 77, 83, 94
        ├── 73
        ├── 78, 81
        ├── 92
        └── 96, 97


------------------------------

END - TEST 466


START - TEST 467
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(26);
generatedTree.insert2pass(99);
generatedTree.insert2pass(52);
generatedTree.insert2pass(57);
generatedTree.insert2pass(32);
generatedTree.insert2pass(18);
generatedTree.insert2pass(61);
generatedTree.insert2pass(33);
generatedTree.insert2pass(13);
generatedTree.insert2pass(74);
generatedTree.insert2pass(93);
------------------------------

└── 47
    ├── 26
    │   ├── 13, 18
    │   └── 32, 33
    └── 57, 74
        ├── 52
        ├── 61
        └── 93, 99

------------------------------

generatedTree.delete(93)
generatedTree.delete(47)

------------------------------

└── 52
    ├── 26
    │   ├── 13, 18
    │   └── 32, 33
    └── 74
        ├── 57, 61
        └── 99


------------------------------

END - TEST 467


START - TEST 468
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(89);
generatedTree.insert2pass(24);
generatedTree.insert2pass(67);
generatedTree.insert2pass(55);
generatedTree.insert2pass(98);
generatedTree.insert2pass(25);
generatedTree.insert2pass(16);
generatedTree.insert2pass(36);
generatedTree.insert2pass(66);
generatedTree.insert2pass(47);
generatedTree.insert2pass(79);
generatedTree.insert2pass(45);
generatedTree.insert2pass(62);
generatedTree.insert2pass(68);
------------------------------

└── 36
    ├── 24
    │   ├── 16, 20
    │   └── 25
    └── 55, 67, 89
        ├── 45, 47
        ├── 62, 66
        ├── 68, 79
        └── 98

------------------------------

generatedTree.delete(79)
generatedTree.delete(62)
generatedTree.delete(36)

------------------------------

└── 45
    ├── 24
    │   ├── 16, 20
    │   └── 25
    └── 55, 67, 89
        ├── 47
        ├── 66
        ├── 68
        └── 98


------------------------------

END - TEST 468


START - TEST 469
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(60);
generatedTree.insert2pass(53);
generatedTree.insert2pass(33);
generatedTree.insert2pass(23);
generatedTree.insert2pass(19);
generatedTree.insert2pass(79);
generatedTree.insert2pass(43);
generatedTree.insert2pass(89);
generatedTree.insert2pass(68);
generatedTree.insert2pass(71);
------------------------------

└── 23, 53, 79
    ├── 19
    ├── 33, 43
    ├── 60, 68, 71
    └── 89

------------------------------

generatedTree.delete(43)
generatedTree.delete(60)
generatedTree.delete(53)

------------------------------

└── 23, 68, 79
    ├── 19
    ├── 33
    ├── 71
    └── 89


------------------------------

END - TEST 469


START - TEST 470
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(36);
generatedTree.insert2pass(44);
generatedTree.insert2pass(73);
generatedTree.insert2pass(26);
generatedTree.insert2pass(69);
generatedTree.insert2pass(18);
generatedTree.insert2pass(46);
generatedTree.insert2pass(74);
generatedTree.insert2pass(94);
generatedTree.insert2pass(42);
generatedTree.insert2pass(52);
------------------------------

└── 26, 44, 69
    ├── 18
    ├── 36, 42
    ├── 46, 52
    └── 73, 74, 94

------------------------------

generatedTree.delete(26)

------------------------------

└── 36, 44, 69
    ├── 18
    ├── 42
    ├── 46, 52
    └── 73, 74, 94


------------------------------

END - TEST 470


START - TEST 471
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(96);
generatedTree.insert2pass(12);
generatedTree.insert2pass(23);
generatedTree.insert2pass(71);
generatedTree.insert2pass(95);
generatedTree.insert2pass(34);
generatedTree.insert2pass(79);
generatedTree.insert2pass(39);
generatedTree.insert2pass(20);
generatedTree.insert2pass(72);
------------------------------

└── 23, 58, 95
    ├── 12, 20
    ├── 34, 39
    ├── 71, 72, 79
    └── 96

------------------------------

generatedTree.delete(72)

------------------------------

└── 23, 58, 95
    ├── 12, 20
    ├── 34, 39
    ├── 71, 79
    └── 96


------------------------------

END - TEST 471


START - TEST 472
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(25);
generatedTree.insert2pass(30);
generatedTree.insert2pass(70);
generatedTree.insert2pass(22);
generatedTree.insert2pass(23);
generatedTree.insert2pass(41);
generatedTree.insert2pass(96);
generatedTree.insert2pass(87);
generatedTree.insert2pass(55);
------------------------------

└── 25, 41, 87
    ├── 16, 22, 23
    ├── 30
    ├── 55, 70
    └── 96

------------------------------

generatedTree.delete(25)
generatedTree.delete(70)
generatedTree.delete(30)

------------------------------

└── 22, 41, 87
    ├── 16
    ├── 23
    ├── 55
    └── 96


------------------------------

END - TEST 472


START - TEST 473
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(33);
generatedTree.insert2pass(82);
generatedTree.insert2pass(20);
generatedTree.insert2pass(17);
generatedTree.insert2pass(90);
generatedTree.insert2pass(69);
------------------------------

└── 20, 77
    ├── 17
    ├── 33, 69
    └── 82, 90

------------------------------

generatedTree.delete(77)

------------------------------

└── 20, 69
    ├── 17
    ├── 33
    └── 82, 90


------------------------------

END - TEST 473


START - TEST 474
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(38);
generatedTree.insert2pass(41);
generatedTree.insert2pass(49);
generatedTree.insert2pass(15);
generatedTree.insert2pass(78);
generatedTree.insert2pass(81);
generatedTree.insert2pass(95);
generatedTree.insert2pass(75);
generatedTree.insert2pass(66);
generatedTree.insert2pass(19);
generatedTree.insert2pass(11);
generatedTree.insert2pass(93);
generatedTree.insert2pass(29);
------------------------------

└── 65
    ├── 19, 41
    │   ├── 11, 15
    │   ├── 29, 38
    │   └── 49
    └── 81
        ├── 66, 75, 78
        └── 93, 95

------------------------------

generatedTree.delete(78)
generatedTree.delete(11)

------------------------------

└── 65
    ├── 19, 41
    │   ├── 15
    │   ├── 29, 38
    │   └── 49
    └── 81
        ├── 66, 75
        └── 93, 95


------------------------------

END - TEST 474


START - TEST 475
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(96);
generatedTree.insert2pass(74);
generatedTree.insert2pass(37);
generatedTree.insert2pass(50);
generatedTree.insert2pass(94);
------------------------------

└── 74
    ├── 24, 37, 50
    └── 94, 96

------------------------------

generatedTree.delete(50)

------------------------------

└── 74
    ├── 24, 37
    └── 94, 96


------------------------------

END - TEST 475


START - TEST 476
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(43);
generatedTree.insert2pass(50);
generatedTree.insert2pass(58);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(96);
generatedTree.insert2pass(70);
generatedTree.insert2pass(53);
generatedTree.insert2pass(81);
generatedTree.insert2pass(79);
generatedTree.insert2pass(30);
generatedTree.insert2pass(89);
generatedTree.insert2pass(71);
generatedTree.insert2pass(63);
generatedTree.insert2pass(73);
generatedTree.insert2pass(38);
------------------------------

└── 58, 74
    ├── 30, 50
    │   ├── 20
    │   ├── 38, 43
    │   └── 53
    ├── 70
    │   ├── 63
    │   └── 71, 73
    └── 81
        ├── 79
        └── 89, 96

------------------------------

generatedTree.delete(71)

------------------------------

└── 50, 74
    ├── 30
    │   ├── 20
    │   └── 38, 43
    ├── 58, 70
    │   ├── 53
    │   ├── 63
    │   └── 73
    └── 81
        ├── 79
        └── 89, 96


------------------------------

END - TEST 476


START - TEST 477
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(60);
generatedTree.insert2pass(93);
generatedTree.insert2pass(87);
generatedTree.insert2pass(11);
generatedTree.insert2pass(52);
generatedTree.insert2pass(74);
generatedTree.insert2pass(79);
generatedTree.insert2pass(66);
generatedTree.insert2pass(49);
generatedTree.insert2pass(70);
generatedTree.insert2pass(65);
generatedTree.insert2pass(48);
------------------------------

└── 79
    ├── 49, 60, 70
    │   ├── 11, 48
    │   ├── 52
    │   ├── 65, 66
    │   └── 74
    └── 93
        ├── 87
        └── 98

------------------------------

generatedTree.delete(11)

------------------------------

└── 79
    ├── 49, 60, 70
    │   ├── 48
    │   ├── 52
    │   ├── 65, 66
    │   └── 74
    └── 93
        ├── 87
        └── 98


------------------------------

END - TEST 477


START - TEST 478
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(92);
generatedTree.insert2pass(38);
generatedTree.insert2pass(67);
generatedTree.insert2pass(28);
generatedTree.insert2pass(46);
generatedTree.insert2pass(26);
generatedTree.insert2pass(12);
generatedTree.insert2pass(91);
generatedTree.insert2pass(84);
generatedTree.insert2pass(48);
generatedTree.insert2pass(64);
generatedTree.insert2pass(15);
generatedTree.insert2pass(22);
generatedTree.insert2pass(63);
generatedTree.insert2pass(17);
generatedTree.insert2pass(74);
generatedTree.insert2pass(54);
generatedTree.insert2pass(80);
generatedTree.insert2pass(71);
------------------------------

└── 38, 67
    ├── 15, 28
    │   ├── 12
    │   ├── 17, 22, 26
    │   └── 33
    ├── 48
    │   ├── 46
    │   └── 54, 63, 64
    └── 80, 91
        ├── 71, 74
        ├── 84
        └── 92

------------------------------

generatedTree.delete(38)
generatedTree.delete(84)

------------------------------

└── 33, 67
    ├── 15, 26
    │   ├── 12
    │   ├── 17, 22
    │   └── 28
    ├── 48
    │   ├── 46
    │   └── 54, 63, 64
    └── 74, 91
        ├── 71
        ├── 80
        └── 92


------------------------------

END - TEST 478


START - TEST 479
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(25);
generatedTree.insert2pass(65);
generatedTree.insert2pass(11);
generatedTree.insert2pass(73);
generatedTree.insert2pass(87);
generatedTree.insert2pass(99);
------------------------------

└── 54, 73
    ├── 11, 25
    ├── 65
    └── 87, 99

------------------------------

generatedTree.delete(54)
generatedTree.delete(87)

------------------------------

└── 25, 73
    ├── 11
    ├── 65
    └── 99


------------------------------

END - TEST 479


START - TEST 480
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(85);
generatedTree.insert2pass(51);
generatedTree.insert2pass(38);
generatedTree.insert2pass(32);
generatedTree.insert2pass(69);
generatedTree.insert2pass(84);
generatedTree.insert2pass(39);
generatedTree.insert2pass(88);
generatedTree.insert2pass(62);
generatedTree.insert2pass(76);
generatedTree.insert2pass(58);
generatedTree.insert2pass(59);
generatedTree.insert2pass(71);
generatedTree.insert2pass(35);
------------------------------

└── 69
    ├── 38, 51
    │   ├── 32, 35
    │   ├── 39
    │   └── 58, 59, 62
    └── 84
        ├── 71, 76
        └── 85, 88

------------------------------

generatedTree.delete(76)
generatedTree.delete(71)

------------------------------

└── 51
    ├── 38
    │   ├── 32, 35
    │   └── 39
    └── 62, 84
        ├── 58, 59
        ├── 69
        └── 85, 88


------------------------------

END - TEST 480


START - TEST 481
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(59);
generatedTree.insert2pass(88);
generatedTree.insert2pass(77);
generatedTree.insert2pass(82);
------------------------------

└── 59
    ├── 31
    └── 77, 82, 88

------------------------------

generatedTree.delete(59)

------------------------------

└── 77
    ├── 31
    └── 82, 88


------------------------------

END - TEST 481


START - TEST 482
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(46);
generatedTree.insert2pass(78);
generatedTree.insert2pass(42);
generatedTree.insert2pass(94);
------------------------------

└── 46
    ├── 29, 42
    └── 78, 94

------------------------------

generatedTree.delete(46)
generatedTree.delete(94)
generatedTree.delete(29)

------------------------------

└── 42, 78


------------------------------

END - TEST 482


START - TEST 483
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(86);
generatedTree.insert2pass(82);
generatedTree.insert2pass(21);
generatedTree.insert2pass(85);
generatedTree.insert2pass(60);
generatedTree.insert2pass(97);
generatedTree.insert2pass(96);
generatedTree.insert2pass(17);
generatedTree.insert2pass(62);
generatedTree.insert2pass(68);
generatedTree.insert2pass(32);
generatedTree.insert2pass(16);
generatedTree.insert2pass(65);
generatedTree.insert2pass(40);
generatedTree.insert2pass(75);
generatedTree.insert2pass(41);
generatedTree.insert2pass(92);
------------------------------

└── 82
    ├── 21, 60, 68
    │   ├── 16, 17
    │   ├── 32, 40, 41
    │   ├── 62, 65
    │   └── 75, 78
    └── 86
        ├── 85
        └── 92, 96, 97

------------------------------

generatedTree.delete(75)
generatedTree.delete(41)

------------------------------

└── 82
    ├── 21, 60, 68
    │   ├── 16, 17
    │   ├── 32, 40
    │   ├── 62, 65
    │   └── 78
    └── 86
        ├── 85
        └── 92, 96, 97


------------------------------

END - TEST 483


START - TEST 484
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(45);
generatedTree.insert2pass(28);
generatedTree.insert2pass(68);
generatedTree.insert2pass(54);
generatedTree.insert2pass(82);
generatedTree.insert2pass(97);
generatedTree.insert2pass(96);
generatedTree.insert2pass(21);
generatedTree.insert2pass(44);
generatedTree.insert2pass(57);
generatedTree.insert2pass(24);
generatedTree.insert2pass(94);
generatedTree.insert2pass(31);
generatedTree.insert2pass(67);
generatedTree.insert2pass(50);
generatedTree.insert2pass(79);
generatedTree.insert2pass(15);
generatedTree.insert2pass(34);
------------------------------

└── 54
    ├── 24, 40
    │   ├── 15, 21
    │   ├── 28, 31, 34
    │   └── 44, 45, 50
    └── 67, 82
        ├── 57
        ├── 68, 79
        └── 94, 96, 97

------------------------------

generatedTree.delete(24)

------------------------------

└── 54
    ├── 21, 40
    │   ├── 15
    │   ├── 28, 31, 34
    │   └── 44, 45, 50
    └── 67, 82
        ├── 57
        ├── 68, 79
        └── 94, 96, 97


------------------------------

END - TEST 484


START - TEST 485
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(96);
generatedTree.insert2pass(98);
generatedTree.insert2pass(22);
generatedTree.insert2pass(12);
generatedTree.insert2pass(72);
generatedTree.insert2pass(93);
generatedTree.insert2pass(45);
generatedTree.insert2pass(55);
generatedTree.insert2pass(82);
------------------------------

└── 90
    ├── 22, 55
    │   ├── 12
    │   ├── 45
    │   └── 72, 82
    └── 96
        ├── 93
        └── 98

------------------------------

generatedTree.delete(72)

------------------------------

└── 90
    ├── 22, 55
    │   ├── 12
    │   ├── 45
    │   └── 82
    └── 96
        ├── 93
        └── 98


------------------------------

END - TEST 485


START - TEST 486
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(18);
generatedTree.insert2pass(30);
generatedTree.insert2pass(85);
generatedTree.insert2pass(98);
generatedTree.insert2pass(32);
generatedTree.insert2pass(94);
generatedTree.insert2pass(54);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(92);
------------------------------

└── 30, 46, 85
    ├── 18
    ├── 32, 44
    ├── 54, 58
    └── 92, 94, 98

------------------------------

generatedTree.delete(98)
generatedTree.delete(58)
generatedTree.delete(18)

------------------------------

└── 32, 46, 85
    ├── 30
    ├── 44
    ├── 54
    └── 92, 94


------------------------------

END - TEST 486


START - TEST 487
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(80);
generatedTree.insert2pass(89);
generatedTree.insert2pass(58);
generatedTree.insert2pass(52);
generatedTree.insert2pass(81);
generatedTree.insert2pass(34);
generatedTree.insert2pass(64);
------------------------------

└── 52, 80
    ├── 34
    ├── 58, 64
    └── 81, 89

------------------------------

generatedTree.delete(81)
generatedTree.delete(58)
generatedTree.delete(64)

------------------------------

└── 80
    ├── 34, 52
    └── 89


------------------------------

END - TEST 487


START - TEST 488
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(13);
generatedTree.insert2pass(92);
generatedTree.insert2pass(26);
generatedTree.insert2pass(79);
generatedTree.insert2pass(89);
generatedTree.insert2pass(95);
generatedTree.insert2pass(81);
generatedTree.insert2pass(77);
generatedTree.insert2pass(30);
generatedTree.insert2pass(31);
generatedTree.insert2pass(35);
------------------------------

└── 79
    ├── 16, 30
    │   ├── 13
    │   ├── 26
    │   └── 31, 35, 77
    └── 92
        ├── 81, 89
        └── 95

------------------------------

generatedTree.delete(13)
generatedTree.delete(30)

------------------------------

└── 26, 79, 92
    ├── 16
    ├── 31, 35, 77
    ├── 81, 89
    └── 95


------------------------------

END - TEST 488


START - TEST 489
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(72);
generatedTree.insert2pass(64);
generatedTree.insert2pass(65);
generatedTree.insert2pass(79);
generatedTree.insert2pass(51);
generatedTree.insert2pass(77);
generatedTree.insert2pass(23);
generatedTree.insert2pass(98);
generatedTree.insert2pass(14);
generatedTree.insert2pass(61);
generatedTree.insert2pass(69);
generatedTree.insert2pass(81);
generatedTree.insert2pass(26);
generatedTree.insert2pass(94);
------------------------------

└── 72
    ├── 23, 64
    │   ├── 14
    │   ├── 26, 51, 61
    │   └── 65, 69
    └── 79, 87
        ├── 77
        ├── 81
        └── 94, 98

------------------------------

generatedTree.delete(23)
generatedTree.delete(65)
generatedTree.delete(94)

------------------------------

└── 72
    ├── 26, 64
    │   ├── 14
    │   ├── 51, 61
    │   └── 69
    └── 79, 87
        ├── 77
        ├── 81
        └── 98


------------------------------

END - TEST 489


START - TEST 490
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(85);
generatedTree.insert2pass(14);
generatedTree.insert2pass(21);
generatedTree.insert2pass(46);
generatedTree.insert2pass(67);
------------------------------

└── 61
    ├── 14, 21, 46
    └── 67, 85

------------------------------

generatedTree.delete(67)

------------------------------

└── 61
    ├── 14, 21, 46
    └── 85


------------------------------

END - TEST 490


START - TEST 491
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(42);
generatedTree.insert2pass(71);
generatedTree.insert2pass(34);
generatedTree.insert2pass(99);
generatedTree.insert2pass(86);
generatedTree.insert2pass(23);
generatedTree.insert2pass(83);
generatedTree.insert2pass(51);
generatedTree.insert2pass(39);
generatedTree.insert2pass(52);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
generatedTree.insert2pass(59);
generatedTree.insert2pass(89);
generatedTree.insert2pass(84);
generatedTree.insert2pass(75);
generatedTree.insert2pass(98);
generatedTree.insert2pass(88);
generatedTree.insert2pass(24);
------------------------------

└── 46, 71
    ├── 34
    │   ├── 15, 23, 24
    │   └── 39, 42
    ├── 52
    │   ├── 51
    │   └── 59, 63
    └── 86, 98
        ├── 75, 83, 84
        ├── 88, 89
        └── 99

------------------------------

generatedTree.delete(75)

------------------------------

└── 46, 71
    ├── 34
    │   ├── 15, 23, 24
    │   └── 39, 42
    ├── 52
    │   ├── 51
    │   └── 59, 63
    └── 86, 98
        ├── 83, 84
        ├── 88, 89
        └── 99


------------------------------

END - TEST 491


START - TEST 492
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(85);
generatedTree.insert2pass(44);
generatedTree.insert2pass(76);
generatedTree.insert2pass(21);
generatedTree.insert2pass(41);
generatedTree.insert2pass(36);
generatedTree.insert2pass(53);
generatedTree.insert2pass(71);
generatedTree.insert2pass(80);
generatedTree.insert2pass(22);
------------------------------

└── 71
    ├── 36, 44
    │   ├── 21, 22
    │   ├── 41
    │   └── 53
    └── 85
        ├── 76, 80
        └── 86

------------------------------

generatedTree.delete(53)

------------------------------

└── 71
    ├── 36
    │   ├── 21, 22
    │   └── 41, 44
    └── 85
        ├── 76, 80
        └── 86


------------------------------

END - TEST 492


START - TEST 493
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(96);
generatedTree.insert2pass(27);
generatedTree.insert2pass(16);
generatedTree.insert2pass(23);
generatedTree.insert2pass(69);
generatedTree.insert2pass(88);
generatedTree.insert2pass(81);
generatedTree.insert2pass(86);
generatedTree.insert2pass(65);
generatedTree.insert2pass(29);
generatedTree.insert2pass(98);
generatedTree.insert2pass(64);
generatedTree.insert2pass(82);
generatedTree.insert2pass(36);
generatedTree.insert2pass(54);
------------------------------

└── 78
    ├── 23, 29, 65
    │   ├── 16
    │   ├── 27
    │   ├── 36, 54, 64
    │   └── 69
    └── 88
        ├── 81, 82, 86
        └── 96, 98

------------------------------

generatedTree.delete(54)

------------------------------

└── 78
    ├── 23, 29, 65
    │   ├── 16
    │   ├── 27
    │   ├── 36, 64
    │   └── 69
    └── 88
        ├── 81, 82, 86
        └── 96, 98


------------------------------

END - TEST 493


START - TEST 494
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(37);
generatedTree.insert2pass(56);
generatedTree.insert2pass(69);
generatedTree.insert2pass(11);
generatedTree.insert2pass(23);
generatedTree.insert2pass(19);
generatedTree.insert2pass(74);
generatedTree.insert2pass(58);
generatedTree.insert2pass(51);
generatedTree.insert2pass(39);
generatedTree.insert2pass(42);
------------------------------

└── 56
    ├── 23, 39
    │   ├── 11, 19
    │   ├── 37
    │   └── 42, 51
    └── 69
        ├── 58, 63
        └── 74

------------------------------

generatedTree.delete(42)
generatedTree.delete(58)

------------------------------

└── 39
    ├── 23
    │   ├── 11, 19
    │   └── 37
    └── 56, 69
        ├── 51
        ├── 63
        └── 74


------------------------------

END - TEST 494


START - TEST 495
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(99);
generatedTree.insert2pass(54);
generatedTree.insert2pass(72);
generatedTree.insert2pass(25);
generatedTree.insert2pass(70);
generatedTree.insert2pass(85);
generatedTree.insert2pass(84);
generatedTree.insert2pass(90);
generatedTree.insert2pass(15);
generatedTree.insert2pass(69);
generatedTree.insert2pass(74);
generatedTree.insert2pass(43);
generatedTree.insert2pass(64);
generatedTree.insert2pass(26);
generatedTree.insert2pass(57);
generatedTree.insert2pass(38);
generatedTree.insert2pass(98);
generatedTree.insert2pass(36);
------------------------------

└── 54, 75
    ├── 25, 38
    │   ├── 15
    │   ├── 26, 36
    │   └── 43
    ├── 70
    │   ├── 57, 64, 69
    │   └── 72, 74
    └── 85
        ├── 84
        └── 90, 98, 99

------------------------------

generatedTree.delete(70)
generatedTree.delete(54)
generatedTree.delete(15)

------------------------------

└── 57, 75
    ├── 26, 38
    │   ├── 25
    │   ├── 36
    │   └── 43
    ├── 69
    │   ├── 64
    │   └── 72, 74
    └── 85
        ├── 84
        └── 90, 98, 99


------------------------------

END - TEST 495


START - TEST 496
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(23);
generatedTree.insert2pass(98);
generatedTree.insert2pass(59);
generatedTree.insert2pass(14);
generatedTree.insert2pass(95);
generatedTree.insert2pass(36);
generatedTree.insert2pass(74);
generatedTree.insert2pass(22);
generatedTree.insert2pass(31);
generatedTree.insert2pass(79);
------------------------------

└── 23, 58, 95
    ├── 14, 22
    ├── 31, 36
    ├── 59, 74, 79
    └── 98

------------------------------

generatedTree.delete(23)

------------------------------

└── 22, 58, 95
    ├── 14
    ├── 31, 36
    ├── 59, 74, 79
    └── 98


------------------------------

END - TEST 496


START - TEST 497
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(88);
generatedTree.insert2pass(72);
generatedTree.insert2pass(30);
generatedTree.insert2pass(89);
generatedTree.insert2pass(24);
generatedTree.insert2pass(35);
generatedTree.insert2pass(82);
generatedTree.insert2pass(18);
generatedTree.insert2pass(23);
generatedTree.insert2pass(14);
generatedTree.insert2pass(64);
generatedTree.insert2pass(46);
generatedTree.insert2pass(95);
generatedTree.insert2pass(57);
generatedTree.insert2pass(38);
------------------------------

└── 29, 72
    ├── 23
    │   ├── 14, 18
    │   └── 24
    ├── 35, 57
    │   ├── 30
    │   ├── 38, 46
    │   └── 64
    └── 88
        ├── 82
        └── 89, 95

------------------------------

generatedTree.delete(89)

------------------------------

└── 29, 57
    ├── 23
    │   ├── 14, 18
    │   └── 24
    ├── 35
    │   ├── 30
    │   └── 38, 46
    └── 72, 88
        ├── 64
        ├── 82
        └── 95


------------------------------

END - TEST 497


START - TEST 498
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(25);
generatedTree.insert2pass(63);
generatedTree.insert2pass(30);
generatedTree.insert2pass(27);
generatedTree.insert2pass(97);
generatedTree.insert2pass(48);
generatedTree.insert2pass(60);
generatedTree.insert2pass(93);
generatedTree.insert2pass(49);
generatedTree.insert2pass(20);
generatedTree.insert2pass(37);
generatedTree.insert2pass(11);
generatedTree.insert2pass(29);
------------------------------

└── 51
    ├── 27, 48
    │   ├── 11, 20, 25
    │   ├── 29, 30, 37
    │   └── 49
    └── 63
        ├── 60
        └── 93, 97

------------------------------

generatedTree.delete(48)
generatedTree.delete(51)
generatedTree.delete(30)

------------------------------

└── 49
    ├── 27
    │   ├── 11, 20, 25
    │   └── 29, 37
    └── 63
        ├── 60
        └── 93, 97


------------------------------

END - TEST 498


START - TEST 499
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(23);
generatedTree.insert2pass(26);
generatedTree.insert2pass(60);
generatedTree.insert2pass(98);
------------------------------

└── 26
    ├── 23
    └── 30, 60, 98

------------------------------

generatedTree.delete(60)
generatedTree.delete(30)
generatedTree.delete(26)

------------------------------

└── 23, 98


------------------------------

END - TEST 499
